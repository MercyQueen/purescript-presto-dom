// Generated by purs bundle 0.12.3
var PS = {};
(function(exports) {
    "use strict";

  exports.arrayMap = function (f) {
    return function (arr) {
      var l = arr.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(arr[i]);
      }
      return result;
    };
  };
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Semigroupoid = function (compose) {
      this.compose = compose;
  };
  var semigroupoidFn = new Semigroupoid(function (f) {
      return function (g) {
          return function (x) {
              return f(g(x));
          };
      };
  });
  var compose = function (dict) {
      return dict.compose;
  };
  var composeFlipped = function (dictSemigroupoid) {
      return function (f) {
          return function (g) {
              return compose(dictSemigroupoid)(g)(f);
          };
      };
  };
  exports["compose"] = compose;
  exports["Semigroupoid"] = Semigroupoid;
  exports["composeFlipped"] = composeFlipped;
  exports["semigroupoidFn"] = semigroupoidFn;
})(PS["Control.Semigroupoid"] = PS["Control.Semigroupoid"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];                 
  var Category = function (Semigroupoid0, identity) {
      this.Semigroupoid0 = Semigroupoid0;
      this.identity = identity;
  };
  var identity = function (dict) {
      return dict.identity;
  };
  var categoryFn = new Category(function () {
      return Control_Semigroupoid.semigroupoidFn;
  }, function (x) {
      return x;
  });
  exports["Category"] = Category;
  exports["identity"] = identity;
  exports["categoryFn"] = categoryFn;
})(PS["Control.Category"] = PS["Control.Category"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var otherwise = true;
  exports["otherwise"] = otherwise;
})(PS["Data.Boolean"] = PS["Data.Boolean"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return f(a)(b);
          };
      };
  };
  var $$const = function (a) {
      return function (v) {
          return a;
      };
  };
  var applyFlipped = function (x) {
      return function (f) {
          return f(x);
      };
  };
  exports["flip"] = flip;
  exports["const"] = $$const;
  exports["applyFlipped"] = applyFlipped;
})(PS["Data.Function"] = PS["Data.Function"] || {});
(function(exports) {
    "use strict";

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function(exports) {
    "use strict";

  exports.showIntImpl = function (n) {
    return n.toString();
  };

  exports.showStringImpl = function (s) {
    var l = s.length;
    return "\"" + s.replace(
      /[\0-\x1F\x7F"\\]/g, // eslint-disable-line no-control-regex
      function (c, i) {
        switch (c) {
          case "\"":
          case "\\":
            return "\\" + c;
          case "\x07": return "\\a";
          case "\b": return "\\b";
          case "\f": return "\\f";
          case "\n": return "\\n";
          case "\r": return "\\r";
          case "\t": return "\\t";
          case "\v": return "\\v";
        }
        var k = i + 1;
        var empty = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
        return "\\" + c.charCodeAt(0).toString(10) + empty;
      }
    ) + "\"";
  };

  exports.showArrayImpl = function (f) {
    return function (xs) {
      var ss = [];
      for (var i = 0, l = xs.length; i < l; i++) {
        ss[i] = f(xs[i]);
      }
      return "[" + ss.join(",") + "]";
    };
  };

  exports.join = function (separator) {
    return function (xs) {
      return xs.join(separator);
    };
  };
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var $foreign = PS["Data.Symbol"];      
  var SProxy = (function () {
      function SProxy() {

      };
      SProxy.value = new SProxy();
      return SProxy;
  })();
  var IsSymbol = function (reflectSymbol) {
      this.reflectSymbol = reflectSymbol;
  };
  var reflectSymbol = function (dict) {
      return dict.reflectSymbol;
  };
  exports["IsSymbol"] = IsSymbol;
  exports["reflectSymbol"] = reflectSymbol;
  exports["SProxy"] = SProxy;
})(PS["Data.Symbol"] = PS["Data.Symbol"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var RLProxy = (function () {
      function RLProxy() {

      };
      RLProxy.value = new RLProxy();
      return RLProxy;
  })();
  exports["RLProxy"] = RLProxy;
})(PS["Type.Data.RowList"] = PS["Type.Data.RowList"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var $foreign = PS["Data.Show"];
  var Data_Symbol = PS["Data.Symbol"];
  var Record_Unsafe = PS["Record.Unsafe"];
  var Type_Data_RowList = PS["Type.Data.RowList"];                 
  var Show = function (show) {
      this.show = show;
  };
  var showString = new Show($foreign.showStringImpl);
  var showInt = new Show($foreign.showIntImpl);
  var show = function (dict) {
      return dict.show;
  };
  var showArray = function (dictShow) {
      return new Show($foreign.showArrayImpl(show(dictShow)));
  };
  exports["Show"] = Show;
  exports["show"] = show;
  exports["showInt"] = showInt;
  exports["showString"] = showString;
  exports["showArray"] = showArray;
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var $foreign = PS["Data.Unit"];
  var Data_Show = PS["Data.Show"];
  exports["unit"] = $foreign.unit;
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var $foreign = PS["Data.Functor"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Unit = PS["Data.Unit"];                 
  var Functor = function (map) {
      this.map = map;
  };
  var map = function (dict) {
      return dict.map;
  };
  var $$void = function (dictFunctor) {
      return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
  };
  var functorFn = new Functor(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn));
  var functorArray = new Functor($foreign.arrayMap);
  exports["Functor"] = Functor;
  exports["map"] = map;
  exports["void"] = $$void;
  exports["functorFn"] = functorFn;
  exports["functorArray"] = functorArray;
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function(exports) {
    "use strict";

  exports.concatString = function (s1) {
    return function (s2) {
      return s1 + s2;
    };
  };

  exports.concatArray = function (xs) {
    return function (ys) {
      if (xs.length === 0) return ys;
      if (ys.length === 0) return xs;
      return xs.concat(ys);
    };
  };
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var $foreign = PS["Data.Semigroup"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];
  var Record_Unsafe = PS["Record.Unsafe"];
  var Type_Data_RowList = PS["Type.Data.RowList"];                 
  var Semigroup = function (append) {
      this.append = append;
  }; 
  var semigroupString = new Semigroup($foreign.concatString);
  var semigroupArray = new Semigroup($foreign.concatArray);
  var append = function (dict) {
      return dict.append;
  };
  exports["Semigroup"] = Semigroup;
  exports["append"] = append;
  exports["semigroupString"] = semigroupString;
  exports["semigroupArray"] = semigroupArray;
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Data_Functor = PS["Data.Functor"];
  var Data_Semigroup = PS["Data.Semigroup"];                 
  var Alt = function (Functor0, alt) {
      this.Functor0 = Functor0;
      this.alt = alt;
  };                                                       
  var alt = function (dict) {
      return dict.alt;
  };
  exports["Alt"] = Alt;
  exports["alt"] = alt;
})(PS["Control.Alt"] = PS["Control.Alt"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var $foreign = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];                 
  var Apply = function (Functor0, apply) {
      this.Functor0 = Functor0;
      this.apply = apply;
  };                      
  var apply = function (dict) {
      return dict.apply;
  };
  var applySecond = function (dictApply) {
      return function (a) {
          return function (b) {
              return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)))(a))(b);
          };
      };
  };
  exports["Apply"] = Apply;
  exports["apply"] = apply;
  exports["applySecond"] = applySecond;
})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Control_Apply = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];                 
  var Applicative = function (Apply0, pure) {
      this.Apply0 = Apply0;
      this.pure = pure;
  };
  var pure = function (dict) {
      return dict.pure;
  };
  var unless = function (dictApplicative) {
      return function (v) {
          return function (v1) {
              if (!v) {
                  return v1;
              };
              if (v) {
                  return pure(dictApplicative)(Data_Unit.unit);
              };
              throw new Error("Failed pattern match at Control.Applicative (line 62, column 1 - line 62, column 65): " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
          };
      };
  };
  exports["Applicative"] = Applicative;
  exports["pure"] = pure;
  exports["liftA1"] = liftA1;
  exports["unless"] = unless;
})(PS["Control.Applicative"] = PS["Control.Applicative"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Data_Functor = PS["Data.Functor"];                 
  var Plus = function (Alt0, empty) {
      this.Alt0 = Alt0;
      this.empty = empty;
  };       
  var empty = function (dict) {
      return dict.empty;
  };
  exports["Plus"] = Plus;
  exports["empty"] = empty;
})(PS["Control.Plus"] = PS["Control.Plus"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Functor = PS["Data.Functor"];                 
  var Alternative = function (Applicative0, Plus1) {
      this.Applicative0 = Applicative0;
      this.Plus1 = Plus1;
  };
  exports["Alternative"] = Alternative;
})(PS["Control.Alternative"] = PS["Control.Alternative"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var $foreign = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];                 
  var Bind = function (Apply0, bind) {
      this.Apply0 = Apply0;
      this.bind = bind;
  };
  var Discard = function (discard) {
      this.discard = discard;
  };
  var discard = function (dict) {
      return dict.discard;
  };                     
  var bind = function (dict) {
      return dict.bind;
  };
  var bindFlipped = function (dictBind) {
      return Data_Function.flip(bind(dictBind));
  };
  var composeKleisliFlipped = function (dictBind) {
      return function (f) {
          return function (g) {
              return function (a) {
                  return bindFlipped(dictBind)(f)(g(a));
              };
          };
      };
  };
  var composeKleisli = function (dictBind) {
      return function (f) {
          return function (g) {
              return function (a) {
                  return bind(dictBind)(f(a))(g);
              };
          };
      };
  };
  var discardUnit = new Discard(function (dictBind) {
      return bind(dictBind);
  });
  var ifM = function (dictBind) {
      return function (cond) {
          return function (t) {
              return function (f) {
                  return bind(dictBind)(cond)(function (cond$prime) {
                      if (cond$prime) {
                          return t;
                      };
                      return f;
                  });
              };
          };
      };
  };
  exports["Bind"] = Bind;
  exports["bind"] = bind;
  exports["bindFlipped"] = bindFlipped;
  exports["Discard"] = Discard;
  exports["discard"] = discard;
  exports["composeKleisli"] = composeKleisli;
  exports["composeKleisliFlipped"] = composeKleisliFlipped;
  exports["ifM"] = ifM;
  exports["discardUnit"] = discardUnit;
})(PS["Control.Bind"] = PS["Control.Bind"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];                 
  var Monad = function (Applicative0, Bind1) {
      this.Applicative0 = Applicative0;
      this.Bind1 = Bind1;
  };
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad.Bind1())(f)(function (v) {
                  return Control_Bind.bind(dictMonad.Bind1())(a)(function (v1) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(v(v1));
                  });
              });
          };
      };
  };
  exports["Monad"] = Monad;
  exports["ap"] = ap;
})(PS["Control.Monad"] = PS["Control.Monad"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Control_Category = PS["Control.Category"];                 
  var Bifunctor = function (bimap) {
      this.bimap = bimap;
  };
  var bimap = function (dict) {
      return dict.bimap;
  };
  var lmap = function (dictBifunctor) {
      return function (f) {
          return bimap(dictBifunctor)(f)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  exports["bimap"] = bimap;
  exports["Bifunctor"] = Bifunctor;
  exports["lmap"] = lmap;
})(PS["Data.Bifunctor"] = PS["Data.Bifunctor"] || {});
(function(exports) {
    "use strict";

  exports.refEq = function (r1) {
    return function (r2) {
      return r1 === r2;
    };
  };
})(PS["Data.Eq"] = PS["Data.Eq"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var $foreign = PS["Data.Eq"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];
  var Record_Unsafe = PS["Record.Unsafe"];
  var Type_Data_RowList = PS["Type.Data.RowList"];                 
  var Eq = function (eq) {
      this.eq = eq;
  }; 
  var eqString = new Eq($foreign.refEq);
  var eq = function (dict) {
      return dict.eq;
  };
  exports["Eq"] = Eq;
  exports["eq"] = eq;
  exports["eqString"] = eqString;
})(PS["Data.Eq"] = PS["Data.Eq"] || {});
(function(exports) {
    "use strict";

  exports.foldrArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = len - 1; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  };

  exports.foldlArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = 0; i < len; i++) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  };
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_Unit = PS["Data.Unit"];
  var Record_Unsafe = PS["Record.Unsafe"];
  var Type_Data_RowList = PS["Type.Data.RowList"];                 
  var Monoid = function (Semigroup0, mempty) {
      this.Semigroup0 = Semigroup0;
      this.mempty = mempty;
  };                 
  var monoidString = new Monoid(function () {
      return Data_Semigroup.semigroupString;
  }, "");
  var mempty = function (dict) {
      return dict.mempty;
  };
  exports["Monoid"] = Monoid;
  exports["mempty"] = mempty;
  exports["monoidString"] = monoidString;
})(PS["Data.Monoid"] = PS["Data.Monoid"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];                 
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var maybe = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Nothing) {
                  return v;
              };
              if (v2 instanceof Just) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe (line 217, column 1 - line 217, column 51): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };                                                         
  var isJust = maybe(false)(Data_Function["const"](true));
  var fromJust = function (dictPartial) {
      return function (v) {
          if (v instanceof Just) {
              return v.value0;
          };
          throw new Error("Failed pattern match at Data.Maybe (line 268, column 1 - line 268, column 46): " + [ v.constructor.name ]);
      };
  };
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["maybe"] = maybe;
  exports["isJust"] = isJust;
  exports["fromJust"] = fromJust;
})(PS["Data.Maybe"] = PS["Data.Maybe"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Endo = PS["Data.Monoid.Endo"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Data_Semigroup_First = PS["Data.Semigroup.First"];
  var Data_Semigroup_Last = PS["Data.Semigroup.Last"];
  var Prelude = PS["Prelude"];                 
  var Newtype = function (unwrap, wrap) {
      this.unwrap = unwrap;
      this.wrap = wrap;
  };
  var wrap = function (dict) {
      return dict.wrap;
  };
  var unwrap = function (dict) {
      return dict.unwrap;
  };
  var un = function (dictNewtype) {
      return function (v) {
          return unwrap(dictNewtype);
      };
  };
  exports["unwrap"] = unwrap;
  exports["wrap"] = wrap;
  exports["Newtype"] = Newtype;
  exports["un"] = un;
})(PS["Data.Newtype"] = PS["Data.Newtype"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var $foreign = PS["Data.Foldable"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Endo = PS["Data.Monoid.Endo"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];                 
  var Foldable = function (foldMap, foldl, foldr) {
      this.foldMap = foldMap;
      this.foldl = foldl;
      this.foldr = foldr;
  };
  var foldr = function (dict) {
      return dict.foldr;
  };
  var oneOfMap = function (dictFoldable) {
      return function (dictPlus) {
          return function (f) {
              return foldr(dictFoldable)(function ($194) {
                  return Control_Alt.alt(dictPlus.Alt0())(f($194));
              })(Control_Plus.empty(dictPlus));
          };
      };
  };
  var traverse_ = function (dictApplicative) {
      return function (dictFoldable) {
          return function (f) {
              return foldr(dictFoldable)(function ($195) {
                  return Control_Apply.applySecond(dictApplicative.Apply0())(f($195));
              })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
          };
      };
  };
  var for_ = function (dictApplicative) {
      return function (dictFoldable) {
          return Data_Function.flip(traverse_(dictApplicative)(dictFoldable));
      };
  };
  var sequence_ = function (dictApplicative) {
      return function (dictFoldable) {
          return traverse_(dictApplicative)(dictFoldable)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  var foldl = function (dict) {
      return dict.foldl;
  };
  var intercalate = function (dictFoldable) {
      return function (dictMonoid) {
          return function (sep) {
              return function (xs) {
                  var go = function (v) {
                      return function (x) {
                          if (v.init) {
                              return {
                                  init: false,
                                  acc: x
                              };
                          };
                          return {
                              init: false,
                              acc: Data_Semigroup.append(dictMonoid.Semigroup0())(v.acc)(Data_Semigroup.append(dictMonoid.Semigroup0())(sep)(x))
                          };
                      };
                  };
                  return (foldl(dictFoldable)(go)({
                      init: true,
                      acc: Data_Monoid.mempty(dictMonoid)
                  })(xs)).acc;
              };
          };
      };
  }; 
  var foldableMaybe = new Foldable(function (dictMonoid) {
      return function (f) {
          return function (v) {
              if (v instanceof Data_Maybe.Nothing) {
                  return Data_Monoid.mempty(dictMonoid);
              };
              if (v instanceof Data_Maybe.Just) {
                  return f(v.value0);
              };
              throw new Error("Failed pattern match at Data.Foldable (line 129, column 1 - line 129, column 41): " + [ f.constructor.name, v.constructor.name ]);
          };
      };
  }, function (v) {
      return function (z) {
          return function (v1) {
              if (v1 instanceof Data_Maybe.Nothing) {
                  return z;
              };
              if (v1 instanceof Data_Maybe.Just) {
                  return v(z)(v1.value0);
              };
              throw new Error("Failed pattern match at Data.Foldable (line 129, column 1 - line 129, column 41): " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
          };
      };
  }, function (v) {
      return function (z) {
          return function (v1) {
              if (v1 instanceof Data_Maybe.Nothing) {
                  return z;
              };
              if (v1 instanceof Data_Maybe.Just) {
                  return v(v1.value0)(z);
              };
              throw new Error("Failed pattern match at Data.Foldable (line 129, column 1 - line 129, column 41): " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
          };
      };
  });
  var foldMapDefaultR = function (dictFoldable) {
      return function (dictMonoid) {
          return function (f) {
              return foldr(dictFoldable)(function (x) {
                  return function (acc) {
                      return Data_Semigroup.append(dictMonoid.Semigroup0())(f(x))(acc);
                  };
              })(Data_Monoid.mempty(dictMonoid));
          };
      };
  };
  var foldableArray = new Foldable(function (dictMonoid) {
      return foldMapDefaultR(foldableArray)(dictMonoid);
  }, $foreign.foldlArray, $foreign.foldrArray);
  var foldMap = function (dict) {
      return dict.foldMap;
  };
  exports["Foldable"] = Foldable;
  exports["foldr"] = foldr;
  exports["foldl"] = foldl;
  exports["foldMap"] = foldMap;
  exports["foldMapDefaultR"] = foldMapDefaultR;
  exports["traverse_"] = traverse_;
  exports["for_"] = for_;
  exports["sequence_"] = sequence_;
  exports["oneOfMap"] = oneOfMap;
  exports["intercalate"] = intercalate;
  exports["foldableArray"] = foldableArray;
  exports["foldableMaybe"] = foldableMaybe;
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
    "use strict";

  // jshint maxparams: 3

  exports.traverseArrayImpl = function () {
    function array1(a) {
      return [a];
    }

    function array2(a) {
      return function (b) {
        return [a, b];
      };
    }

    function array3(a) {
      return function (b) {
        return function (c) {
          return [a, b, c];
        };
      };
    }

    function concat2(xs) {
      return function (ys) {
        return xs.concat(ys);
      };
    }

    return function (apply) {
      return function (map) {
        return function (pure) {
          return function (f) {
            return function (array) {
              function go(bot, top) {
                switch (top - bot) {
                case 0: return pure([]);
                case 1: return map(array1)(f(array[bot]));
                case 2: return apply(map(array2)(f(array[bot])))(f(array[bot + 1]));
                case 3: return apply(apply(map(array3)(f(array[bot])))(f(array[bot + 1])))(f(array[bot + 2]));
                default:
                  // This slightly tricky pivot selection aims to produce two
                  // even-length partitions where possible.
                  var pivot = bot + Math.floor((top - bot) / 4) * 2;
                  return apply(map(concat2)(go(bot, pivot)))(go(pivot, top));
                }
              }
              return go(0, array.length);
            };
          };
        };
      };
    };
  }();
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var $foreign = PS["Data.Traversable"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Data_Traversable_Accum = PS["Data.Traversable.Accum"];
  var Data_Traversable_Accum_Internal = PS["Data.Traversable.Accum.Internal"];
  var Prelude = PS["Prelude"];                 
  var Traversable = function (Foldable1, Functor0, sequence, traverse) {
      this.Foldable1 = Foldable1;
      this.Functor0 = Functor0;
      this.sequence = sequence;
      this.traverse = traverse;
  };
  var traverse = function (dict) {
      return dict.traverse;
  }; 
  var sequenceDefault = function (dictTraversable) {
      return function (dictApplicative) {
          return traverse(dictTraversable)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  var traversableArray = new Traversable(function () {
      return Data_Foldable.foldableArray;
  }, function () {
      return Data_Functor.functorArray;
  }, function (dictApplicative) {
      return sequenceDefault(traversableArray)(dictApplicative);
  }, function (dictApplicative) {
      return $foreign.traverseArrayImpl(Control_Apply.apply(dictApplicative.Apply0()))(Data_Functor.map((dictApplicative.Apply0()).Functor0()))(Control_Applicative.pure(dictApplicative));
  });
  var sequence = function (dict) {
      return dict.sequence;
  };
  exports["Traversable"] = Traversable;
  exports["traverse"] = traverse;
  exports["sequence"] = sequence;
  exports["sequenceDefault"] = sequenceDefault;
  exports["traversableArray"] = traversableArray;
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_FoldableWithIndex = PS["Data.FoldableWithIndex"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_FunctorWithIndex = PS["Data.FunctorWithIndex"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_TraversableWithIndex = PS["Data.TraversableWithIndex"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];                 
  var Left = (function () {
      function Left(value0) {
          this.value0 = value0;
      };
      Left.create = function (value0) {
          return new Left(value0);
      };
      return Left;
  })();
  var Right = (function () {
      function Right(value0) {
          this.value0 = value0;
      };
      Right.create = function (value0) {
          return new Right(value0);
      };
      return Right;
  })();
  var functorEither = new Data_Functor.Functor(function (f) {
      return function (m) {
          if (m instanceof Left) {
              return new Left(m.value0);
          };
          if (m instanceof Right) {
              return new Right(f(m.value0));
          };
          throw new Error("Failed pattern match at Data.Either (line 38, column 8 - line 38, column 52): " + [ m.constructor.name ]);
      };
  });                                                                                                     
  var fromRight = function (dictPartial) {
      return function (v) {
          if (v instanceof Right) {
              return v.value0;
          };
          throw new Error("Failed pattern match at Data.Either (line 261, column 1 - line 261, column 52): " + [ v.constructor.name ]);
      };
  };
  var fromLeft = function (dictPartial) {
      return function (v) {
          if (v instanceof Left) {
              return v.value0;
          };
          throw new Error("Failed pattern match at Data.Either (line 256, column 1 - line 256, column 51): " + [ v.constructor.name ]);
      };
  };
  var either = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Left) {
                  return v(v2.value0);
              };
              if (v2 instanceof Right) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Either (line 238, column 1 - line 238, column 64): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var hush = either(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create);
  var isLeft = either(Data_Function["const"](true))(Data_Function["const"](false));
  var isRight = either(Data_Function["const"](false))(Data_Function["const"](true));
  var bifunctorEither = new Data_Bifunctor.Bifunctor(function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Left) {
                  return new Left(v(v2.value0));
              };
              if (v2 instanceof Right) {
                  return new Right(v1(v2.value0));
              };
              throw new Error("Failed pattern match at Data.Either (line 46, column 1 - line 46, column 45): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  });
  var applyEither = new Control_Apply.Apply(function () {
      return functorEither;
  }, function (v) {
      return function (v1) {
          if (v instanceof Left) {
              return new Left(v.value0);
          };
          if (v instanceof Right) {
              return Data_Functor.map(functorEither)(v.value0)(v1);
          };
          throw new Error("Failed pattern match at Data.Either (line 82, column 1 - line 82, column 41): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var bindEither = new Control_Bind.Bind(function () {
      return applyEither;
  }, either(function (e) {
      return function (v) {
          return new Left(e);
      };
  })(function (a) {
      return function (f) {
          return f(a);
      };
  }));
  exports["Left"] = Left;
  exports["Right"] = Right;
  exports["either"] = either;
  exports["isLeft"] = isLeft;
  exports["isRight"] = isRight;
  exports["fromLeft"] = fromLeft;
  exports["fromRight"] = fromRight;
  exports["hush"] = hush;
  exports["functorEither"] = functorEither;
  exports["bifunctorEither"] = bifunctorEither;
  exports["applyEither"] = applyEither;
  exports["bindEither"] = bindEither;
})(PS["Data.Either"] = PS["Data.Either"] || {});
(function(exports) {
    "use strict";

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };
})(PS["Effect"] = PS["Effect"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var $foreign = PS["Effect"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Prelude = PS["Prelude"];                 
  var monadEffect = new Control_Monad.Monad(function () {
      return applicativeEffect;
  }, function () {
      return bindEffect;
  });
  var bindEffect = new Control_Bind.Bind(function () {
      return applyEffect;
  }, $foreign.bindE);
  var applyEffect = new Control_Apply.Apply(function () {
      return functorEffect;
  }, Control_Monad.ap(monadEffect));
  var applicativeEffect = new Control_Applicative.Applicative(function () {
      return applyEffect;
  }, $foreign.pureE);
  var functorEffect = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEffect));
  exports["functorEffect"] = functorEffect;
  exports["applyEffect"] = applyEffect;
  exports["applicativeEffect"] = applicativeEffect;
  exports["bindEffect"] = bindEffect;
  exports["monadEffect"] = monadEffect;
})(PS["Effect"] = PS["Effect"] || {});
(function(exports) {
    "use strict";

  exports.error = function (msg) {
    return new Error(msg);
  };

  exports.message = function (e) {
    return e.message;
  };

  exports.catchException = function (c) {
    return function (t) {
      return function () {
        try {
          return t();
        } catch (e) {
          if (e instanceof Error || Object.prototype.toString.call(e) === "[object Error]") {
            return c(e)();
          } else {
            return c(new Error(e.toString()))();
          }
        }
      };
    };
  };
})(PS["Effect.Exception"] = PS["Effect.Exception"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var $foreign = PS["Effect.Exception"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Show = PS["Data.Show"];
  var Effect = PS["Effect"];
  var Prelude = PS["Prelude"];                 
  var $$try = function (action) {
      return $foreign.catchException(function ($0) {
          return Control_Applicative.pure(Effect.applicativeEffect)(Data_Either.Left.create($0));
      })(Data_Functor.map(Effect.functorEffect)(Data_Either.Right.create)(action));
  };
  exports["try"] = $$try;
  exports["error"] = $foreign.error;
  exports["message"] = $foreign.message;
})(PS["Effect.Exception"] = PS["Effect.Exception"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Unit = PS["Data.Unit"];
  var Effect = PS["Effect"];
  var Effect_Exception = PS["Effect.Exception"];
  var Prelude = PS["Prelude"];                 
  var MonadThrow = function (Monad0, throwError) {
      this.Monad0 = Monad0;
      this.throwError = throwError;
  };
  var MonadError = function (MonadThrow0, catchError) {
      this.MonadThrow0 = MonadThrow0;
      this.catchError = catchError;
  };
  var throwError = function (dict) {
      return dict.throwError;
  };                                                      
  var catchError = function (dict) {
      return dict.catchError;
  };
  exports["catchError"] = catchError;
  exports["throwError"] = throwError;
  exports["MonadThrow"] = MonadThrow;
  exports["MonadError"] = MonadError;
})(PS["Control.Monad.Error.Class"] = PS["Control.Monad.Error.Class"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad = PS["Control.Monad"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_CommutativeRing = PS["Data.CommutativeRing"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_FoldableWithIndex = PS["Data.FoldableWithIndex"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_FunctorWithIndex = PS["Data.FunctorWithIndex"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semigroup_Foldable = PS["Data.Semigroup.Foldable"];
  var Data_Semigroup_Traversable = PS["Data.Semigroup.Traversable"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_TraversableWithIndex = PS["Data.TraversableWithIndex"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];                 
  var Identity = function (x) {
      return x;
  };
  var newtypeIdentity = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Identity);
  var functorIdentity = new Data_Functor.Functor(function (f) {
      return function (m) {
          return f(m);
      };
  });
  var applyIdentity = new Control_Apply.Apply(function () {
      return functorIdentity;
  }, function (v) {
      return function (v1) {
          return v(v1);
      };
  });
  var bindIdentity = new Control_Bind.Bind(function () {
      return applyIdentity;
  }, function (v) {
      return function (f) {
          return f(v);
      };
  });
  var applicativeIdentity = new Control_Applicative.Applicative(function () {
      return applyIdentity;
  }, Identity);
  var monadIdentity = new Control_Monad.Monad(function () {
      return applicativeIdentity;
  }, function () {
      return bindIdentity;
  });
  exports["Identity"] = Identity;
  exports["newtypeIdentity"] = newtypeIdentity;
  exports["functorIdentity"] = functorIdentity;
  exports["applyIdentity"] = applyIdentity;
  exports["applicativeIdentity"] = applicativeIdentity;
  exports["bindIdentity"] = bindIdentity;
  exports["monadIdentity"] = monadIdentity;
})(PS["Data.Identity"] = PS["Data.Identity"] || {});
(function(exports) {
    "use strict";

  exports.new = function (val) {
    return function () {
      return { value: val };
    };
  };

  exports.read = function (ref) {
    return function () {
      return ref.value;
    };
  };

  exports["modify'"] = function (f) {
    return function (ref) {
      return function () {
        var t = f(ref.value);
        ref.value = t.state;
        return t.value;
      };
    };
  };

  exports.write = function (val) {
    return function (ref) {
      return function () {
        ref.value = val;
        return {};
      };
    };
  };
})(PS["Effect.Ref"] = PS["Effect.Ref"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var $foreign = PS["Effect.Ref"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Effect = PS["Effect"];
  var Prelude = PS["Prelude"];                 
  var modify = function (f) {
      return $foreign["modify'"](function (s) {
          var s$prime = f(s);
          return {
              state: s$prime,
              value: s$prime
          };
      });
  };
  exports["modify"] = modify;
  exports["new"] = $foreign["new"];
  exports["read"] = $foreign.read;
  exports["write"] = $foreign.write;
})(PS["Effect.Ref"] = PS["Effect.Ref"] || {});
(function(exports) {
    "use strict";

  // module Partial.Unsafe

  exports.unsafePartial = function (f) {
    return f();
  };
})(PS["Partial.Unsafe"] = PS["Partial.Unsafe"] || {});
(function(exports) {
    "use strict";

  // module Partial

  exports.crashWith = function () {
    return function (msg) {
      throw new Error(msg);
    };
  };
})(PS["Partial"] = PS["Partial"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var $foreign = PS["Partial"];
  exports["crashWith"] = $foreign.crashWith;
})(PS["Partial"] = PS["Partial"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var $foreign = PS["Partial.Unsafe"];
  var Partial = PS["Partial"];
  var unsafeCrashWith = function (msg) {
      return $foreign.unsafePartial(function (dictPartial) {
          return Partial.crashWith(dictPartial)(msg);
      });
  };
  exports["unsafeCrashWith"] = unsafeCrashWith;
})(PS["Partial.Unsafe"] = PS["Partial.Unsafe"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Either = PS["Data.Either"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Unit = PS["Data.Unit"];
  var Effect = PS["Effect"];
  var Effect_Ref = PS["Effect.Ref"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];                 
  var Loop = (function () {
      function Loop(value0) {
          this.value0 = value0;
      };
      Loop.create = function (value0) {
          return new Loop(value0);
      };
      return Loop;
  })();
  var Done = (function () {
      function Done(value0) {
          this.value0 = value0;
      };
      Done.create = function (value0) {
          return new Done(value0);
      };
      return Done;
  })();
  var MonadRec = function (Monad0, tailRecM) {
      this.Monad0 = Monad0;
      this.tailRecM = tailRecM;
  };
  var tailRecM = function (dict) {
      return dict.tailRecM;
  }; 
  var monadRecEffect = new MonadRec(function () {
      return Effect.monadEffect;
  }, function (f) {
      return function (a) {
          var fromDone = function (v) {
              if (v instanceof Done) {
                  return v.value0;
              };
              throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 111, column 30 - line 111, column 44): " + [ v.constructor.name ]);
          };
          return function __do() {
              var v = Control_Bind.bindFlipped(Effect.bindEffect)(Effect_Ref["new"])(f(a))();
              (function () {
                  while (!(function __do() {
                      var v1 = Effect_Ref.read(v)();
                      if (v1 instanceof Loop) {
                          var v2 = f(v1.value0)();
                          var v3 = Effect_Ref.write(v2)(v)();
                          return false;
                      };
                      if (v1 instanceof Done) {
                          return true;
                      };
                      throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 102, column 22 - line 107, column 28): " + [ v1.constructor.name ]);
                  })()) {

                  };
                  return {};
              })();
              return Data_Functor.map(Effect.functorEffect)(fromDone)(Effect_Ref.read(v))();
          };
      };
  });
  exports["Loop"] = Loop;
  exports["Done"] = Done;
  exports["MonadRec"] = MonadRec;
  exports["tailRecM"] = tailRecM;
  exports["monadRecEffect"] = monadRecEffect;
})(PS["Control.Monad.Rec.Class"] = PS["Control.Monad.Rec.Class"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Biapplicative = PS["Control.Biapplicative"];
  var Control_Biapply = PS["Control.Biapply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_CommutativeRing = PS["Data.CommutativeRing"];
  var Data_Distributive = PS["Data.Distributive"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_FoldableWithIndex = PS["Data.FoldableWithIndex"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_FunctorWithIndex = PS["Data.FunctorWithIndex"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semigroup_Foldable = PS["Data.Semigroup.Foldable"];
  var Data_Semigroup_Traversable = PS["Data.Semigroup.Traversable"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_TraversableWithIndex = PS["Data.TraversableWithIndex"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var Type_Equality = PS["Type.Equality"];                 
  var Tuple = (function () {
      function Tuple(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Tuple.create = function (value0) {
          return function (value1) {
              return new Tuple(value0, value1);
          };
      };
      return Tuple;
  })();
  var snd = function (v) {
      return v.value1;
  };
  var functorTuple = new Data_Functor.Functor(function (f) {
      return function (m) {
          return new Tuple(m.value0, f(m.value1));
      };
  });                                                                                                   
  var fst = function (v) {
      return v.value0;
  };
  exports["Tuple"] = Tuple;
  exports["fst"] = fst;
  exports["snd"] = snd;
  exports["functorTuple"] = functorTuple;
})(PS["Data.Tuple"] = PS["Data.Tuple"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];                 
  var MonadState = function (Monad0, state) {
      this.Monad0 = Monad0;
      this.state = state;
  };
  var state = function (dict) {
      return dict.state;
  };
  var put = function (dictMonadState) {
      return function (s) {
          return state(dictMonadState)(function (v) {
              return new Data_Tuple.Tuple(Data_Unit.unit, s);
          });
      };
  };
  var get = function (dictMonadState) {
      return state(dictMonadState)(function (s) {
          return new Data_Tuple.Tuple(s, s);
      });
  };
  exports["state"] = state;
  exports["MonadState"] = MonadState;
  exports["get"] = get;
  exports["put"] = put;
})(PS["Control.Monad.State.Class"] = PS["Control.Monad.State.Class"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Prelude = PS["Prelude"];                 
  var MonadTrans = function (lift) {
      this.lift = lift;
  };
  var lift = function (dict) {
      return dict.lift;
  };
  exports["lift"] = lift;
  exports["MonadTrans"] = MonadTrans;
})(PS["Control.Monad.Trans.Class"] = PS["Control.Monad.Trans.Class"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Control_Monad = PS["Control.Monad"];
  var Effect = PS["Effect"];                 
  var MonadEffect = function (Monad0, liftEffect) {
      this.Monad0 = Monad0;
      this.liftEffect = liftEffect;
  };                                                         
  var liftEffect = function (dict) {
      return dict.liftEffect;
  };
  exports["liftEffect"] = liftEffect;
  exports["MonadEffect"] = MonadEffect;
})(PS["Effect.Class"] = PS["Effect.Class"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Cont_Class = PS["Control.Monad.Cont.Class"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Reader_Class = PS["Control.Monad.Reader.Class"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Monad_Writer_Class = PS["Control.Monad.Writer.Class"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Tuple = PS["Data.Tuple"];
  var Effect_Class = PS["Effect.Class"];
  var Prelude = PS["Prelude"];                 
  var ExceptT = function (x) {
      return x;
  };
  var runExceptT = function (v) {
      return v;
  }; 
  var mapExceptT = function (f) {
      return function (v) {
          return f(v);
      };
  };
  var functorExceptT = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return mapExceptT(Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Either.functorEither)(f)));
      });
  };
  var monadExceptT = function (dictMonad) {
      return new Control_Monad.Monad(function () {
          return applicativeExceptT(dictMonad);
      }, function () {
          return bindExceptT(dictMonad);
      });
  };
  var bindExceptT = function (dictMonad) {
      return new Control_Bind.Bind(function () {
          return applyExceptT(dictMonad);
      }, function (v) {
          return function (k) {
              return Control_Bind.bind(dictMonad.Bind1())(v)(Data_Either.either(function ($97) {
                  return Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Left.create($97));
              })(function (a) {
                  var v1 = k(a);
                  return v1;
              }));
          };
      });
  };
  var applyExceptT = function (dictMonad) {
      return new Control_Apply.Apply(function () {
          return functorExceptT(((dictMonad.Bind1()).Apply0()).Functor0());
      }, Control_Monad.ap(monadExceptT(dictMonad)));
  };
  var applicativeExceptT = function (dictMonad) {
      return new Control_Applicative.Applicative(function () {
          return applyExceptT(dictMonad);
      }, function ($98) {
          return ExceptT(Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Right.create($98)));
      });
  };
  var monadThrowExceptT = function (dictMonad) {
      return new Control_Monad_Error_Class.MonadThrow(function () {
          return monadExceptT(dictMonad);
      }, function ($102) {
          return ExceptT(Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Left.create($102)));
      });
  };
  var altExceptT = function (dictSemigroup) {
      return function (dictMonad) {
          return new Control_Alt.Alt(function () {
              return functorExceptT(((dictMonad.Bind1()).Apply0()).Functor0());
          }, function (v) {
              return function (v1) {
                  return Control_Bind.bind(dictMonad.Bind1())(v)(function (v2) {
                      if (v2 instanceof Data_Either.Right) {
                          return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(v2.value0));
                      };
                      if (v2 instanceof Data_Either.Left) {
                          return Control_Bind.bind(dictMonad.Bind1())(v1)(function (v3) {
                              if (v3 instanceof Data_Either.Right) {
                                  return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(v3.value0));
                              };
                              if (v3 instanceof Data_Either.Left) {
                                  return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Left(Data_Semigroup.append(dictSemigroup)(v2.value0)(v3.value0)));
                              };
                              throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 86, column 9 - line 88, column 49): " + [ v3.constructor.name ]);
                          });
                      };
                      throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 82, column 5 - line 88, column 49): " + [ v2.constructor.name ]);
                  });
              };
          });
      };
  };
  exports["ExceptT"] = ExceptT;
  exports["runExceptT"] = runExceptT;
  exports["mapExceptT"] = mapExceptT;
  exports["functorExceptT"] = functorExceptT;
  exports["applyExceptT"] = applyExceptT;
  exports["applicativeExceptT"] = applicativeExceptT;
  exports["bindExceptT"] = bindExceptT;
  exports["monadExceptT"] = monadExceptT;
  exports["altExceptT"] = altExceptT;
  exports["monadThrowExceptT"] = monadThrowExceptT;
})(PS["Control.Monad.Except.Trans"] = PS["Control.Monad.Except.Trans"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Newtype = PS["Data.Newtype"];
  var Prelude = PS["Prelude"];                                                           
  var runExcept = function ($0) {
      return Data_Newtype.unwrap(Data_Identity.newtypeIdentity)(Control_Monad_Except_Trans.runExceptT($0));
  };
  var mapExcept = function (f) {
      return Control_Monad_Except_Trans.mapExceptT(function ($1) {
          return Data_Identity.Identity(f(Data_Newtype.unwrap(Data_Identity.newtypeIdentity)($1)));
      });
  };
  exports["runExcept"] = runExcept;
  exports["mapExcept"] = mapExcept;
})(PS["Control.Monad.Except"] = PS["Control.Monad.Except"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_FoldableWithIndex = PS["Data.FoldableWithIndex"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_FunctorWithIndex = PS["Data.FunctorWithIndex"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semigroup_Foldable = PS["Data.Semigroup.Foldable"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_TraversableWithIndex = PS["Data.TraversableWithIndex"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Unfoldable1 = PS["Data.Unfoldable1"];
  var Prelude = PS["Prelude"];                 
  var NonEmpty = (function () {
      function NonEmpty(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      NonEmpty.create = function (value0) {
          return function (value1) {
              return new NonEmpty(value0, value1);
          };
      };
      return NonEmpty;
  })();
  var singleton = function (dictPlus) {
      return function (a) {
          return new NonEmpty(a, Control_Plus.empty(dictPlus));
      };
  };
  var showNonEmpty = function (dictShow) {
      return function (dictShow1) {
          return new Data_Show.Show(function (v) {
              return "(NonEmpty " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(dictShow1)(v.value1) + ")")));
          });
      };
  };
  var functorNonEmpty = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return function (m) {
              return new NonEmpty(f(m.value0), Data_Functor.map(dictFunctor)(f)(m.value1));
          };
      });
  };
  exports["NonEmpty"] = NonEmpty;
  exports["singleton"] = singleton;
  exports["showNonEmpty"] = showNonEmpty;
  exports["functorNonEmpty"] = functorNonEmpty;
})(PS["Data.NonEmpty"] = PS["Data.NonEmpty"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_FoldableWithIndex = PS["Data.FoldableWithIndex"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_FunctorWithIndex = PS["Data.FunctorWithIndex"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semigroup_Foldable = PS["Data.Semigroup.Foldable"];
  var Data_Semigroup_Traversable = PS["Data.Semigroup.Traversable"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_TraversableWithIndex = PS["Data.TraversableWithIndex"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Unfoldable1 = PS["Data.Unfoldable1"];
  var Prelude = PS["Prelude"];                 
  var Nil = (function () {
      function Nil() {

      };
      Nil.value = new Nil();
      return Nil;
  })();
  var Cons = (function () {
      function Cons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Cons.create = function (value0) {
          return function (value1) {
              return new Cons(value0, value1);
          };
      };
      return Cons;
  })();
  var NonEmptyList = function (x) {
      return x;
  };
  var toList = function (v) {
      return new Cons(v.value0, v.value1);
  };
  var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return Data_Foldable.foldl(foldableList)(function (acc) {
              return function ($174) {
                  return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f($174));
              };
          })(Data_Monoid.mempty(dictMonoid));
      };
  }, function (f) {
      var go = function ($copy_b) {
          return function ($copy_v) {
              var $tco_var_b = $copy_b;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(b, v) {
                  if (v instanceof Nil) {
                      $tco_done = true;
                      return b;
                  };
                  if (v instanceof Cons) {
                      $tco_var_b = f(b)(v.value0);
                      $copy_v = v.value1;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.List.Types (line 81, column 12 - line 83, column 30): " + [ v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_b, $copy_v);
              };
              return $tco_result;
          };
      };
      return go;
  }, function (f) {
      return function (b) {
          var rev = Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value);
          return function ($175) {
              return Data_Foldable.foldl(foldableList)(Data_Function.flip(f))(b)(rev($175));
          };
      };
  });
  var functorList = new Data_Functor.Functor(function (f) {
      return Data_Foldable.foldr(foldableList)(function (x) {
          return function (acc) {
              return new Cons(f(x), acc);
          };
      })(Nil.value);
  });
  var functorNonEmptyList = Data_NonEmpty.functorNonEmpty(functorList);
  var semigroupList = new Data_Semigroup.Semigroup(function (xs) {
      return function (ys) {
          return Data_Foldable.foldr(foldableList)(Cons.create)(ys)(xs);
      };
  });           
  var semigroupNonEmptyList = new Data_Semigroup.Semigroup(function (v) {
      return function (as$prime) {
          return new Data_NonEmpty.NonEmpty(v.value0, Data_Semigroup.append(semigroupList)(v.value1)(toList(as$prime)));
      };
  });
  var showList = function (dictShow) {
      return new Data_Show.Show(function (v) {
          if (v instanceof Nil) {
              return "Nil";
          };
          return "(" + (Data_Foldable.intercalate(foldableList)(Data_Monoid.monoidString)(" : ")(Data_Functor.map(functorList)(Data_Show.show(dictShow))(v)) + " : Nil)");
      });
  };
  var showNonEmptyList = function (dictShow) {
      return new Data_Show.Show(function (v) {
          return "(NonEmptyList " + (Data_Show.show(Data_NonEmpty.showNonEmpty(dictShow)(showList(dictShow)))(v) + ")");
      });
  }; 
  var applyList = new Control_Apply.Apply(function () {
      return functorList;
  }, function (v) {
      return function (v1) {
          if (v instanceof Nil) {
              return Nil.value;
          };
          if (v instanceof Cons) {
              return Data_Semigroup.append(semigroupList)(Data_Functor.map(functorList)(v.value0)(v1))(Control_Apply.apply(applyList)(v.value1)(v1));
          };
          throw new Error("Failed pattern match at Data.List.Types (line 127, column 1 - line 127, column 33): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var applyNonEmptyList = new Control_Apply.Apply(function () {
      return functorNonEmptyList;
  }, function (v) {
      return function (v1) {
          return new Data_NonEmpty.NonEmpty(v.value0(v1.value0), Data_Semigroup.append(semigroupList)(Control_Apply.apply(applyList)(v.value1)(new Cons(v1.value0, Nil.value)))(Control_Apply.apply(applyList)(new Cons(v.value0, v.value1))(v1.value1)));
      };
  });                                              
  var altList = new Control_Alt.Alt(function () {
      return functorList;
  }, Data_Semigroup.append(semigroupList));
  var plusList = new Control_Plus.Plus(function () {
      return altList;
  }, Nil.value);
  var applicativeNonEmptyList = new Control_Applicative.Applicative(function () {
      return applyNonEmptyList;
  }, function ($188) {
      return NonEmptyList(Data_NonEmpty.singleton(plusList)($188));
  });
  exports["Nil"] = Nil;
  exports["Cons"] = Cons;
  exports["NonEmptyList"] = NonEmptyList;
  exports["toList"] = toList;
  exports["showList"] = showList;
  exports["semigroupList"] = semigroupList;
  exports["functorList"] = functorList;
  exports["foldableList"] = foldableList;
  exports["applyList"] = applyList;
  exports["altList"] = altList;
  exports["plusList"] = plusList;
  exports["showNonEmptyList"] = showNonEmptyList;
  exports["functorNonEmptyList"] = functorNonEmptyList;
  exports["applyNonEmptyList"] = applyNonEmptyList;
  exports["applicativeNonEmptyList"] = applicativeNonEmptyList;
  exports["semigroupNonEmptyList"] = semigroupNonEmptyList;
})(PS["Data.List.Types"] = PS["Data.List.Types"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_FunctorWithIndex = PS["Data.FunctorWithIndex"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var singleton = function (a) {
      return new Data_List_Types.Cons(a, Data_List_Types.Nil.value);
  };
  var reverse = (function () {
      var go = function ($copy_acc) {
          return function ($copy_v) {
              var $tco_var_acc = $copy_acc;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(acc, v) {
                  if (v instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return acc;
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
                      $copy_v = v.value1;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.List (line 368, column 3 - line 368, column 19): " + [ acc.constructor.name, v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_acc, $copy_v);
              };
              return $tco_result;
          };
      };
      return go(Data_List_Types.Nil.value);
  })();
  var $$null = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return true;
      };
      return false;
  };
  var fromFoldable = function (dictFoldable) {
      return Data_Foldable.foldr(dictFoldable)(Data_List_Types.Cons.create)(Data_List_Types.Nil.value);
  };
  exports["fromFoldable"] = fromFoldable;
  exports["singleton"] = singleton;
  exports["null"] = $$null;
  exports["reverse"] = reverse;
})(PS["Data.List"] = PS["Data.List"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Unfoldable1 = PS["Data.Unfoldable1"];
  var Prelude = PS["Prelude"];                 
  var CatQueue = (function () {
      function CatQueue(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      CatQueue.create = function (value0) {
          return function (value1) {
              return new CatQueue(value0, value1);
          };
      };
      return CatQueue;
  })();
  var uncons = function ($copy_v) {
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(v) {
          if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {
              $tco_done = true;
              return Data_Maybe.Nothing.value;
          };
          if (v.value0 instanceof Data_List_Types.Nil) {
              $copy_v = new CatQueue(Data_List.reverse(v.value1), Data_List_Types.Nil.value);
              return;
          };
          if (v.value0 instanceof Data_List_Types.Cons) {
              $tco_done = true;
              return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0.value0, new CatQueue(v.value0.value1, v.value1)));
          };
          throw new Error("Failed pattern match at Data.CatQueue (line 83, column 1 - line 83, column 63): " + [ v.constructor.name ]);
      };
      while (!$tco_done) {
          $tco_result = $tco_loop($copy_v);
      };
      return $tco_result;
  };
  var snoc = function (v) {
      return function (a) {
          return new CatQueue(v.value0, new Data_List_Types.Cons(a, v.value1));
      };
  };
  var $$null = function (v) {
      if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {
          return true;
      };
      return false;
  };                                                                                                
  var empty = new CatQueue(Data_List_Types.Nil.value, Data_List_Types.Nil.value);
  exports["CatQueue"] = CatQueue;
  exports["empty"] = empty;
  exports["null"] = $$null;
  exports["snoc"] = snoc;
  exports["uncons"] = uncons;
})(PS["Data.CatQueue"] = PS["Data.CatQueue"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Data_CatQueue = PS["Data.CatQueue"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Unfoldable1 = PS["Data.Unfoldable1"];
  var Prelude = PS["Prelude"];                 
  var CatNil = (function () {
      function CatNil() {

      };
      CatNil.value = new CatNil();
      return CatNil;
  })();
  var CatCons = (function () {
      function CatCons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      CatCons.create = function (value0) {
          return function (value1) {
              return new CatCons(value0, value1);
          };
      };
      return CatCons;
  })();
  var link = function (v) {
      return function (v1) {
          if (v instanceof CatNil) {
              return v1;
          };
          if (v1 instanceof CatNil) {
              return v;
          };
          if (v instanceof CatCons) {
              return new CatCons(v.value0, Data_CatQueue.snoc(v.value1)(v1));
          };
          throw new Error("Failed pattern match at Data.CatList (line 109, column 1 - line 109, column 54): " + [ v.constructor.name, v1.constructor.name ]);
      };
  };
  var foldr = function (k) {
      return function (b) {
          return function (q) {
              var foldl = function ($copy_v) {
                  return function ($copy_c) {
                      return function ($copy_v1) {
                          var $tco_var_v = $copy_v;
                          var $tco_var_c = $copy_c;
                          var $tco_done = false;
                          var $tco_result;
                          function $tco_loop(v, c, v1) {
                              if (v1 instanceof Data_List_Types.Nil) {
                                  $tco_done = true;
                                  return c;
                              };
                              if (v1 instanceof Data_List_Types.Cons) {
                                  $tco_var_v = v;
                                  $tco_var_c = v(c)(v1.value0);
                                  $copy_v1 = v1.value1;
                                  return;
                              };
                              throw new Error("Failed pattern match at Data.CatList (line 125, column 3 - line 125, column 59): " + [ v.constructor.name, c.constructor.name, v1.constructor.name ]);
                          };
                          while (!$tco_done) {
                              $tco_result = $tco_loop($tco_var_v, $tco_var_c, $copy_v1);
                          };
                          return $tco_result;
                      };
                  };
              };
              var go = function ($copy_xs) {
                  return function ($copy_ys) {
                      var $tco_var_xs = $copy_xs;
                      var $tco_done = false;
                      var $tco_result;
                      function $tco_loop(xs, ys) {
                          var v = Data_CatQueue.uncons(xs);
                          if (v instanceof Data_Maybe.Nothing) {
                              $tco_done = true;
                              return foldl(function (x) {
                                  return function (i) {
                                      return i(x);
                                  };
                              })(b)(ys);
                          };
                          if (v instanceof Data_Maybe.Just) {
                              $tco_var_xs = v.value0.value1;
                              $copy_ys = new Data_List_Types.Cons(k(v.value0.value0), ys);
                              return;
                          };
                          throw new Error("Failed pattern match at Data.CatList (line 121, column 14 - line 123, column 67): " + [ v.constructor.name ]);
                      };
                      while (!$tco_done) {
                          $tco_result = $tco_loop($tco_var_xs, $copy_ys);
                      };
                      return $tco_result;
                  };
              };
              return go(q)(Data_List_Types.Nil.value);
          };
      };
  };
  var uncons = function (v) {
      if (v instanceof CatNil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof CatCons) {
          return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0, (function () {
              var $44 = Data_CatQueue["null"](v.value1);
              if ($44) {
                  return CatNil.value;
              };
              return foldr(link)(CatNil.value)(v.value1);
          })()));
      };
      throw new Error("Failed pattern match at Data.CatList (line 100, column 1 - line 100, column 61): " + [ v.constructor.name ]);
  };
  var empty = CatNil.value;
  var append = link;
  var semigroupCatList = new Data_Semigroup.Semigroup(append);
  var snoc = function (cat) {
      return function (a) {
          return append(cat)(new CatCons(a, Data_CatQueue.empty));
      };
  };
  exports["CatNil"] = CatNil;
  exports["CatCons"] = CatCons;
  exports["empty"] = empty;
  exports["append"] = append;
  exports["snoc"] = snoc;
  exports["uncons"] = uncons;
  exports["semigroupCatList"] = semigroupCatList;
})(PS["Data.CatList"] = PS["Data.CatList"] || {});
(function(exports) {
    "use strict";

  // module Unsafe.Coerce

  exports.unsafeCoerce = function (x) {
    return x;
  };
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var $foreign = PS["Unsafe.Coerce"];
  exports["unsafeCoerce"] = $foreign.unsafeCoerce;
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_CatList = PS["Data.CatList"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Free = (function () {
      function Free(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Free.create = function (value0) {
          return function (value1) {
              return new Free(value0, value1);
          };
      };
      return Free;
  })();
  var Return = (function () {
      function Return(value0) {
          this.value0 = value0;
      };
      Return.create = function (value0) {
          return new Return(value0);
      };
      return Return;
  })();
  var Bind = (function () {
      function Bind(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Bind.create = function (value0) {
          return function (value1) {
              return new Bind(value0, value1);
          };
      };
      return Bind;
  })();
  var toView = function ($copy_v) {
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(v) {
          var runExpF = function (v2) {
              return v2;
          };
          var concatF = function (v2) {
              return function (r) {
                  return new Free(v2.value0, Data_Semigroup.append(Data_CatList.semigroupCatList)(v2.value1)(r));
              };
          };
          if (v.value0 instanceof Return) {
              var v2 = Data_CatList.uncons(v.value1);
              if (v2 instanceof Data_Maybe.Nothing) {
                  $tco_done = true;
                  return new Return(v.value0.value0);
              };
              if (v2 instanceof Data_Maybe.Just) {
                  $copy_v = concatF(runExpF(v2.value0.value0)(v.value0.value0))(v2.value0.value1);
                  return;
              };
              throw new Error("Failed pattern match at Control.Monad.Free (line 220, column 7 - line 224, column 64): " + [ v2.constructor.name ]);
          };
          if (v.value0 instanceof Bind) {
              $tco_done = true;
              return new Bind(v.value0.value0, function (a) {
                  return concatF(v.value0.value1(a))(v.value1);
              });
          };
          throw new Error("Failed pattern match at Control.Monad.Free (line 218, column 3 - line 226, column 56): " + [ v.value0.constructor.name ]);
      };
      while (!$tco_done) {
          $tco_result = $tco_loop($copy_v);
      };
      return $tco_result;
  };
  var fromView = function (f) {
      return new Free(f, Data_CatList.empty);
  };
  var freeMonad = new Control_Monad.Monad(function () {
      return freeApplicative;
  }, function () {
      return freeBind;
  });
  var freeFunctor = new Data_Functor.Functor(function (k) {
      return function (f) {
          return Control_Bind.bindFlipped(freeBind)(function ($118) {
              return Control_Applicative.pure(freeApplicative)(k($118));
          })(f);
      };
  });
  var freeBind = new Control_Bind.Bind(function () {
      return freeApply;
  }, function (v) {
      return function (k) {
          return new Free(v.value0, Data_CatList.snoc(v.value1)(k));
      };
  });
  var freeApply = new Control_Apply.Apply(function () {
      return freeFunctor;
  }, Control_Monad.ap(freeMonad));
  var freeApplicative = new Control_Applicative.Applicative(function () {
      return freeApply;
  }, function ($119) {
      return fromView(Return.create($119));
  });
  var liftF = function (f) {
      return fromView(new Bind(f, function ($120) {
          return Control_Applicative.pure(freeApplicative)($120);
      }));
  };
  var foldFree = function (dictMonadRec) {
      return function (k) {
          var go = function (f) {
              var v = toView(f);
              if (v instanceof Return) {
                  return Data_Functor.map((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(Control_Monad_Rec_Class.Done.create)(Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(v.value0));
              };
              if (v instanceof Bind) {
                  return Data_Functor.map((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(function ($127) {
                      return Control_Monad_Rec_Class.Loop.create(v.value1($127));
                  })(k(v.value0));
              };
              throw new Error("Failed pattern match at Control.Monad.Free (line 151, column 10 - line 153, column 37): " + [ v.constructor.name ]);
          };
          return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go);
      };
  };
  exports["liftF"] = liftF;
  exports["foldFree"] = foldFree;
  exports["freeFunctor"] = freeFunctor;
  exports["freeBind"] = freeBind;
  exports["freeApplicative"] = freeApplicative;
  exports["freeApply"] = freeApply;
  exports["freeMonad"] = freeMonad;
})(PS["Control.Monad.Free"] = PS["Control.Monad.Free"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Cont_Class = PS["Control.Monad.Cont.Class"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Reader_Class = PS["Control.Monad.Reader.Class"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Monad_Writer_Class = PS["Control.Monad.Writer.Class"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Effect_Class = PS["Effect.Class"];
  var Prelude = PS["Prelude"];                 
  var StateT = function (x) {
      return x;
  };
  var runStateT = function (v) {
      return v;
  };         
  var monadTransStateT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
      return function (m) {
          return function (s) {
              return Control_Bind.bind(dictMonad.Bind1())(m)(function (v) {
                  return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v, s));
              });
          };
      };
  });
  var functorStateT = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return function (v) {
              return function (s) {
                  return Data_Functor.map(dictFunctor)(function (v1) {
                      return new Data_Tuple.Tuple(f(v1.value0), v1.value1);
                  })(v(s));
              };
          };
      });
  };
  var evalStateT = function (dictFunctor) {
      return function (v) {
          return function (s) {
              return Data_Functor.map(dictFunctor)(Data_Tuple.fst)(v(s));
          };
      };
  };
  var monadStateT = function (dictMonad) {
      return new Control_Monad.Monad(function () {
          return applicativeStateT(dictMonad);
      }, function () {
          return bindStateT(dictMonad);
      });
  };
  var bindStateT = function (dictMonad) {
      return new Control_Bind.Bind(function () {
          return applyStateT(dictMonad);
      }, function (v) {
          return function (f) {
              return function (s) {
                  return Control_Bind.bind(dictMonad.Bind1())(v(s))(function (v1) {
                      var v3 = f(v1.value0);
                      return v3(v1.value1);
                  });
              };
          };
      });
  };
  var applyStateT = function (dictMonad) {
      return new Control_Apply.Apply(function () {
          return functorStateT(((dictMonad.Bind1()).Apply0()).Functor0());
      }, Control_Monad.ap(monadStateT(dictMonad)));
  };
  var applicativeStateT = function (dictMonad) {
      return new Control_Applicative.Applicative(function () {
          return applyStateT(dictMonad);
      }, function (a) {
          return function (s) {
              return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(a, s));
          };
      });
  };
  var monadRecStateT = function (dictMonadRec) {
      return new Control_Monad_Rec_Class.MonadRec(function () {
          return monadStateT(dictMonadRec.Monad0());
      }, function (f) {
          return function (a) {
              var f$prime = function (v) {
                  return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())((function () {
                      var v1 = f(v.value0);
                      return v1;
                  })()(v.value1))(function (v1) {
                      return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())((function () {
                          if (v1.value0 instanceof Control_Monad_Rec_Class.Loop) {
                              return new Control_Monad_Rec_Class.Loop(new Data_Tuple.Tuple(v1.value0.value0, v1.value1));
                          };
                          if (v1.value0 instanceof Control_Monad_Rec_Class.Done) {
                              return new Control_Monad_Rec_Class.Done(new Data_Tuple.Tuple(v1.value0.value0, v1.value1));
                          };
                          throw new Error("Failed pattern match at Control.Monad.State.Trans (line 87, column 16 - line 89, column 40): " + [ v1.value0.constructor.name ]);
                      })());
                  });
              };
              return function (s) {
                  return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(f$prime)(new Data_Tuple.Tuple(a, s));
              };
          };
      });
  };
  var monadStateStateT = function (dictMonad) {
      return new Control_Monad_State_Class.MonadState(function () {
          return monadStateT(dictMonad);
      }, function (f) {
          return StateT(function ($111) {
              return Control_Applicative.pure(dictMonad.Applicative0())(f($111));
          });
      });
  };
  var monadThrowStateT = function (dictMonadThrow) {
      return new Control_Monad_Error_Class.MonadThrow(function () {
          return monadStateT(dictMonadThrow.Monad0());
      }, function (e) {
          return Control_Monad_Trans_Class.lift(monadTransStateT)(dictMonadThrow.Monad0())(Control_Monad_Error_Class.throwError(dictMonadThrow)(e));
      });
  };
  exports["StateT"] = StateT;
  exports["runStateT"] = runStateT;
  exports["evalStateT"] = evalStateT;
  exports["functorStateT"] = functorStateT;
  exports["applyStateT"] = applyStateT;
  exports["applicativeStateT"] = applicativeStateT;
  exports["bindStateT"] = bindStateT;
  exports["monadStateT"] = monadStateT;
  exports["monadRecStateT"] = monadRecStateT;
  exports["monadTransStateT"] = monadTransStateT;
  exports["monadThrowStateT"] = monadThrowStateT;
  exports["monadStateStateT"] = monadStateStateT;
})(PS["Control.Monad.State.Trans"] = PS["Control.Monad.State.Trans"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Cont_Trans = PS["Control.Monad.Cont.Trans"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Monad_Maybe_Trans = PS["Control.Monad.Maybe.Trans"];
  var Control_Monad_Reader_Trans = PS["Control.Monad.Reader.Trans"];
  var Control_Monad_Writer_Trans = PS["Control.Monad.Writer.Trans"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Compose = PS["Data.Functor.Compose"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Unit = PS["Data.Unit"];
  var Effect_Class = PS["Effect.Class"];
  var Effect_Ref = PS["Effect.Ref"];
  var Prelude = PS["Prelude"];
  var Parallel = function (Applicative1, Monad0, parallel, sequential) {
      this.Applicative1 = Applicative1;
      this.Monad0 = Monad0;
      this.parallel = parallel;
      this.sequential = sequential;
  };
  var sequential = function (dict) {
      return dict.sequential;
  };
  var parallel = function (dict) {
      return dict.parallel;
  };
  exports["parallel"] = parallel;
  exports["sequential"] = sequential;
  exports["Parallel"] = Parallel;
})(PS["Control.Parallel.Class"] = PS["Control.Parallel.Class"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Control_Parallel_Class = PS["Control.Parallel.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Traversable = PS["Data.Traversable"];
  var Prelude = PS["Prelude"];
  var parOneOf = function (dictParallel) {
      return function (dictAlternative) {
          return function (dictFoldable) {
              return function (dictFunctor) {
                  return function ($23) {
                      return Control_Parallel_Class.sequential(dictParallel)(Data_Foldable.oneOfMap(dictFoldable)(dictAlternative.Plus1())(Control_Parallel_Class.parallel(dictParallel))($23));
                  };
              };
          };
      };
  };
  exports["parOneOf"] = parOneOf;
})(PS["Control.Parallel"] = PS["Control.Parallel"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Effect_Class = PS["Effect.Class"];
  var Prelude = PS["Prelude"];                 
  var BackPoint = (function () {
      function BackPoint(value0) {
          this.value0 = value0;
      };
      BackPoint.create = function (value0) {
          return new BackPoint(value0);
      };
      return BackPoint;
  })();
  var NoBack = (function () {
      function NoBack(value0) {
          this.value0 = value0;
      };
      NoBack.create = function (value0) {
          return new NoBack(value0);
      };
      return NoBack;
  })();
  var GoBack = (function () {
      function GoBack() {

      };
      GoBack.value = new GoBack();
      return GoBack;
  })();
  var BackT = function (x) {
      return x;
  };
  var runBackT = function (v) {
      return v;
  }; 
  var mapFailBack = function (f) {
      return function (fb) {
          if (fb instanceof BackPoint) {
              return new BackPoint(f(fb.value0));
          };
          if (fb instanceof NoBack) {
              return new NoBack(f(fb.value0));
          };
          if (fb instanceof GoBack) {
              return GoBack.value;
          };
          throw new Error("Failed pattern match at Control.Transformers.Back.Trans (line 20, column 20 - line 23, column 40): " + [ fb.constructor.name ]);
      };
  };
  var functorFailbackT = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return function (m) {
              return BackT(Data_Functor.map(dictFunctor)(mapFailBack(f))(runBackT(m)));
          };
      });
  };                                                          
  var monadFailbackT = function (dictMonad) {
      return new Control_Monad.Monad(function () {
          return applicativeFailbackT(dictMonad);
      }, function () {
          return bindFailbackT(dictMonad);
      });
  };
  var bindFailbackT = function (dictMonad) {
      return new Control_Bind.Bind(function () {
          return applyFailbackT(dictMonad);
      }, function (x) {
          return function (f) {
              var loop = Control_Bind.bind(dictMonad.Bind1())(runBackT(x))(function (v) {
                  if (v instanceof NoBack) {
                      return runBackT(f(v.value0));
                  };
                  if (v instanceof BackPoint) {
                      return Control_Bind.bind(dictMonad.Bind1())(runBackT(f(v.value0)))(function (v2) {
                          if (v2 instanceof GoBack) {
                              return loop;
                          };
                          return Control_Applicative.pure(dictMonad.Applicative0())(v2);
                      });
                  };
                  if (v instanceof GoBack) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(GoBack.value);
                  };
                  throw new Error("Failed pattern match at Control.Transformers.Back.Trans (line 46, column 25 - line 53, column 48): " + [ v.constructor.name ]);
              });
              return BackT(loop);
          };
      });
  };
  var applyFailbackT = function (dictMonad) {
      return new Control_Apply.Apply(function () {
          return functorFailbackT(((dictMonad.Bind1()).Apply0()).Functor0());
      }, Control_Monad.ap(monadFailbackT(dictMonad)));
  };
  var applicativeFailbackT = function (dictMonad) {
      return new Control_Applicative.Applicative(function () {
          return applyFailbackT(dictMonad);
      }, function ($58) {
          return BackT(Control_Applicative.pure(dictMonad.Applicative0())(NoBack.create($58)));
      });
  };
  exports["runBackT"] = runBackT;
  exports["BackT"] = BackT;
  exports["BackPoint"] = BackPoint;
  exports["NoBack"] = NoBack;
  exports["GoBack"] = GoBack;
  exports["functorFailbackT"] = functorFailbackT;
  exports["applyFailbackT"] = applyFailbackT;
  exports["applicativeFailbackT"] = applicativeFailbackT;
  exports["bindFailbackT"] = bindFailbackT;
  exports["monadFailbackT"] = monadFailbackT;
})(PS["Control.Transformers.Back.Trans"] = PS["Control.Transformers.Back.Trans"] || {});
(function(exports) {const axios = require("axios");

  const transformTxnResponse = function(successResponse, headers) {
      //Transforming params to string TODO : Why is this required?
      if(headers["x-api"] && headers["x-api"] == "txns" && successResponse.code == 200) {
        try {
          successResponse.response.payment.authentication.params = JSON.stringify(successResponse.response.payment.authentication.params);
        } catch(err) {};
      }
      return successResponse;
  };



  const makeRequest = function(headersRaw, method, url, payload, success) {
        // window.tokenHash = window.tokenHash || JBridge.getMd5(__payload.session_token || "");
        window.currentAPIUrl = url;

        var successResponse = {};
        var headers = {};
        headers["Cache-Control"] = "no-cache";
        // headers["x-jp-merchant-id"] = __payload.merchant_id;
        headers["x-jp-session-id"] = window.hyper_session_id;

        console.log("URL" , url);
        console.log("METHOD" , method);
        console.log("BODY",payload);
        console.log("HEADERS",headersRaw);

        var isSSLPinnedURL = false;

        for(var i=0;i<headersRaw.length;i++){
          headers[headersRaw[i].field] = headersRaw[i].value;
        }
        var callback = callbackMapper.map(function() {
          if (arguments && arguments.length >= 3) {
              successResponse = {
                    status: arguments[0],
                    response: JSON.parse(atob(arguments[1]) || "{}"),
                    code: parseInt(arguments[2])
              };
              successResponse = transformTxnResponse(successResponse, headers);
              console.log("Response: ");
              console.log(successResponse);
              if(successResponse.status === "failure"){
                    console.log("inside failure");
                    successResponse.response = {error : true,
                                                    errorMessage: "",
                                                    userMessage: ""
                                                  };
                    console.log("Response: ");
                    console.log(successResponse);
                    success(JSON.stringify(successResponse))();
                  }else
                        success(JSON.stringify(successResponse.response))();
            } else {
                  success({
                        status: "failed",
                        response: "{}",
                        code: 50
                      })();
                }
          });
          console.log("Enter CAll API")
          JBridge.callAPI(method, url, getEncodedData(payload), getEncodedData(JSON.stringify(headers)), isSSLPinnedURL, callback);
    }

  exports["showUI'"] = function(sc,screen) {
	  return function() {
		  var screenJSON = JSON.parse(screen);
		  var screenName = screenJSON.tag;
		  screenJSON.screen = screenName;
      if(screenName=="InitScreen") {
        screenJSON.screen = "INIT_UI";
      }
		  window.__duiShowScreen(sc, screenJSON);
	  };
  };

  exports["callAPI'"] = function() {
      return function(success) {
          return function(request) {
              return function() {
                  makeRequest(request.headers, request.method, request.url, request.payload, success);
              };
          };
      };
  }



  exports["log"] = function (tag) {
      return function (a) {
          console.log(tag + " >>", a);
          return a;
      }
  }

  const callbackMapper = {
	  map : function(fn) {
		  if(typeof window.__FN_INDEX !== 'undefined' && window.__FN_INDEX !== null) {
			  var proxyFnName = 'F' + window.__FN_INDEX;
			  window.__PROXY_FN[proxyFnName] = fn;
		  	window.__FN_INDEX++;
			  return proxyFnName;
		  } else {
			  throw new Error("Please initialise window.__FN_INDEX = 0 in index.js of your project.");
		  }
	  }
  }

  const getEncodedData = function(data) {
      if (window.__OS == "IOS")
        return  btoa(unescape(encodeURIComponent(data)));
      else
        return data;
    }

  exports["onBackPress'"] = function(cb) {
      return function() {
        window.onBackPressed = function() {
       console.log("Back pressed");
       window.onBackPressed = null;
       cb()();
        }
      }
  };

  const callbackMapper2 = {
      map : function(fn) {
      if(typeof window.__FN_INDEX !== 'undefined' && window.__FN_INDEX !== null) {
          var proxyFnName = 'F' + window.__FN_INDEX;
          window.__PROXY_FN[proxyFnName] = fn;
            window.__FN_INDEX++;
          return proxyFnName;
      } else {
          throw new Error("Please initialise window.__FN_INDEX = 0 in index.js of your project.");
      }
  }
  }
})(PS["Engineering.Helpers.Commons"] = PS["Engineering.Helpers.Commons"] || {});
(function(exports) {
    "use strict";

  exports.runFn4 = function (fn) {
    return function (a) {
      return function (b) {
        return function (c) {
          return function (d) {
            return fn(a, b, c, d);
          };
        };
      };
    };
  };
})(PS["Data.Function.Uncurried"] = PS["Data.Function.Uncurried"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var $foreign = PS["Data.Function.Uncurried"];
  var Data_Unit = PS["Data.Unit"];
  exports["runFn4"] = $foreign.runFn4;
})(PS["Data.Function.Uncurried"] = PS["Data.Function.Uncurried"] || {});
(function(exports) {
  /* globals setImmediate, clearImmediate, setTimeout, clearTimeout */
  /* jshint -W083, -W098, -W003 */
  "use strict";

  var Aff = function () {
    // A unique value for empty.
    var EMPTY = {};

    /*

  An awkward approximation. We elide evidence we would otherwise need in PS for
  efficiency sake.

  data Aff eff a
    = Pure a
    | Throw Error
    | Catch (Aff eff a) (Error -> Aff eff a)
    | Sync (Eff eff a)
    | Async ((Either Error a -> Eff eff Unit) -> Eff eff (Canceler eff))
    | forall b. Bind (Aff eff b) (b -> Aff eff a)
    | forall b. Bracket (Aff eff b) (BracketConditions eff b) (b -> Aff eff a)
    | forall b. Fork Boolean (Aff eff b) ?(Fiber eff b -> a)
    | Sequential (ParAff aff a)

  */  
    var PURE    = "Pure";
    var THROW   = "Throw";
    var CATCH   = "Catch";
    var SYNC    = "Sync";
    var ASYNC   = "Async";
    var BIND    = "Bind";
    var BRACKET = "Bracket";
    var FORK    = "Fork";
    var SEQ     = "Sequential";

    /*

  data ParAff eff a
    = forall b. Map (b -> a) (ParAff eff b)
    | forall b. Apply (ParAff eff (b -> a)) (ParAff eff b)
    | Alt (ParAff eff a) (ParAff eff a)
    | ?Par (Aff eff a)

  */  
    var MAP   = "Map";
    var APPLY = "Apply";
    var ALT   = "Alt";

    // Various constructors used in interpretation
    var CONS      = "Cons";      // Cons-list, for stacks
    var RESUME    = "Resume";    // Continue indiscriminately
    var RELEASE   = "Release";   // Continue with bracket finalizers
    var FINALIZER = "Finalizer"; // A non-interruptible effect
    var FINALIZED = "Finalized"; // Marker for finalization
    var FORKED    = "Forked";    // Reference to a forked fiber, with resumption stack
    var FIBER     = "Fiber";     // Actual fiber reference
    var THUNK     = "Thunk";     // Primed effect, ready to invoke

    function Aff(tag, _1, _2, _3) {
      this.tag = tag;
      this._1  = _1;
      this._2  = _2;
      this._3  = _3;
    }

    function AffCtr(tag) {
      var fn = function (_1, _2, _3) {
        return new Aff(tag, _1, _2, _3);
      };
      fn.tag = tag;
      return fn;
    }

    function nonCanceler(error) {
      return new Aff(PURE, void 0);
    }

    function runEff(eff) {
      try {
        eff();
      } catch (error) {
        setTimeout(function () {
          throw error;
        }, 0);
      }
    }

    function runSync(left, right, eff) {
      try {
        return right(eff());
      } catch (error) {
        return left(error);
      }
    }

    function runAsync(left, eff, k) {
      try {
        return eff(k)();
      } catch (error) {
        k(left(error))();
        return nonCanceler;
      }
    }

    var Scheduler = function () {
      var limit    = 1024;
      var size     = 0;
      var ix       = 0;
      var queue    = new Array(limit);
      var draining = false;

      function drain() {
        var thunk;
        draining = true;
        while (size !== 0) {
          size--;
          thunk     = queue[ix];
          queue[ix] = void 0;
          ix        = (ix + 1) % limit;
          thunk();
        }
        draining = false;
      }

      return {
        isDraining: function () {
          return draining;
        },
        enqueue: function (cb) {
          var i, tmp;
          if (size === limit) {
            tmp = draining;
            drain();
            draining = tmp;
          }

          queue[(ix + size) % limit] = cb;
          size++;

          if (!draining) {
            drain();
          }
        }
      };
    }();

    function Supervisor(util) {
      var fibers  = {};
      var fiberId = 0;
      var count   = 0;

      return {
        register: function (fiber) {
          var fid = fiberId++;
          fiber.onComplete({
            rethrow: true,
            handler: function (result) {
              return function () {
                count--;
                delete fibers[fid];
              };
            }
          });
          fibers[fid] = fiber;
          count++;
        },
        isEmpty: function () {
          return count === 0;
        },
        killAll: function (killError, cb) {
          return function () {
            var killCount = 0;
            var kills     = {};

            function kill(fid) {
              kills[fid] = fibers[fid].kill(killError, function (result) {
                return function () {
                  delete kills[fid];
                  killCount--;
                  if (util.isLeft(result) && util.fromLeft(result)) {
                    setTimeout(function () {
                      throw util.fromLeft(result);
                    }, 0);
                  }
                  if (killCount === 0) {
                    cb();
                  }
                };
              })();
            }

            for (var k in fibers) {
              if (fibers.hasOwnProperty(k)) {
                killCount++;
                kill(k);
              }
            }

            fibers  = {};
            fiberId = 0;
            count   = 0;

            return function (error) {
              return new Aff(SYNC, function () {
                for (var k in kills) {
                  if (kills.hasOwnProperty(k)) {
                    kills[k]();
                  }
                }
              });
            };
          };
        }
      };
    }

    // Fiber state machine
    var SUSPENDED   = 0; // Suspended, pending a join.
    var CONTINUE    = 1; // Interpret the next instruction.
    var STEP_BIND   = 2; // Apply the next bind.
    var STEP_RESULT = 3; // Handle potential failure from a result.
    var PENDING     = 4; // An async effect is running.
    var RETURN      = 5; // The current stack has returned.
    var COMPLETED   = 6; // The entire fiber has completed.

    function Fiber(util, supervisor, aff) {
      // Monotonically increasing tick, increased on each asynchronous turn.
      var runTick = 0;

      // The current branch of the state machine.
      var status = SUSPENDED;

      // The current point of interest for the state machine branch.
      var step      = aff;  // Successful step
      var fail      = null; // Failure step
      var interrupt = null; // Asynchronous interrupt

      // Stack of continuations for the current fiber.
      var bhead = null;
      var btail = null;

      // Stack of attempts and finalizers for error recovery. Every `Cons` is also
      // tagged with current `interrupt` state. We use this to track which items
      // should be ignored or evaluated as a result of a kill.
      var attempts = null;

      // A special state is needed for Bracket, because it cannot be killed. When
      // we enter a bracket acquisition or finalizer, we increment the counter,
      // and then decrement once complete.
      var bracketCount = 0;

      // Each join gets a new id so they can be revoked.
      var joinId  = 0;
      var joins   = null;
      var rethrow = true;

      // Each invocation of `run` requires a tick. When an asynchronous effect is
      // resolved, we must check that the local tick coincides with the fiber
      // tick before resuming. This prevents multiple async continuations from
      // accidentally resuming the same fiber. A common example may be invoking
      // the provided callback in `makeAff` more than once, but it may also be an
      // async effect resuming after the fiber was already cancelled.
      function run(localRunTick) {
        var tmp, result, attempt;
        while (true) {
          tmp       = null;
          result    = null;
          attempt   = null;

          switch (status) {
          case STEP_BIND:
            status = CONTINUE;
            step   = bhead(step);
            if (btail === null) {
              bhead = null;
            } else {
              bhead = btail._1;
              btail = btail._2;
            }
            break;

          case STEP_RESULT:
            if (util.isLeft(step)) {
              status = RETURN;
              fail   = step;
              step   = null;
            } else if (bhead === null) {
              status = RETURN;
            } else {
              status = STEP_BIND;
              step   = util.fromRight(step);
            }
            break;

          case CONTINUE:
            switch (step.tag) {
            case BIND:
              if (bhead) {
                btail = new Aff(CONS, bhead, btail);
              }
              bhead  = step._2;
              status = CONTINUE;
              step   = step._1;
              break;

            case PURE:
              if (bhead === null) {
                status = RETURN;
                step   = util.right(step._1);
              } else {
                status = STEP_BIND;
                step   = step._1;
              }
              break;

            case SYNC:
              status = STEP_RESULT;
              step   = runSync(util.left, util.right, step._1);
              break;

            case ASYNC:
              status = PENDING;
              step   = runAsync(util.left, step._1, function (result) {
                return function () {
                  if (runTick !== localRunTick) {
                    return;
                  }
                  runTick++;
                  Scheduler.enqueue(function () {
                    // It's possible to interrupt the fiber between enqueuing and
                    // resuming, so we need to check that the runTick is still
                    // valid.
                    if (runTick !== localRunTick + 1) {
                      return;
                    }
                    status = STEP_RESULT;
                    step   = result;
                    run(runTick);
                  });
                };
              });
              return;

            case THROW:
              status = RETURN;
              fail   = util.left(step._1);
              step   = null;
              break;

            // Enqueue the Catch so that we can call the error handler later on
            // in case of an exception.
            case CATCH:
              if (bhead === null) {
                attempts = new Aff(CONS, step, attempts, interrupt);
              } else {
                attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);
              }
              bhead    = null;
              btail    = null;
              status   = CONTINUE;
              step     = step._1;
              break;

            // Enqueue the Bracket so that we can call the appropriate handlers
            // after resource acquisition.
            case BRACKET:
              bracketCount++;
              if (bhead === null) {
                attempts = new Aff(CONS, step, attempts, interrupt);
              } else {
                attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);
              }
              bhead  = null;
              btail  = null;
              status = CONTINUE;
              step   = step._1;
              break;

            case FORK:
              status = STEP_RESULT;
              tmp    = Fiber(util, supervisor, step._2);
              if (supervisor) {
                supervisor.register(tmp);
              }
              if (step._1) {
                tmp.run();
              }
              step = util.right(tmp);
              break;

            case SEQ:
              status = CONTINUE;
              step   = sequential(util, supervisor, step._1);
              break;
            }
            break;

          case RETURN:
            bhead = null;
            btail = null;
            // If the current stack has returned, and we have no other stacks to
            // resume or finalizers to run, the fiber has halted and we can
            // invoke all join callbacks. Otherwise we need to resume.
            if (attempts === null) {
              status = COMPLETED;
              step   = interrupt || fail || step;
            } else {
              // The interrupt status for the enqueued item.
              tmp      = attempts._3;
              attempt  = attempts._1;
              attempts = attempts._2;

              switch (attempt.tag) {
              // We cannot recover from an interrupt. Otherwise we should
              // continue stepping, or run the exception handler if an exception
              // was raised.
              case CATCH:
                // We should compare the interrupt status as well because we
                // only want it to apply if there has been an interrupt since
                // enqueuing the catch.
                if (interrupt && interrupt !== tmp) {
                  status = RETURN;
                } else if (fail) {
                  status = CONTINUE;
                  step   = attempt._2(util.fromLeft(fail));
                  fail   = null;
                }
                break;

              // We cannot resume from an interrupt or exception.
              case RESUME:
                // As with Catch, we only want to ignore in the case of an
                // interrupt since enqueing the item.
                if (interrupt && interrupt !== tmp || fail) {
                  status = RETURN;
                } else {
                  bhead  = attempt._1;
                  btail  = attempt._2;
                  status = STEP_BIND;
                  step   = util.fromRight(step);
                }
                break;

              // If we have a bracket, we should enqueue the handlers,
              // and continue with the success branch only if the fiber has
              // not been interrupted. If the bracket acquisition failed, we
              // should not run either.
              case BRACKET:
                bracketCount--;
                if (fail === null) {
                  result   = util.fromRight(step);
                  // We need to enqueue the Release with the same interrupt
                  // status as the Bracket that is initiating it.
                  attempts = new Aff(CONS, new Aff(RELEASE, attempt._2, result), attempts, tmp);
                  // We should only coninue as long as the interrupt status has not changed or
                  // we are currently within a non-interruptable finalizer.
                  if (interrupt === tmp || bracketCount > 0) {
                    status = CONTINUE;
                    step   = attempt._3(result);
                  }
                }
                break;

              // Enqueue the appropriate handler. We increase the bracket count
              // because it should not be cancelled.
              case RELEASE:
                bracketCount++;
                attempts = new Aff(CONS, new Aff(FINALIZED, step, fail), attempts, interrupt);
                status   = CONTINUE;
                // It has only been killed if the interrupt status has changed
                // since we enqueued the item.
                if (interrupt && interrupt !== tmp) {
                  step = attempt._1.killed(util.fromLeft(interrupt))(attempt._2);
                } else if (fail) {
                  step = attempt._1.failed(util.fromLeft(fail))(attempt._2);
                } else {
                  step = attempt._1.completed(util.fromRight(step))(attempt._2);
                }
                fail = null;
                break;

              case FINALIZER:
                bracketCount++;
                attempts = new Aff(CONS, new Aff(FINALIZED, step, fail), attempts, interrupt);
                status   = CONTINUE;
                step     = attempt._1;
                break;

              case FINALIZED:
                bracketCount--;
                status = RETURN;
                step   = attempt._1;
                fail   = attempt._2;
                break;
              }
            }
            break;

          case COMPLETED:
            for (var k in joins) {
              if (joins.hasOwnProperty(k)) {
                rethrow = rethrow && joins[k].rethrow;
                runEff(joins[k].handler(step));
              }
            }
            joins = null;
            // If we have an interrupt and a fail, then the thread threw while
            // running finalizers. This should always rethrow in a fresh stack.
            if (interrupt && fail) {
              setTimeout(function () {
                throw util.fromLeft(fail);
              }, 0);
            // If we have an unhandled exception, and no other fiber has joined
            // then we need to throw the exception in a fresh stack.
            } else if (util.isLeft(step) && rethrow) {
              setTimeout(function () {
                // Guard on reathrow because a completely synchronous fiber can
                // still have an observer which was added after-the-fact.
                if (rethrow) {
                  throw util.fromLeft(step);
                }
              }, 0);
            }
            return;
          case SUSPENDED:
            status = CONTINUE;
            break;
          case PENDING: return;
          }
        }
      }

      function onComplete(join) {
        return function () {
          if (status === COMPLETED) {
            rethrow = rethrow && join.rethrow;
            join.handler(step)();
            return function () {};
          }

          var jid    = joinId++;
          joins      = joins || {};
          joins[jid] = join;

          return function() {
            if (joins !== null) {
              delete joins[jid];
            }
          };
        };
      }

      function kill(error, cb) {
        return function () {
          if (status === COMPLETED) {
            cb(util.right(void 0))();
            return function () {};
          }

          var canceler = onComplete({
            rethrow: false,
            handler: function (/* unused */) {
              return cb(util.right(void 0));
            }
          })();

          switch (status) {
          case SUSPENDED:
            interrupt = util.left(error);
            status    = COMPLETED;
            step      = interrupt;
            run(runTick);
            break;
          case PENDING:
            if (interrupt === null) {
              interrupt = util.left(error);
            }
            if (bracketCount === 0) {
              if (status === PENDING) {
                attempts = new Aff(CONS, new Aff(FINALIZER, step(error)), attempts, interrupt);
              }
              status   = RETURN;
              step     = null;
              fail     = null;
              run(++runTick);
            }
            break;
          default:
            if (interrupt === null) {
              interrupt = util.left(error);
            }
            if (bracketCount === 0) {
              status = RETURN;
              step   = null;
              fail   = null;
            }
          }

          return canceler;
        };
      }

      function join(cb) {
        return function () {
          var canceler = onComplete({
            rethrow: false,
            handler: cb
          })();
          if (status === SUSPENDED) {
            run(runTick);
          }
          return canceler;
        };
      }

      return {
        kill: kill,
        join: join,
        onComplete: onComplete,
        isSuspended: function () {
          return status === SUSPENDED;
        },
        run: function () {
          if (status === SUSPENDED) {
            if (!Scheduler.isDraining()) {
              Scheduler.enqueue(function () {
                run(runTick);
              });
            } else {
              run(runTick);
            }
          }
        }
      };
    }

    function runPar(util, supervisor, par, cb) {
      // Table of all forked fibers.
      var fiberId   = 0;
      var fibers    = {};

      // Table of currently running cancelers, as a product of `Alt` behavior.
      var killId    = 0;
      var kills     = {};

      // Error used for early cancelation on Alt branches.
      var early     = new Error("[ParAff] Early exit");

      // Error used to kill the entire tree.
      var interrupt = null;

      // The root pointer of the tree.
      var root      = EMPTY;

      // Walks a tree, invoking all the cancelers. Returns the table of pending
      // cancellation fibers.
      function kill(error, par, cb) {
        var step  = par;
        var head  = null;
        var tail  = null;
        var count = 0;
        var kills = {};
        var tmp, kid;

        loop: while (true) {
          tmp = null;

          switch (step.tag) {
          case FORKED:
            if (step._3 === EMPTY) {
              tmp = fibers[step._1];
              kills[count++] = tmp.kill(error, function (result) {
                return function () {
                  count--;
                  if (count === 0) {
                    cb(result)();
                  }
                };
              });
            }
            // Terminal case.
            if (head === null) {
              break loop;
            }
            // Go down the right side of the tree.
            step = head._2;
            if (tail === null) {
              head = null;
            } else {
              head = tail._1;
              tail = tail._2;
            }
            break;
          case MAP:
            step = step._2;
            break;
          case APPLY:
          case ALT:
            if (head) {
              tail = new Aff(CONS, head, tail);
            }
            head = step;
            step = step._1;
            break;
          }
        }

        if (count === 0) {
          cb(util.right(void 0))();
        } else {
          // Run the cancelation effects. We alias `count` because it's mutable.
          kid = 0;
          tmp = count;
          for (; kid < tmp; kid++) {
            kills[kid] = kills[kid]();
          }
        }

        return kills;
      }

      // When a fiber resolves, we need to bubble back up the tree with the
      // result, computing the applicative nodes.
      function join(result, head, tail) {
        var fail, step, lhs, rhs, tmp, kid;

        if (util.isLeft(result)) {
          fail = result;
          step = null;
        } else {
          step = result;
          fail = null;
        }

        loop: while (true) {
          lhs = null;
          rhs = null;
          tmp = null;
          kid = null;

          // We should never continue if the entire tree has been interrupted.
          if (interrupt !== null) {
            return;
          }

          // We've made it all the way to the root of the tree, which means
          // the tree has fully evaluated.
          if (head === null) {
            cb(fail || step)();
            return;
          }

          // The tree has already been computed, so we shouldn't try to do it
          // again. This should never happen.
          // TODO: Remove this?
          if (head._3 !== EMPTY) {
            return;
          }

          switch (head.tag) {
          case MAP:
            if (fail === null) {
              head._3 = util.right(head._1(util.fromRight(step)));
              step    = head._3;
            } else {
              head._3 = fail;
            }
            break;
          case APPLY:
            lhs = head._1._3;
            rhs = head._2._3;
            // If we have a failure we should kill the other side because we
            // can't possible yield a result anymore.
            if (fail) {
              head._3 = fail;
              tmp     = true;
              kid     = killId++;

              kills[kid] = kill(early, fail === lhs ? head._2 : head._1, function (/* unused */) {
                return function () {
                  delete kills[kid];
                  if (tmp) {
                    tmp = false;
                  } else if (tail === null) {
                    join(fail, null, null);
                  } else {
                    join(fail, tail._1, tail._2);
                  }
                };
              });

              if (tmp) {
                tmp = false;
                return;
              }
            } else if (lhs === EMPTY || rhs === EMPTY) {
              // We can only proceed if both sides have resolved.
              return;
            } else {
              step    = util.right(util.fromRight(lhs)(util.fromRight(rhs)));
              head._3 = step;
            }
            break;
          case ALT:
            lhs = head._1._3;
            rhs = head._2._3;
            // We can only proceed if both have resolved or we have a success
            if (lhs === EMPTY && util.isLeft(rhs) || rhs === EMPTY && util.isLeft(lhs)) {
              return;
            }
            // If both sides resolve with an error, we should continue with the
            // first error
            if (lhs !== EMPTY && util.isLeft(lhs) && rhs !== EMPTY && util.isLeft(rhs)) {
              fail    = step === lhs ? rhs : lhs;
              step    = null;
              head._3 = fail;
            } else {
              head._3 = step;
              tmp     = true;
              kid     = killId++;
              // Once a side has resolved, we need to cancel the side that is still
              // pending before we can continue.
              kills[kid] = kill(early, step === lhs ? head._2 : head._1, function (/* unused */) {
                return function () {
                  delete kills[kid];
                  if (tmp) {
                    tmp = false;
                  } else if (tail === null) {
                    join(step, null, null);
                  } else {
                    join(step, tail._1, tail._2);
                  }
                };
              });

              if (tmp) {
                tmp = false;
                return;
              }
            }
            break;
          }

          if (tail === null) {
            head = null;
          } else {
            head = tail._1;
            tail = tail._2;
          }
        }
      }

      function resolve(fiber) {
        return function (result) {
          return function () {
            delete fibers[fiber._1];
            fiber._3 = result;
            join(result, fiber._2._1, fiber._2._2);
          };
        };
      }

      // Walks the applicative tree, substituting non-applicative nodes with
      // `FORKED` nodes. In this tree, all applicative nodes use the `_3` slot
      // as a mutable slot for memoization. In an unresolved state, the `_3`
      // slot is `EMPTY`. In the cases of `ALT` and `APPLY`, we always walk
      // the left side first, because both operations are left-associative. As
      // we `RETURN` from those branches, we then walk the right side.
      function run() {
        var status = CONTINUE;
        var step   = par;
        var head   = null;
        var tail   = null;
        var tmp, fid;

        loop: while (true) {
          tmp = null;
          fid = null;

          switch (status) {
          case CONTINUE:
            switch (step.tag) {
            case MAP:
              if (head) {
                tail = new Aff(CONS, head, tail);
              }
              head = new Aff(MAP, step._1, EMPTY, EMPTY);
              step = step._2;
              break;
            case APPLY:
              if (head) {
                tail = new Aff(CONS, head, tail);
              }
              head = new Aff(APPLY, EMPTY, step._2, EMPTY);
              step = step._1;
              break;
            case ALT:
              if (head) {
                tail = new Aff(CONS, head, tail);
              }
              head = new Aff(ALT, EMPTY, step._2, EMPTY);
              step = step._1;
              break;
            default:
              // When we hit a leaf value, we suspend the stack in the `FORKED`.
              // When the fiber resolves, it can bubble back up the tree.
              fid    = fiberId++;
              status = RETURN;
              tmp    = step;
              step   = new Aff(FORKED, fid, new Aff(CONS, head, tail), EMPTY);
              tmp    = Fiber(util, supervisor, tmp);
              tmp.onComplete({
                rethrow: false,
                handler: resolve(step)
              })();
              fibers[fid] = tmp;
              if (supervisor) {
                supervisor.register(tmp);
              }
            }
            break;
          case RETURN:
            // Terminal case, we are back at the root.
            if (head === null) {
              break loop;
            }
            // If we are done with the right side, we need to continue down the
            // left. Otherwise we should continue up the stack.
            if (head._1 === EMPTY) {
              head._1 = step;
              status  = CONTINUE;
              step    = head._2;
              head._2 = EMPTY;
            } else {
              head._2 = step;
              step    = head;
              if (tail === null) {
                head  = null;
              } else {
                head  = tail._1;
                tail  = tail._2;
              }
            }
          }
        }

        // Keep a reference to the tree root so it can be cancelled.
        root = step;

        for (fid = 0; fid < fiberId; fid++) {
          fibers[fid].run();
        }
      }

      // Cancels the entire tree. If there are already subtrees being canceled,
      // we need to first cancel those joins. We will then add fresh joins for
      // all pending branches including those that were in the process of being
      // canceled.
      function cancel(error, cb) {
        interrupt = util.left(error);
        var innerKills;
        for (var kid in kills) {
          if (kills.hasOwnProperty(kid)) {
            innerKills = kills[kid];
            for (kid in innerKills) {
              if (innerKills.hasOwnProperty(kid)) {
                innerKills[kid]();
              }
            }
          }
        }

        kills = null;
        var newKills = kill(error, root, cb);

        return function (killError) {
          return new Aff(ASYNC, function (killCb) {
            return function () {
              for (var kid in newKills) {
                if (newKills.hasOwnProperty(kid)) {
                  newKills[kid]();
                }
              }
              return nonCanceler;
            };
          });
        };
      }

      run();

      return function (killError) {
        return new Aff(ASYNC, function (killCb) {
          return function () {
            return cancel(killError, killCb);
          };
        });
      };
    }

    function sequential(util, supervisor, par) {
      return new Aff(ASYNC, function (cb) {
        return function () {
          return runPar(util, supervisor, par, cb);
        };
      });
    }

    Aff.EMPTY       = EMPTY;
    Aff.Pure        = AffCtr(PURE);
    Aff.Throw       = AffCtr(THROW);
    Aff.Catch       = AffCtr(CATCH);
    Aff.Sync        = AffCtr(SYNC);
    Aff.Async       = AffCtr(ASYNC);
    Aff.Bind        = AffCtr(BIND);
    Aff.Bracket     = AffCtr(BRACKET);
    Aff.Fork        = AffCtr(FORK);
    Aff.Seq         = AffCtr(SEQ);
    Aff.ParMap      = AffCtr(MAP);
    Aff.ParApply    = AffCtr(APPLY);
    Aff.ParAlt      = AffCtr(ALT);
    Aff.Fiber       = Fiber;
    Aff.Supervisor  = Supervisor;
    Aff.Scheduler   = Scheduler;
    Aff.nonCanceler = nonCanceler;

    return Aff;
  }();

  exports._pure = Aff.Pure;

  exports._throwError = Aff.Throw;

  exports._catchError = function (aff) {
    return function (k) {
      return Aff.Catch(aff, k);
    };
  };

  exports._map = function (f) {
    return function (aff) {
      if (aff.tag === Aff.Pure.tag) {
        return Aff.Pure(f(aff._1));
      } else {
        return Aff.Bind(aff, function (value) {
          return Aff.Pure(f(value));
        });
      }
    };
  };

  exports._bind = function (aff) {
    return function (k) {
      return Aff.Bind(aff, k);
    };
  };

  exports._fork = function (immediate) {
    return function (aff) {
      return Aff.Fork(immediate, aff);
    };
  };

  exports._liftEffect = Aff.Sync;

  exports._parAffMap = function (f) {
    return function (aff) {
      return Aff.ParMap(f, aff);
    };
  };

  exports._parAffApply = function (aff1) {
    return function (aff2) {
      return Aff.ParApply(aff1, aff2);
    };
  };

  exports._parAffAlt = function (aff1) {
    return function (aff2) {
      return Aff.ParAlt(aff1, aff2);
    };
  };

  exports.makeAff = Aff.Async;

  exports._makeFiber = function (util, aff) {
    return function () {
      return Aff.Fiber(util, null, aff);
    };
  };

  exports._delay = function () {
    function setDelay(n, k) {
      if (n === 0 && typeof setImmediate !== "undefined") {
        return setImmediate(k);
      } else {
        return setTimeout(k, n);
      }
    }

    function clearDelay(n, t) {
      if (n === 0 && typeof clearImmediate !== "undefined") {
        return clearImmediate(t);
      } else {
        return clearTimeout(t);
      }
    }

    return function (right, ms) {
      return Aff.Async(function (cb) {
        return function () {
          var timer = setDelay(ms, cb(right()));
          return function () {
            return Aff.Sync(function () {
              return right(clearDelay(ms, timer));
            });
          };
        };
      });
    };
  }();

  exports._sequential = Aff.Seq;
})(PS["Effect.Aff"] = PS["Effect.Aff"] || {});
(function(exports) {
    "use strict";

  exports.unsafePerformEffect = function (f) {
    return f();
  };
})(PS["Effect.Unsafe"] = PS["Effect.Unsafe"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var $foreign = PS["Effect.Unsafe"];
  var Effect = PS["Effect"];
  exports["unsafePerformEffect"] = $foreign.unsafePerformEffect;
})(PS["Effect.Unsafe"] = PS["Effect.Unsafe"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var $foreign = PS["Effect.Aff"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Parallel = PS["Control.Parallel"];
  var Control_Parallel_Class = PS["Control.Parallel.Class"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Time_Duration = PS["Data.Time.Duration"];
  var Data_Unit = PS["Data.Unit"];
  var Effect = PS["Effect"];
  var Effect_Class = PS["Effect.Class"];
  var Effect_Exception = PS["Effect.Exception"];
  var Effect_Unsafe = PS["Effect.Unsafe"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Canceler = function (x) {
      return x;
  };           
  var functorParAff = new Data_Functor.Functor($foreign["_parAffMap"]);
  var functorAff = new Data_Functor.Functor($foreign["_map"]);
  var forkAff = $foreign["_fork"](true);
  var ffiUtil = (function () {
      var unsafeFromRight = function (v) {
          if (v instanceof Data_Either.Right) {
              return v.value0;
          };
          if (v instanceof Data_Either.Left) {
              return Partial_Unsafe.unsafeCrashWith("unsafeFromRight: Left");
          };
          throw new Error("Failed pattern match at Effect.Aff (line 400, column 21 - line 402, column 31): " + [ v.constructor.name ]);
      };
      var unsafeFromLeft = function (v) {
          if (v instanceof Data_Either.Left) {
              return v.value0;
          };
          if (v instanceof Data_Either.Right) {
              return Partial_Unsafe.unsafeCrashWith("unsafeFromLeft: Right");
          };
          throw new Error("Failed pattern match at Effect.Aff (line 395, column 20 - line 399, column 3): " + [ v.constructor.name ]);
      };
      var isLeft = function (v) {
          if (v instanceof Data_Either.Left) {
              return true;
          };
          if (v instanceof Data_Either.Right) {
              return false;
          };
          throw new Error("Failed pattern match at Effect.Aff (line 390, column 12 - line 392, column 20): " + [ v.constructor.name ]);
      };
      return {
          isLeft: isLeft,
          fromLeft: unsafeFromLeft,
          fromRight: unsafeFromRight,
          left: Data_Either.Left.create,
          right: Data_Either.Right.create
      };
  })();
  var makeFiber = function (aff) {
      return $foreign["_makeFiber"](ffiUtil, aff);
  };
  var launchAff = function (aff) {
      return function __do() {
          var v = makeFiber(aff)();
          v.run();
          return v;
      };
  };
  var launchAff_ = function ($49) {
      return Data_Functor["void"](Effect.functorEffect)(launchAff($49));
  };                                 
  var delay = function (v) {
      return $foreign["_delay"](Data_Either.Right.create, v);
  };
  var applyParAff = new Control_Apply.Apply(function () {
      return functorParAff;
  }, $foreign["_parAffApply"]);
  var monadAff = new Control_Monad.Monad(function () {
      return applicativeAff;
  }, function () {
      return bindAff;
  });
  var bindAff = new Control_Bind.Bind(function () {
      return applyAff;
  }, $foreign["_bind"]);
  var applyAff = new Control_Apply.Apply(function () {
      return functorAff;
  }, Control_Monad.ap(monadAff));
  var applicativeAff = new Control_Applicative.Applicative(function () {
      return applyAff;
  }, $foreign["_pure"]);
  var monadEffectAff = new Effect_Class.MonadEffect(function () {
      return monadAff;
  }, $foreign["_liftEffect"]);
  var effectCanceler = function ($50) {
      return Canceler(Data_Function["const"](Effect_Class.liftEffect(monadEffectAff)($50)));
  };
  var monadThrowAff = new Control_Monad_Error_Class.MonadThrow(function () {
      return monadAff;
  }, $foreign["_throwError"]);
  var monadErrorAff = new Control_Monad_Error_Class.MonadError(function () {
      return monadThrowAff;
  }, $foreign["_catchError"]);
  var parallelAff = new Control_Parallel_Class.Parallel(function () {
      return applicativeParAff;
  }, function () {
      return monadAff;
  }, Unsafe_Coerce.unsafeCoerce, $foreign["_sequential"]);
  var applicativeParAff = new Control_Applicative.Applicative(function () {
      return applyParAff;
  }, function ($54) {
      return Control_Parallel_Class.parallel(parallelAff)(Control_Applicative.pure(applicativeAff)($54));
  });
  var monadRecAff = new Control_Monad_Rec_Class.MonadRec(function () {
      return monadAff;
  }, function (k) {
      var go = function (a) {
          return Control_Bind.bind(bindAff)(k(a))(function (v) {
              if (v instanceof Control_Monad_Rec_Class.Done) {
                  return Control_Applicative.pure(applicativeAff)(v.value0);
              };
              if (v instanceof Control_Monad_Rec_Class.Loop) {
                  return go(v.value0);
              };
              throw new Error("Failed pattern match at Effect.Aff (line 100, column 7 - line 102, column 22): " + [ v.constructor.name ]);
          });
      };
      return go;
  });
  var nonCanceler = Data_Function["const"](Control_Applicative.pure(applicativeAff)(Data_Unit.unit));
  var altParAff = new Control_Alt.Alt(function () {
      return functorParAff;
  }, $foreign["_parAffAlt"]);
  var altAff = new Control_Alt.Alt(function () {
      return functorAff;
  }, function (a1) {
      return function (a2) {
          return Control_Monad_Error_Class.catchError(monadErrorAff)(a1)(Data_Function["const"](a2));
      };
  });
  var plusAff = new Control_Plus.Plus(function () {
      return altAff;
  }, Control_Monad_Error_Class.throwError(monadThrowAff)(Effect_Exception.error("Always fails")));
  var plusParAff = new Control_Plus.Plus(function () {
      return altParAff;
  }, Control_Parallel_Class.parallel(parallelAff)(Control_Plus.empty(plusAff)));
  var alternativeParAff = new Control_Alternative.Alternative(function () {
      return applicativeParAff;
  }, function () {
      return plusParAff;
  });
  exports["Canceler"] = Canceler;
  exports["launchAff"] = launchAff;
  exports["launchAff_"] = launchAff_;
  exports["forkAff"] = forkAff;
  exports["delay"] = delay;
  exports["nonCanceler"] = nonCanceler;
  exports["effectCanceler"] = effectCanceler;
  exports["functorAff"] = functorAff;
  exports["applyAff"] = applyAff;
  exports["applicativeAff"] = applicativeAff;
  exports["bindAff"] = bindAff;
  exports["monadAff"] = monadAff;
  exports["altAff"] = altAff;
  exports["plusAff"] = plusAff;
  exports["monadRecAff"] = monadRecAff;
  exports["monadThrowAff"] = monadThrowAff;
  exports["monadErrorAff"] = monadErrorAff;
  exports["monadEffectAff"] = monadEffectAff;
  exports["functorParAff"] = functorParAff;
  exports["applyParAff"] = applyParAff;
  exports["applicativeParAff"] = applicativeParAff;
  exports["altParAff"] = altParAff;
  exports["plusParAff"] = plusParAff;
  exports["alternativeParAff"] = alternativeParAff;
  exports["parallelAff"] = parallelAff;
  exports["makeAff"] = $foreign.makeAff;
})(PS["Effect.Aff"] = PS["Effect.Aff"] || {});
(function(exports) {
    "use strict";

  exports.unsafeToForeign = function (value) {
    return value;
  };

  exports.unsafeFromForeign = function (value) {
    return value;
  };

  exports.typeOf = function (value) {
    return typeof value;
  };

  exports.tagOf = function (value) {
    return Object.prototype.toString.call(value).slice(8, -1);
  };

  exports.isNull = function (value) {
    return value === null;
  };

  exports.isUndefined = function (value) {
    return value === undefined;
  };

  exports.isArray = Array.isArray || function (value) {
    return Object.prototype.toString.call(value) === "[object Array]";
  };
})(PS["Foreign"] = PS["Foreign"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_FunctorWithIndex = PS["Data.FunctorWithIndex"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semigroup_Foldable = PS["Data.Semigroup.Foldable"];
  var Data_Semigroup_Traversable = PS["Data.Semigroup.Traversable"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];
  var singleton = function ($165) {
      return Data_List_Types.NonEmptyList(Data_NonEmpty.singleton(Data_List_Types.plusList)($165));
  };
  exports["singleton"] = singleton;
})(PS["Data.List.NonEmpty"] = PS["Data.List.NonEmpty"] || {});
(function(exports) {
    "use strict";

  exports._indexOf = function (just) {
    return function (nothing) {
      return function (x) {
        return function (s) {
          var i = s.indexOf(x);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };
})(PS["Data.String.CodeUnits"] = PS["Data.String.CodeUnits"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var $foreign = PS["Data.String.CodeUnits"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_String_Pattern = PS["Data.String.Pattern"];
  var Data_String_Unsafe = PS["Data.String.Unsafe"];
  var Prelude = PS["Prelude"];                                                                
  var indexOf = $foreign["_indexOf"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var contains = function (pat) {
      return function ($16) {
          return Data_Maybe.isJust(indexOf(pat)($16));
      };
  };
  exports["contains"] = contains;
  exports["indexOf"] = indexOf;
})(PS["Data.String.CodeUnits"] = PS["Data.String.CodeUnits"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var $foreign = PS["Foreign"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Int = PS["Data.Int"];
  var Data_List_NonEmpty = PS["Data.List.NonEmpty"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_String_CodeUnits = PS["Data.String.CodeUnits"];
  var Prelude = PS["Prelude"];                 
  var ForeignError = (function () {
      function ForeignError(value0) {
          this.value0 = value0;
      };
      ForeignError.create = function (value0) {
          return new ForeignError(value0);
      };
      return ForeignError;
  })();
  var TypeMismatch = (function () {
      function TypeMismatch(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      TypeMismatch.create = function (value0) {
          return function (value1) {
              return new TypeMismatch(value0, value1);
          };
      };
      return TypeMismatch;
  })();
  var ErrorAtIndex = (function () {
      function ErrorAtIndex(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ErrorAtIndex.create = function (value0) {
          return function (value1) {
              return new ErrorAtIndex(value0, value1);
          };
      };
      return ErrorAtIndex;
  })();
  var ErrorAtProperty = (function () {
      function ErrorAtProperty(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ErrorAtProperty.create = function (value0) {
          return function (value1) {
              return new ErrorAtProperty(value0, value1);
          };
      };
      return ErrorAtProperty;
  })();
  var showForeignError = new Data_Show.Show(function (v) {
      if (v instanceof ForeignError) {
          return "(ForeignError " + (Data_Show.show(Data_Show.showString)(v.value0) + ")");
      };
      if (v instanceof ErrorAtIndex) {
          return "(ErrorAtIndex " + (Data_Show.show(Data_Show.showInt)(v.value0) + (" " + (Data_Show.show(showForeignError)(v.value1) + ")")));
      };
      if (v instanceof ErrorAtProperty) {
          return "(ErrorAtProperty " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + (Data_Show.show(showForeignError)(v.value1) + ")")));
      };
      if (v instanceof TypeMismatch) {
          return "(TypeMismatch " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + (Data_Show.show(Data_Show.showString)(v.value1) + ")")));
      };
      throw new Error("Failed pattern match at Foreign (line 63, column 1 - line 63, column 47): " + [ v.constructor.name ]);
  });
  var fail = function ($107) {
      return Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Data_Identity.monadIdentity))(Data_List_NonEmpty.singleton($107));
  };
  var readArray = function (value) {
      if ($foreign.isArray(value)) {
          return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($foreign.unsafeFromForeign(value));
      };
      if (Data_Boolean.otherwise) {
          return fail(new TypeMismatch("array", $foreign.tagOf(value)));
      };
      throw new Error("Failed pattern match at Foreign (line 147, column 1 - line 147, column 42): " + [ value.constructor.name ]);
  };
  var unsafeReadTagged = function (tag) {
      return function (value) {
          if ($foreign.tagOf(value) === tag) {
              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($foreign.unsafeFromForeign(value));
          };
          if (Data_Boolean.otherwise) {
              return fail(new TypeMismatch(tag, $foreign.tagOf(value)));
          };
          throw new Error("Failed pattern match at Foreign (line 106, column 1 - line 106, column 55): " + [ tag.constructor.name, value.constructor.name ]);
      };
  };
  var readBoolean = unsafeReadTagged("Boolean");
  var readString = unsafeReadTagged("String");
  exports["ForeignError"] = ForeignError;
  exports["TypeMismatch"] = TypeMismatch;
  exports["ErrorAtIndex"] = ErrorAtIndex;
  exports["ErrorAtProperty"] = ErrorAtProperty;
  exports["unsafeReadTagged"] = unsafeReadTagged;
  exports["readString"] = readString;
  exports["readBoolean"] = readBoolean;
  exports["readArray"] = readArray;
  exports["fail"] = fail;
  exports["showForeignError"] = showForeignError;
  exports["unsafeToForeign"] = $foreign.unsafeToForeign;
  exports["typeOf"] = $foreign.typeOf;
  exports["isNull"] = $foreign.isNull;
  exports["isUndefined"] = $foreign.isUndefined;
})(PS["Foreign"] = PS["Foreign"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Data_Maybe = PS["Data.Maybe"];                 
  var Inl = (function () {
      function Inl(value0) {
          this.value0 = value0;
      };
      Inl.create = function (value0) {
          return new Inl(value0);
      };
      return Inl;
  })();
  var Inr = (function () {
      function Inr(value0) {
          this.value0 = value0;
      };
      Inr.create = function (value0) {
          return new Inr(value0);
      };
      return Inr;
  })();
  var Product = (function () {
      function Product(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Product.create = function (value0) {
          return function (value1) {
              return new Product(value0, value1);
          };
      };
      return Product;
  })();
  var NoArguments = (function () {
      function NoArguments() {

      };
      NoArguments.value = new NoArguments();
      return NoArguments;
  })();
  var Constructor = function (x) {
      return x;
  };
  var Generic = function (from, to) {
      this.from = from;
      this.to = to;
  };
  var to = function (dict) {
      return dict.to;
  }; 
  var from = function (dict) {
      return dict.from;
  };
  exports["Generic"] = Generic;
  exports["to"] = to;
  exports["from"] = from;
  exports["NoArguments"] = NoArguments;
  exports["Inl"] = Inl;
  exports["Inr"] = Inr;
  exports["Product"] = Product;
  exports["Constructor"] = Constructor;
})(PS["Data.Generic.Rep"] = PS["Data.Generic.Rep"] || {});
(function(exports) {
    "use strict";

  //------------------------------------------------------------------------------
  // Array creation --------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.range = function (start) {
    return function (end) {
      var step = start > end ? -1 : 1;
      var result = new Array(step * (end - start) + 1);
      var i = start, n = 0;
      while (i !== end) {
        result[n++] = i;
        i += step;
      }
      result[n] = i;
      return result;
    };
  };   

  //------------------------------------------------------------------------------
  // Array size ------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.length = function (xs) {
    return xs.length;
  };

  exports.findIndexImpl = function (just) {
    return function (nothing) {
      return function (f) {
        return function (xs) {
          for (var i = 0, l = xs.length; i < l; i++) {
            if (f(xs[i])) return just(i);
          }
          return nothing;
        };
      };
    };
  };

  exports._deleteAt = function (just) {
    return function (nothing) {
      return function (i) {
        return function (l) {
          if (i < 0 || i >= l.length) return nothing;
          var l1 = l.slice();
          l1.splice(i, 1);
          return just(l1);
        };
      };
    };
  };

  //------------------------------------------------------------------------------
  // Subarrays -------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.slice = function (s) {
    return function (e) {
      return function (l) {
        return l.slice(s, e);
      };
    };
  };

  //------------------------------------------------------------------------------
  // Zipping ---------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.zipWith = function (f) {
    return function (xs) {
      return function (ys) {
        var l = xs.length < ys.length ? xs.length : ys.length;
        var result = new Array(l);
        for (var i = 0; i < l; i++) {
          result[i] = f(xs[i])(ys[i]);
        }
        return result;
      };
    };
  };
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var $foreign = PS["Data.Array"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Control_Monad_ST_Internal = PS["Control.Monad.ST.Internal"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array_NonEmpty_Internal = PS["Data.Array.NonEmpty.Internal"];
  var Data_Array_ST = PS["Data.Array.ST"];
  var Data_Array_ST_Iterator = PS["Data.Array.ST.Iterator"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var zip = $foreign.zipWith(Data_Tuple.Tuple.create);
  var singleton = function (a) {
      return [ a ];
  };
  var findIndex = $foreign.findIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var deleteAt = $foreign["_deleteAt"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var deleteBy = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2.length === 0) {
                  return [  ];
              };
              return Data_Maybe.maybe(v2)(function (i) {
                  return Data_Maybe.fromJust()(deleteAt(i)(v2));
              })(findIndex(v(v1))(v2));
          };
      };
  };
  exports["singleton"] = singleton;
  exports["findIndex"] = findIndex;
  exports["deleteAt"] = deleteAt;
  exports["deleteBy"] = deleteBy;
  exports["zip"] = zip;
  exports["range"] = $foreign.range;
  exports["length"] = $foreign.length;
  exports["zipWith"] = $foreign.zipWith;
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
    "use strict";

  exports._copyST = function (m) {
    return function () {
      var r = {};
      for (var k in m) {
        if (hasOwnProperty.call(m, k)) {
          r[k] = m[k];
        }
      }
      return r;
    };
  };

  exports.empty = {};

  exports.runST = function (f) {
    return f();
  };

  exports._lookup = function (no, yes, k, m) {
    return k in m ? yes(m[k]) : no;
  };

  function toArrayWithKey(f) {
    return function (m) {
      var r = [];
      for (var k in m) {
        if (hasOwnProperty.call(m, k)) {
          r.push(f(k)(m[k]));
        }
      }
      return r;
    };
  }
})(PS["Foreign.Object"] = PS["Foreign.Object"] || {});
(function(exports) {
    "use strict";

  exports["new"] = function () {
    return {};
  };

  exports.poke = function (k) {
    return function (v) {
      return function (m) {
        return function () {
          m[k] = v;
          return m;
        };
      };
    };
  };
})(PS["Foreign.Object.ST"] = PS["Foreign.Object.ST"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var $foreign = PS["Foreign.Object.ST"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Data_Maybe = PS["Data.Maybe"];
  exports["new"] = $foreign["new"];
  exports["poke"] = $foreign.poke;
})(PS["Foreign.Object.ST"] = PS["Foreign.Object.ST"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var $foreign = PS["Foreign.Object"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Control_Monad_ST_Internal = PS["Control.Monad.ST.Internal"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_FoldableWithIndex = PS["Data.FoldableWithIndex"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Functor = PS["Data.Functor"];
  var Data_FunctorWithIndex = PS["Data.FunctorWithIndex"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_TraversableWithIndex = PS["Data.TraversableWithIndex"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Foreign_Object_ST = PS["Foreign.Object.ST"];
  var Prelude = PS["Prelude"];
  var Type_Row_Homogeneous = PS["Type.Row.Homogeneous"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];                       
  var thawST = $foreign["_copyST"];
  var mutate = function (f) {
      return function (m) {
          return $foreign.runST(function __do() {
              var v = thawST(m)();
              var v1 = f(v)();
              return v;
          });
      };
  };
  var lookup = Data_Function_Uncurried.runFn4($foreign["_lookup"])(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
  var insert = function (k) {
      return function (v) {
          return mutate(Foreign_Object_ST.poke(k)(v));
      };
  };
  exports["insert"] = insert;
  exports["lookup"] = lookup;
  exports["thawST"] = thawST;
  exports["empty"] = $foreign.empty;
})(PS["Foreign.Object"] = PS["Foreign.Object"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Either = PS["Data.Either"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Identity = PS["Data.Identity"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];
  var Foreign = PS["Foreign"];
  var Foreign_Internal = PS["Foreign.Internal"];
  var Foreign_NullOrUndefined = PS["Foreign.NullOrUndefined"];
  var Foreign_Object = PS["Foreign.Object"];
  var Prelude = PS["Prelude"];                 
  var Decode = function (decode) {
      this.decode = decode;
  };
  var Encode = function (encode) {
      this.encode = encode;
  }; 
  var stringEncode = new Encode(Foreign.unsafeToForeign);
  var stringDecode = new Decode(Foreign.readString);                                                                                   
  var encode = function (dict) {
      return dict.encode;
  };
  var decode = function (dict) {
      return dict.decode;
  };                                                      
  var booleanDecode = new Decode(Foreign.readBoolean);
  var arrayDecode = function (dictDecode) {
      return new Decode((function () {
          var readElement = function (i) {
              return function (value) {
                  return Control_Monad_Except.mapExcept(Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Data_Functor.map(Data_List_Types.functorNonEmptyList)(Foreign.ErrorAtIndex.create(i))))(decode(dictDecode)(value));
              };
          };
          var readElements = function (arr) {
              return Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Array.zipWith(readElement)(Data_Array.range(0)(Data_Array.length(arr)))(arr));
          };
          return Control_Bind.composeKleisli(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Foreign.readArray)(readElements);
      })());
  };
  exports["decode"] = decode;
  exports["encode"] = encode;
  exports["Decode"] = Decode;
  exports["Encode"] = Encode;
  exports["stringDecode"] = stringDecode;
  exports["booleanDecode"] = booleanDecode;
  exports["arrayDecode"] = arrayDecode;
  exports["stringEncode"] = stringEncode;
})(PS["Foreign.Class"] = PS["Foreign.Class"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var TaggedObject = (function () {
      function TaggedObject(value0) {
          this.value0 = value0;
      };
      TaggedObject.create = function (value0) {
          return new TaggedObject(value0);
      };
      return TaggedObject;
  })();
  exports["TaggedObject"] = TaggedObject;
})(PS["Foreign.Generic.Types"] = PS["Foreign.Generic.Types"] || {});
(function(exports) {
    "use strict";

  exports.unsafeReadPropImpl = function (f, s, key, value) {
    return value == null ? f : s(value[key]);
  };

  exports.unsafeHasOwnProperty = function (prop, value) {
    return Object.prototype.hasOwnProperty.call(value, prop);
  };

  exports.unsafeHasProperty = function (prop, value) {
    return prop in value;
  };
})(PS["Foreign.Index"] = PS["Foreign.Index"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var $foreign = PS["Foreign.Index"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Identity = PS["Data.Identity"];
  var Data_List_NonEmpty = PS["Data.List.NonEmpty"];
  var Foreign = PS["Foreign"];
  var Prelude = PS["Prelude"];                 
  var Index = function (errorAt, hasOwnProperty, hasProperty, index) {
      this.errorAt = errorAt;
      this.hasOwnProperty = hasOwnProperty;
      this.hasProperty = hasProperty;
      this.index = index;
  };
  var unsafeReadProp = function (k) {
      return function (value) {
          return $foreign.unsafeReadPropImpl(Foreign.fail(new Foreign.TypeMismatch("object", Foreign.typeOf(value))), Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity)), k, value);
      };
  };
  var readProp = unsafeReadProp;
  var index = function (dict) {
      return dict.index;
  }; 
  var hasPropertyImpl = function (v) {
      return function (value) {
          if (Foreign.isNull(value)) {
              return false;
          };
          if (Foreign.isUndefined(value)) {
              return false;
          };
          if (Foreign.typeOf(value) === "object" || Foreign.typeOf(value) === "function") {
              return $foreign.unsafeHasProperty(v, value);
          };
          return false;
      };
  };
  var hasProperty = function (dict) {
      return dict.hasProperty;
  };
  var hasOwnPropertyImpl = function (v) {
      return function (value) {
          if (Foreign.isNull(value)) {
              return false;
          };
          if (Foreign.isUndefined(value)) {
              return false;
          };
          if (Foreign.typeOf(value) === "object" || Foreign.typeOf(value) === "function") {
              return $foreign.unsafeHasOwnProperty(v, value);
          };
          return false;
      };
  };                                                                                                                        
  var indexString = new Index(Foreign.ErrorAtProperty.create, hasOwnPropertyImpl, hasPropertyImpl, Data_Function.flip(readProp));
  var hasOwnProperty = function (dict) {
      return dict.hasOwnProperty;
  };
  var errorAt = function (dict) {
      return dict.errorAt;
  };
  exports["Index"] = Index;
  exports["readProp"] = readProp;
  exports["index"] = index;
  exports["hasProperty"] = hasProperty;
  exports["hasOwnProperty"] = hasOwnProperty;
  exports["errorAt"] = errorAt;
  exports["indexString"] = indexString;
})(PS["Foreign.Index"] = PS["Foreign.Index"] || {});
(function(exports) {
    "use strict";

  exports.copyRecord = function(rec) {
    var copy = {};
    for (var key in rec) {
      if ({}.hasOwnProperty.call(rec, key)) {
        copy[key] = rec[key];
      }
    }
    return copy;
  };

  exports.unsafeInsert = function(l) {
    return function(a) {
      return function(rec) {
        rec[l] = a;
        return rec;
      };
    };
  };
})(PS["Record.Builder"] = PS["Record.Builder"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var $foreign = PS["Record.Builder"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Symbol = PS["Data.Symbol"];
  var Prelude = PS["Prelude"];
  var Record_Unsafe_Union = PS["Record.Unsafe.Union"];
  var Type_Row = PS["Type.Row"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var semigroupoidBuilder = Control_Semigroupoid.semigroupoidFn;
  var insert = function (dictCons) {
      return function (dictLacks) {
          return function (dictIsSymbol) {
              return function (l) {
                  return function (a) {
                      return function (r1) {
                          return $foreign.unsafeInsert(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(a)(r1);
                      };
                  };
              };
          };
      };
  };
  var categoryBuilder = Control_Category.categoryFn;
  var build = function (v) {
      return function (r1) {
          return v($foreign.copyRecord(r1));
      };
  };
  exports["build"] = build;
  exports["insert"] = insert;
  exports["semigroupoidBuilder"] = semigroupoidBuilder;
  exports["categoryBuilder"] = categoryBuilder;
})(PS["Record.Builder"] = PS["Record.Builder"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_CommutativeRing = PS["Data.CommutativeRing"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];
  var $$Proxy = (function () {
      function $$Proxy() {

      };
      $$Proxy.value = new $$Proxy();
      return $$Proxy;
  })();
  exports["Proxy"] = $$Proxy;
})(PS["Type.Proxy"] = PS["Type.Proxy"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Generic_Rep = PS["Data.Generic.Rep"];
  var Data_Identity = PS["Data.Identity"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Foreign = PS["Foreign"];
  var Foreign_Class = PS["Foreign.Class"];
  var Foreign_Generic_Types = PS["Foreign.Generic.Types"];
  var Foreign_Index = PS["Foreign.Index"];
  var Foreign_Object = PS["Foreign.Object"];
  var Prelude = PS["Prelude"];
  var Record = PS["Record"];
  var Record_Builder = PS["Record.Builder"];
  var Type_Data_RowList = PS["Type.Data.RowList"];
  var Type_Proxy = PS["Type.Proxy"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];                 
  var GenericDecode = function (decodeOpts) {
      this.decodeOpts = decodeOpts;
  };
  var GenericDecodeArgs = function (decodeArgs) {
      this.decodeArgs = decodeArgs;
  };
  var GenericCountArgs = function (countArgs) {
      this.countArgs = countArgs;
  };
  var Decode_ = function (decode_) {
      this.decode_ = decode_;
  };
  var DecodeRecord = function (decodeRecord_) {
      this.decodeRecord_ = decodeRecord_;
  }; 
  var genericDecodeArgsNoArguments = new GenericDecodeArgs(function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Data_List_Types.Nil) {
                  return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))({
                      result: Data_Generic_Rep.NoArguments.value,
                      rest: Data_List_Types.Nil.value,
                      next: v1
                  });
              };
              return Foreign.fail(new Foreign.ForeignError("Too many constructor arguments"));
          };
      };
  });
  var genericCountArgsNoArguments = new GenericCountArgs(function (v) {
      return new Data_Either.Left(Data_Generic_Rep.NoArguments.value);
  });
  var genericCountArgsArgument = new GenericCountArgs(function (v) {
      return new Data_Either.Right(1);
  });
  var decode_Other = function (dictDecode) {
      return new Decode_(function (v) {
          return Foreign_Class.decode(dictDecode);
      });
  };
  var decode_ = function (dict) {
      return dict.decode_;
  };
  var genericDecodeArgsArgument = function (dictDecode_) {
      return new GenericDecodeArgs(function (v) {
          return function (v1) {
              return function (v2) {
                  if (v2 instanceof Data_List_Types.Cons) {
                      return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Monad_Except.mapExcept(Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Data_Functor.map(Data_List_Types.functorNonEmptyList)(Foreign.ErrorAtIndex.create(v1))))(decode_(dictDecode_)(v)(v2.value0)))(function (v3) {
                          return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))({
                              result: v3,
                              rest: v2.value1,
                              next: v1 + 1 | 0
                          });
                      });
                  };
                  return Foreign.fail(new Foreign.ForeignError("Not enough constructor arguments"));
              };
          };
      });
  };
  var decodeRecord_ = function (dict) {
      return dict.decodeRecord_;
  };
  var decode_Record = function (dictRowToList) {
      return function (dictDecodeRecord) {
          return new Decode_(function (opts) {
              return Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Data_Function.flip(Record_Builder.build)({})))(decodeRecord_(dictDecodeRecord)(Type_Data_RowList.RLProxy.value)(opts));
          });
      };
  };
  var decodeRecordNil = new DecodeRecord(function (v) {
      return function (v1) {
          return function (v2) {
              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Control_Category.identity(Record_Builder.categoryBuilder));
          };
      };
  });
  var decodeRecordCons = function (dictCons) {
      return function (dictDecodeRecord) {
          return function (dictIsSymbol) {
              return function (dictDecode_) {
                  return function (dictLacks) {
                      return new DecodeRecord(function (v) {
                          return function (opts) {
                              return function (f) {
                                  return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(decodeRecord_(dictDecodeRecord)(Type_Data_RowList.RLProxy.value)(opts)(f))(function (v1) {
                                      var l = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                                      var l_transformed = opts.fieldTransform(l);
                                      return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Foreign_Index.index(Foreign_Index.indexString)(f)(l_transformed))(function (v2) {
                                          return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Monad_Except.mapExcept(Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Data_Functor.map(Data_List_Types.functorNonEmptyList)(Foreign.ErrorAtProperty.create(l_transformed))))(decode_(dictDecode_)(opts)(v2)))(function (v3) {
                                              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Control_Semigroupoid.composeFlipped(Record_Builder.semigroupoidBuilder)(v1)(Record_Builder.insert(dictCons)(dictLacks)(dictIsSymbol)(Data_Symbol.SProxy.value)(v3)));
                                          });
                                      });
                                  });
                              };
                          };
                      });
                  };
              };
          };
      };
  };
  var decodeOpts = function (dict) {
      return dict.decodeOpts;
  };
  var genericDecodeSum = function (dictGenericDecode) {
      return function (dictGenericDecode1) {
          return new GenericDecode(function (opts) {
              return function (f) {
                  var opts$prime = {
                      unwrapSingleConstructors: false,
                      fieldTransform: opts.fieldTransform,
                      sumEncoding: opts.sumEncoding,
                      unwrapSingleArguments: opts.unwrapSingleArguments
                  };
                  return Control_Alt.alt(Control_Monad_Except_Trans.altExceptT(Data_List_Types.semigroupNonEmptyList)(Data_Identity.monadIdentity))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Data_Generic_Rep.Inl.create)(decodeOpts(dictGenericDecode)(opts$prime)(f)))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Data_Generic_Rep.Inr.create)(decodeOpts(dictGenericDecode1)(opts$prime)(f)));
              };
          });
      };
  };
  var decodeArgs = function (dict) {
      return dict.decodeArgs;
  };
  var genericDecodeArgsProduct = function (dictGenericDecodeArgs) {
      return function (dictGenericDecodeArgs1) {
          return new GenericDecodeArgs(function (opts) {
              return function (i) {
                  return function (xs) {
                      return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(decodeArgs(dictGenericDecodeArgs)(opts)(i)(xs))(function (v) {
                          return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(decodeArgs(dictGenericDecodeArgs1)(opts)(v.next)(v.rest))(function (v1) {
                              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))({
                                  result: new Data_Generic_Rep.Product(v.result, v1.result),
                                  rest: v1.rest,
                                  next: v1.next
                              });
                          });
                      });
                  };
              };
          });
      };
  };
  var countArgs = function (dict) {
      return dict.countArgs;
  };
  var genericCountArgsProduct = function (dictGenericCountArgs) {
      return function (dictGenericCountArgs1) {
          return new GenericCountArgs(function (v) {
              var v1 = countArgs(dictGenericCountArgs1)(Type_Proxy["Proxy"].value);
              var v2 = countArgs(dictGenericCountArgs)(Type_Proxy["Proxy"].value);
              if (v2 instanceof Data_Either.Left && v1 instanceof Data_Either.Left) {
                  return new Data_Either.Left(new Data_Generic_Rep.Product(v2.value0, v1.value0));
              };
              if (v2 instanceof Data_Either.Left && v1 instanceof Data_Either.Right) {
                  return new Data_Either.Right(v1.value0);
              };
              if (v2 instanceof Data_Either.Right && v1 instanceof Data_Either.Left) {
                  return new Data_Either.Right(v2.value0);
              };
              if (v2 instanceof Data_Either.Right && v1 instanceof Data_Either.Right) {
                  return new Data_Either.Right(v2.value0 + v1.value0 | 0);
              };
              throw new Error("Failed pattern match at Foreign.Generic.Class (line 168, column 5 - line 172, column 40): " + [ v2.constructor.name, v1.constructor.name ]);
          });
      };
  };
  var genericDecodeConstructor = function (dictIsSymbol) {
      return function (dictGenericDecodeArgs) {
          return function (dictGenericCountArgs) {
              return new GenericDecode(function (opts) {
                  return function (f) {
                      var numArgs = countArgs(dictGenericCountArgs)(Type_Proxy["Proxy"].value);
                      var readArguments = function (args) {
                          if (numArgs instanceof Data_Either.Left) {
                              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(numArgs.value0);
                          };
                          if (numArgs instanceof Data_Either.Right && (numArgs.value0 === 1 && opts.unwrapSingleArguments)) {
                              return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(decodeArgs(dictGenericDecodeArgs)(opts)(0)(Data_List.singleton(args)))(function (v) {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Applicative.unless(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_List["null"](v.rest))(Foreign.fail(new Foreign.ForeignError("Expected a single argument"))))(function () {
                                      return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(v.result);
                                  });
                              });
                          };
                          if (numArgs instanceof Data_Either.Right) {
                              return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Foreign.readArray(args))(function (v) {
                                  return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(decodeArgs(dictGenericDecodeArgs)(opts)(0)(Data_List.fromFoldable(Data_Foldable.foldableArray)(v)))(function (v1) {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Applicative.unless(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_List["null"](v1.rest))(Foreign.fail(new Foreign.ForeignError("Expected " + (Data_Show.show(Data_Show.showInt)(numArgs.value0) + " constructor arguments")))))(function () {
                                          return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(v1.result);
                                      });
                                  });
                              });
                          };
                          throw new Error("Failed pattern match at Foreign.Generic.Class (line 75, column 9 - line 87, column 24): " + [ numArgs.constructor.name ]);
                      };
                      var ctorName = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                      if (opts.unwrapSingleConstructors) {
                          return Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Data_Generic_Rep.Constructor)(readArguments(f));
                      };
                      return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Monad_Except.mapExcept(Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Data_Functor.map(Data_List_Types.functorNonEmptyList)(Foreign.ErrorAtProperty.create(opts.sumEncoding.value0.tagFieldName))))(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Foreign_Index.index(Foreign_Index.indexString)(f)(opts.sumEncoding.value0.tagFieldName))(Foreign.readString))(function (v) {
                          var expected = opts.sumEncoding.value0.constructorTagTransform(ctorName);
                          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Applicative.unless(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(v === expected)(Foreign.fail(new Foreign.ForeignError("Expected " + (Data_Show.show(Data_Show.showString)(expected) + " tag")))))(function () {
                              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(v);
                          });
                      })))(function (v) {
                          return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Monad_Except.mapExcept(Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Data_Functor.map(Data_List_Types.functorNonEmptyList)(Foreign.ErrorAtProperty.create(opts.sumEncoding.value0.contentsFieldName))))(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Foreign_Index.index(Foreign_Index.indexString)(f)(opts.sumEncoding.value0.contentsFieldName))(readArguments)))(function (v1) {
                              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(v1);
                          });
                      });
                  };
              });
          };
      };
  };
  exports["countArgs"] = countArgs;
  exports["decodeArgs"] = decodeArgs;
  exports["decodeOpts"] = decodeOpts;
  exports["decodeRecord_"] = decodeRecord_;
  exports["decode_"] = decode_;
  exports["GenericDecode"] = GenericDecode;
  exports["GenericDecodeArgs"] = GenericDecodeArgs;
  exports["GenericCountArgs"] = GenericCountArgs;
  exports["Decode_"] = Decode_;
  exports["DecodeRecord"] = DecodeRecord;
  exports["genericDecodeConstructor"] = genericDecodeConstructor;
  exports["genericDecodeSum"] = genericDecodeSum;
  exports["genericDecodeArgsNoArguments"] = genericDecodeArgsNoArguments;
  exports["genericDecodeArgsArgument"] = genericDecodeArgsArgument;
  exports["genericDecodeArgsProduct"] = genericDecodeArgsProduct;
  exports["genericCountArgsNoArguments"] = genericCountArgsNoArguments;
  exports["genericCountArgsArgument"] = genericCountArgsArgument;
  exports["genericCountArgsProduct"] = genericCountArgsProduct;
  exports["decode_Record"] = decode_Record;
  exports["decode_Other"] = decode_Other;
  exports["decodeRecordNil"] = decodeRecordNil;
  exports["decodeRecordCons"] = decodeRecordCons;
})(PS["Foreign.Generic.Class"] = PS["Foreign.Generic.Class"] || {});
(function(exports) {
    "use strict";

  exports.parseJSONImpl = function (str) {
    return JSON.parse(str);
  };
})(PS["Foreign.JSON"] = PS["Foreign.JSON"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var $foreign = PS["Foreign.JSON"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Either = PS["Data.Either"];
  var Data_Identity = PS["Data.Identity"];
  var Data_List_Types = PS["Data.List.Types"];
  var Effect_Exception = PS["Effect.Exception"];
  var Effect_Uncurried = PS["Effect.Uncurried"];
  var Effect_Unsafe = PS["Effect.Unsafe"];
  var Foreign = PS["Foreign"];
  var Prelude = PS["Prelude"];                 
  var parseJSON = function ($0) {
      return Control_Monad_Except_Trans.ExceptT(Data_Identity.Identity(Data_Bifunctor.lmap(Data_Either.bifunctorEither)(function ($1) {
          return Control_Applicative.pure(Data_List_Types.applicativeNonEmptyList)(Foreign.ForeignError.create(Effect_Exception.message($1)));
      })(Effect_Unsafe.unsafePerformEffect(Effect_Exception["try"](function () {
          return $foreign.parseJSONImpl($0);
      })))));
  };
  var decodeJSONWith = function (f) {
      return Control_Bind.composeKleisliFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(f)(parseJSON);
  };
  exports["parseJSON"] = parseJSON;
  exports["decodeJSONWith"] = decodeJSONWith;
})(PS["Foreign.JSON"] = PS["Foreign.JSON"] || {});
(function(exports) {
  /* globals exports, JSON */
  "use strict";

  exports.unsafeStringify = function (x) {
    return JSON.stringify(x);
  };
})(PS["Global.Unsafe"] = PS["Global.Unsafe"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var $foreign = PS["Global.Unsafe"];
  exports["unsafeStringify"] = $foreign.unsafeStringify;
})(PS["Global.Unsafe"] = PS["Global.Unsafe"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Generic_Rep = PS["Data.Generic.Rep"];
  var Data_Identity = PS["Data.Identity"];
  var Foreign = PS["Foreign"];
  var Foreign_Class = PS["Foreign.Class"];
  var Foreign_Generic_Class = PS["Foreign.Generic.Class"];
  var Foreign_Generic_Types = PS["Foreign.Generic.Types"];
  var Foreign_JSON = PS["Foreign.JSON"];
  var Global_Unsafe = PS["Global.Unsafe"];
  var Prelude = PS["Prelude"];
  var genericDecode = function (dictGeneric) {
      return function (dictGenericDecode) {
          return function (opts) {
              return function ($12) {
                  return Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Data_Generic_Rep.to(dictGeneric))(Foreign_Generic_Class.decodeOpts(dictGenericDecode)(opts)($12));
              };
          };
      };
  };
  var defaultOptions = {
      sumEncoding: new Foreign_Generic_Types.TaggedObject({
          tagFieldName: "tag",
          contentsFieldName: "contents",
          constructorTagTransform: Control_Category.identity(Control_Category.categoryFn)
      }),
      unwrapSingleConstructors: false,
      unwrapSingleArguments: true,
      fieldTransform: Control_Category.identity(Control_Category.categoryFn)
  };
  var decodeJSON = function (dictDecode) {
      return Foreign_JSON.decodeJSONWith(Foreign_Class.decode(dictDecode));
  };
  exports["defaultOptions"] = defaultOptions;
  exports["genericDecode"] = genericDecode;
  exports["decodeJSON"] = decodeJSON;
})(PS["Foreign.Generic"] = PS["Foreign.Generic"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Data_Generic_Rep = PS["Data.Generic.Rep"];
  var Foreign = PS["Foreign"];
  var Foreign_Generic = PS["Foreign.Generic"];
  var Foreign_Generic_Class = PS["Foreign.Generic.Class"];
  var Foreign_Generic_EnumEncoding = PS["Foreign.Generic.EnumEncoding"];
  var Foreign_Generic_Types = PS["Foreign.Generic.Types"];
  var Prelude = PS["Prelude"];                 
  var options = {
      sumEncoding: Foreign_Generic.defaultOptions.sumEncoding,
      unwrapSingleConstructors: true,
      unwrapSingleArguments: Foreign_Generic.defaultOptions.unwrapSingleArguments,
      fieldTransform: Foreign_Generic.defaultOptions.fieldTransform
  };
  var defaultDecode = function (dictGeneric) {
      return function (dictGenericDecode) {
          return function (x) {
              return Foreign_Generic.genericDecode(dictGeneric)(dictGenericDecode)(options)(x);
          };
      };
  };
  exports["defaultDecode"] = defaultDecode;
})(PS["Presto.Core.Utils.Encoding"] = PS["Presto.Core.Utils.Encoding"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Data_Generic_Rep = PS["Data.Generic.Rep"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Symbol = PS["Data.Symbol"];
  var Foreign = PS["Foreign"];
  var Foreign_Class = PS["Foreign.Class"];
  var Foreign_Generic_Class = PS["Foreign.Generic.Class"];
  var Prelude = PS["Prelude"];
  var Presto_Core_Utils_Encoding = PS["Presto.Core.Utils.Encoding"];
  var POST = (function () {
      function POST() {

      };
      POST.value = new POST();
      return POST;
  })();
  var GET = (function () {
      function GET() {

      };
      GET.value = new GET();
      return GET;
  })();
  var PUT = (function () {
      function PUT() {

      };
      PUT.value = new PUT();
      return PUT;
  })();
  var DELETE = (function () {
      function DELETE() {

      };
      DELETE.value = new DELETE();
      return DELETE;
  })();
  var Header = (function () {
      function Header(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Header.create = function (value0) {
          return function (value1) {
              return new Header(value0, value1);
          };
      };
      return Header;
  })();
  var showMethod = new Data_Show.Show(function (v) {
      if (v instanceof POST) {
          return "POST";
      };
      if (v instanceof GET) {
          return "GET";
      };
      if (v instanceof PUT) {
          return "PUT";
      };
      if (v instanceof DELETE) {
          return "DELETE";
      };
      throw new Error("Failed pattern match at Presto.Core.Types.API (line 99, column 1 - line 99, column 35): " + [ v.constructor.name ]);
  });
  var genericRequest = new Data_Generic_Rep.Generic(function (x) {
      return x;
  }, function (x) {
      return x;
  });
  var genericMethod = new Data_Generic_Rep.Generic(function (x) {
      if (x instanceof POST) {
          return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
      };
      if (x instanceof GET) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value));
      };
      if (x instanceof PUT) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)));
      };
      if (x instanceof DELETE) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value)));
      };
      throw new Error("Failed pattern match at Presto.Core.Types.API (line 94, column 8 - line 94, column 50): " + [ x.constructor.name ]);
  }, function (x) {
      if (x instanceof Data_Generic_Rep.Inl) {
          return POST.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
          return GET.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {
          return PUT.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inr)) {
          return DELETE.value;
      };
      throw new Error("Failed pattern match at Presto.Core.Types.API (line 94, column 8 - line 94, column 50): " + [ x.constructor.name ]);
  });
  var genericHeaders = new Data_Generic_Rep.Generic(function (x) {
      return x;
  }, function (x) {
      return x;
  });
  var genericHeader = new Data_Generic_Rep.Generic(function (x) {
      return new Data_Generic_Rep.Product(x.value0, x.value1);
  }, function (x) {
      return new Header(x.value0, x.value1);
  });
  var decodeMethod = new Foreign_Class.Decode(Presto_Core_Utils_Encoding.defaultDecode(genericMethod)(Foreign_Generic_Class.genericDecodeSum(Foreign_Generic_Class.genericDecodeConstructor(new Data_Symbol.IsSymbol(function () {
      return "POST";
  }))(Foreign_Generic_Class.genericDecodeArgsNoArguments)(Foreign_Generic_Class.genericCountArgsNoArguments))(Foreign_Generic_Class.genericDecodeSum(Foreign_Generic_Class.genericDecodeConstructor(new Data_Symbol.IsSymbol(function () {
      return "GET";
  }))(Foreign_Generic_Class.genericDecodeArgsNoArguments)(Foreign_Generic_Class.genericCountArgsNoArguments))(Foreign_Generic_Class.genericDecodeSum(Foreign_Generic_Class.genericDecodeConstructor(new Data_Symbol.IsSymbol(function () {
      return "PUT";
  }))(Foreign_Generic_Class.genericDecodeArgsNoArguments)(Foreign_Generic_Class.genericCountArgsNoArguments))(Foreign_Generic_Class.genericDecodeConstructor(new Data_Symbol.IsSymbol(function () {
      return "DELETE";
  }))(Foreign_Generic_Class.genericDecodeArgsNoArguments)(Foreign_Generic_Class.genericCountArgsNoArguments))))));
  var decodeHeaderG = new Foreign_Class.Decode(Presto_Core_Utils_Encoding.defaultDecode(genericHeader)(Foreign_Generic_Class.genericDecodeConstructor(new Data_Symbol.IsSymbol(function () {
      return "Header";
  }))(Foreign_Generic_Class.genericDecodeArgsProduct(Foreign_Generic_Class.genericDecodeArgsArgument(Foreign_Generic_Class.decode_Other(Foreign_Class.stringDecode)))(Foreign_Generic_Class.genericDecodeArgsArgument(Foreign_Generic_Class.decode_Other(Foreign_Class.stringDecode))))(Foreign_Generic_Class.genericCountArgsProduct(Foreign_Generic_Class.genericCountArgsArgument)(Foreign_Generic_Class.genericCountArgsArgument))));
  var decodeHeadersG = new Foreign_Class.Decode(Presto_Core_Utils_Encoding.defaultDecode(genericHeaders)(Foreign_Generic_Class.genericDecodeConstructor(new Data_Symbol.IsSymbol(function () {
      return "Headers";
  }))(Foreign_Generic_Class.genericDecodeArgsArgument(Foreign_Generic_Class.decode_Other(Foreign_Class.arrayDecode(decodeHeaderG))))(Foreign_Generic_Class.genericCountArgsArgument)));
  var decodeRequestG = new Foreign_Class.Decode(Presto_Core_Utils_Encoding.defaultDecode(genericRequest)(Foreign_Generic_Class.genericDecodeConstructor(new Data_Symbol.IsSymbol(function () {
      return "Request";
  }))(Foreign_Generic_Class.genericDecodeArgsArgument(Foreign_Generic_Class.decode_Record()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordNil)(new Data_Symbol.IsSymbol(function () {
      return "url";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.stringDecode))())(new Data_Symbol.IsSymbol(function () {
      return "payload";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.stringDecode))())(new Data_Symbol.IsSymbol(function () {
      return "method";
  }))(Foreign_Generic_Class.decode_Other(decodeMethod))())(new Data_Symbol.IsSymbol(function () {
      return "headers";
  }))(Foreign_Generic_Class.decode_Other(decodeHeadersG))())))(Foreign_Generic_Class.genericCountArgsArgument)));
  exports["POST"] = POST;
  exports["GET"] = GET;
  exports["PUT"] = PUT;
  exports["DELETE"] = DELETE;
  exports["Header"] = Header;
  exports["genericMethod"] = genericMethod;
  exports["decodeMethod"] = decodeMethod;
  exports["showMethod"] = showMethod;
  exports["genericHeader"] = genericHeader;
  exports["decodeHeaderG"] = decodeHeaderG;
  exports["genericHeaders"] = genericHeaders;
  exports["decodeHeadersG"] = decodeHeadersG;
  exports["genericRequest"] = genericRequest;
  exports["decodeRequestG"] = decodeRequestG;
})(PS["Presto.Core.Types.API"] = PS["Presto.Core.Types.API"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Unsafe_Coerce = PS["Unsafe.Coerce"];                 
  var runExists = Unsafe_Coerce.unsafeCoerce;
  var mkExists = Unsafe_Coerce.unsafeCoerce;
  exports["mkExists"] = mkExists;
  exports["runExists"] = runExists;
})(PS["Data.Exists"] = PS["Data.Exists"] || {});
(function(exports) {
  /* globals exports, setTimeout */
  "use strict";

  var AVar = function () {

    function MutableQueue () {
      this.head = null;
      this.last = null;
      this.size = 0;
    }

    function MutableCell (queue, value) {
      this.queue = queue;
      this.value = value;
      this.next  = null;
      this.prev  = null;
    }

    function AVar (value) {
      this.draining = false;
      this.error    = null;
      this.value    = value;
      this.takes    = new MutableQueue();
      this.reads    = new MutableQueue();
      this.puts     = new MutableQueue();
    }

    var EMPTY = {};

    function runEff(eff) {
      try {
        eff();
      } catch (error) {
        setTimeout(function () {
          throw error;
        }, 0);
      }
    }

    function putLast (queue, value) {
      var cell = new MutableCell(queue, value);
      switch (queue.size) {
      case 0:
        queue.head = cell;
        break;
      case 1:
        cell.prev = queue.head;
        queue.head.next = cell;
        queue.last = cell;
        break;
      default:
        cell.prev = queue.last;
        queue.last.next = cell;
        queue.last = cell;
      }
      queue.size++;
      return cell;
    }

    function takeLast (queue) {
      var cell;
      switch (queue.size) {
      case 0:
        return null;
      case 1:
        cell = queue.head;
        queue.head = null;
        break;
      case 2:
        cell = queue.last;
        queue.head.next = null;
        queue.last = null;
        break;
      default:
        cell = queue.last;
        queue.last = cell.prev;
        queue.last.next = null;
      }
      cell.prev = null;
      cell.queue = null;
      queue.size--;
      return cell.value;
    }

    function takeHead (queue) {
      var cell;
      switch (queue.size) {
      case 0:
        return null;
      case 1:
        cell = queue.head;
        queue.head = null;
        break;
      case 2:
        cell = queue.head;
        queue.last.prev = null;
        queue.head = queue.last;
        queue.last = null;
        break;
      default:
        cell = queue.head;
        queue.head = cell.next;
        queue.head.prev = null;
      }
      cell.next = null;
      cell.queue = null;
      queue.size--;
      return cell.value;
    }

    function deleteCell (cell) {
      if (cell.queue === null) {
        return;
      }
      if (cell.queue.last === cell) {
        takeLast(cell.queue);
        return;
      }
      if (cell.queue.head === cell) {
        takeHead(cell.queue);
        return;
      }
      if (cell.prev) {
        cell.prev.next = cell.next;
      }
      if (cell.next) {
        cell.next.prev = cell.prev;
      }
      cell.queue.size--;
      cell.queue = null;
      cell.value = null;
      cell.next  = null;
      cell.prev  = null;
    }

    function drainVar (util, avar) {
      if (avar.draining) {
        return;
      }

      var ps = avar.puts;
      var ts = avar.takes;
      var rs = avar.reads;
      var p, r, t, value, rsize;

      avar.draining = true;

      while (1) { // eslint-disable-line no-constant-condition
        p = null;
        r = null;
        t = null;
        value = avar.value;
        rsize = rs.size;

        if (avar.error !== null) {
          value = util.left(avar.error);
          while (p = takeHead(ps)) { // eslint-disable-line no-cond-assign
            runEff(p.cb(value));
          }
          while (r = takeHead(rs)) { // eslint-disable-line no-cond-assign
            runEff(r(value));
          }
          while (t = takeHead(ts)) { // eslint-disable-line no-cond-assign
            runEff(t(value));
          }
          break;
        }

        // Process the next put. We do not immediately invoke the callback
        // because we want to preserve ordering. If there are takes/reads
        // we want to run those first.
        if (value === EMPTY && (p = takeHead(ps))) {
          avar.value = value = p.value;
        }

        if (value !== EMPTY) {
          // We go ahead and queue up the next take for the same reasons as
          // above. Invoking the read callbacks can affect the mutable queue.
          t = takeHead(ts);
          // We only want to process the reads queued up before running these
          // callbacks so we guard on rsize.
          while (rsize-- && (r = takeHead(rs))) {
            runEff(r(util.right(value)));
          }
          if (t !== null) {
            avar.value = EMPTY;
            runEff(t(util.right(value)));
          }
        }

        if (p !== null) {
          runEff(p.cb(util.right(void 0)));
        }

        // Callbacks could have queued up more items so we need to guard on the
        // actual mutable properties.
        if (avar.value === EMPTY && ps.size === 0 || avar.value !== EMPTY && ts.size === 0) {
          break;
        }
      }
      avar.draining = false;
    }

    AVar.EMPTY      = EMPTY;
    AVar.putLast    = putLast;
    AVar.takeLast   = takeLast;
    AVar.takeHead   = takeHead;
    AVar.deleteCell = deleteCell;
    AVar.drainVar   = drainVar;

    return AVar;
  }();

  exports.empty = function () {
    return new AVar(AVar.EMPTY);
  };

  exports._newVar = function (value) {
    return function () {
      return new AVar(value);
    };
  };

  exports._putVar = function (util, value, avar, cb) {
    return function () {
      var cell = AVar.putLast(avar.puts, { cb: cb, value: value });
      AVar.drainVar(util, avar);
      return function () {
        AVar.deleteCell(cell);
      };
    };
  };

  exports._takeVar = function (util, avar, cb) {
    return function () {
      var cell = AVar.putLast(avar.takes, cb);
      AVar.drainVar(util, avar);
      return function () {
        AVar.deleteCell(cell);
      };
    };
  };

  exports._readVar = function (util, avar, cb) {
    return function () {
      var cell = AVar.putLast(avar.reads, cb);
      AVar.drainVar(util, avar);
      return function () {
        AVar.deleteCell(cell);
      };
    };
  };
})(PS["Effect.AVar"] = PS["Effect.AVar"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var $foreign = PS["Effect.AVar"];
  var Data_Either = PS["Data.Either"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Maybe = PS["Data.Maybe"];
  var Effect = PS["Effect"];
  var Effect_Exception = PS["Effect.Exception"];
  var Prelude = PS["Prelude"];                 
  var Killed = (function () {
      function Killed(value0) {
          this.value0 = value0;
      };
      Killed.create = function (value0) {
          return new Killed(value0);
      };
      return Killed;
  })();
  var Filled = (function () {
      function Filled(value0) {
          this.value0 = value0;
      };
      Filled.create = function (value0) {
          return new Filled(value0);
      };
      return Filled;
  })();
  var Empty = (function () {
      function Empty() {

      };
      Empty.value = new Empty();
      return Empty;
  })();
  var $$new = $foreign["_newVar"];
  var ffiUtil = {
      left: Data_Either.Left.create,
      right: Data_Either.Right.create,
      nothing: Data_Maybe.Nothing.value,
      just: Data_Maybe.Just.create,
      killed: Killed.create,
      filled: Filled.create,
      empty: Empty.value
  };
  var put = function (value) {
      return function (avar) {
          return function (cb) {
              return $foreign["_putVar"](ffiUtil, value, avar, cb);
          };
      };
  };
  var read = function (avar) {
      return function (cb) {
          return $foreign["_readVar"](ffiUtil, avar, cb);
      };
  };
  var take = function (avar) {
      return function (cb) {
          return $foreign["_takeVar"](ffiUtil, avar, cb);
      };
  };
  exports["Killed"] = Killed;
  exports["Filled"] = Filled;
  exports["Empty"] = Empty;
  exports["new"] = $$new;
  exports["take"] = take;
  exports["put"] = put;
  exports["read"] = read;
  exports["empty"] = $foreign.empty;
})(PS["Effect.AVar"] = PS["Effect.AVar"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Maybe = PS["Data.Maybe"];
  var Effect = PS["Effect"];
  var Effect_AVar = PS["Effect.AVar"];
  var Effect_Aff = PS["Effect.Aff"];
  var Effect_Class = PS["Effect.Class"];
  var Effect_Exception = PS["Effect.Exception"];
  var Prelude = PS["Prelude"];
  var take = function (avar) {
      return Effect_Aff.makeAff(function (k) {
          return function __do() {
              var v = Effect_AVar.take(avar)(k)();
              return Effect_Aff.effectCanceler(v);
          };
      });
  };
  var read = function (avar) {
      return Effect_Aff.makeAff(function (k) {
          return function __do() {
              var v = Effect_AVar.read(avar)(k)();
              return Effect_Aff.effectCanceler(v);
          };
      });
  };
  var put = function (value) {
      return function (avar) {
          return Effect_Aff.makeAff(function (k) {
              return function __do() {
                  var v = Effect_AVar.put(value)(avar)(k)();
                  return Effect_Aff.effectCanceler(v);
              };
          });
      };
  };
  var $$new = function ($10) {
      return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_AVar["new"]($10));
  };
  var empty = Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_AVar.empty);
  exports["new"] = $$new;
  exports["empty"] = empty;
  exports["take"] = take;
  exports["put"] = put;
  exports["read"] = read;
})(PS["Effect.Aff.AVar"] = PS["Effect.Aff.AVar"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Control_Monad_Free = PS["Control.Monad.Free"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Show = PS["Data.Show"];
  var Effect_Exception = PS["Effect.Exception"];
  var Foreign = PS["Foreign"];
  var Foreign_Class = PS["Foreign.Class"];
  var Prelude = PS["Prelude"];                 
  var ForeignOut = function (x) {
      return x;
  };
  exports["ForeignOut"] = ForeignOut;
})(PS["Presto.Core.Types.Language.Interaction"] = PS["Presto.Core.Types.Language.Interaction"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Data_Eq = PS["Data.Eq"];
  var Data_Generic_Rep = PS["Data.Generic.Rep"];
  var Data_Generic_Rep_Show = PS["Data.Generic.Rep.Show"];
  var Data_Show = PS["Data.Show"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_Tuple = PS["Data.Tuple"];
  var Foreign_Class = PS["Foreign.Class"];
  var Foreign_Generic = PS["Foreign.Generic"];
  var Foreign_Generic_Class = PS["Foreign.Generic.Class"];
  var Prelude = PS["Prelude"];                 
  var PermissionGranted = (function () {
      function PermissionGranted() {

      };
      PermissionGranted.value = new PermissionGranted();
      return PermissionGranted;
  })();
  var PermissionDeclined = (function () {
      function PermissionDeclined() {

      };
      PermissionDeclined.value = new PermissionDeclined();
      return PermissionDeclined;
  })();
  var PermissionReadPhoneState = (function () {
      function PermissionReadPhoneState() {

      };
      PermissionReadPhoneState.value = new PermissionReadPhoneState();
      return PermissionReadPhoneState;
  })();
  var PermissionSendSms = (function () {
      function PermissionSendSms() {

      };
      PermissionSendSms.value = new PermissionSendSms();
      return PermissionSendSms;
  })();
  var PermissionReadStorage = (function () {
      function PermissionReadStorage() {

      };
      PermissionReadStorage.value = new PermissionReadStorage();
      return PermissionReadStorage;
  })();
  var PermissionWriteStorage = (function () {
      function PermissionWriteStorage() {

      };
      PermissionWriteStorage.value = new PermissionWriteStorage();
      return PermissionWriteStorage;
  })();
  var PermissionCamera = (function () {
      function PermissionCamera() {

      };
      PermissionCamera.value = new PermissionCamera();
      return PermissionCamera;
  })();
  var PermissionLocation = (function () {
      function PermissionLocation() {

      };
      PermissionLocation.value = new PermissionLocation();
      return PermissionLocation;
  })();
  var PermissionCoarseLocation = (function () {
      function PermissionCoarseLocation() {

      };
      PermissionCoarseLocation.value = new PermissionCoarseLocation();
      return PermissionCoarseLocation;
  })();
  var PermissionContacts = (function () {
      function PermissionContacts() {

      };
      PermissionContacts.value = new PermissionContacts();
      return PermissionContacts;
  })();
  exports["PermissionReadPhoneState"] = PermissionReadPhoneState;
  exports["PermissionSendSms"] = PermissionSendSms;
  exports["PermissionReadStorage"] = PermissionReadStorage;
  exports["PermissionWriteStorage"] = PermissionWriteStorage;
  exports["PermissionCamera"] = PermissionCamera;
  exports["PermissionLocation"] = PermissionLocation;
  exports["PermissionCoarseLocation"] = PermissionCoarseLocation;
  exports["PermissionContacts"] = PermissionContacts;
  exports["PermissionGranted"] = PermissionGranted;
  exports["PermissionDeclined"] = PermissionDeclined;
})(PS["Presto.Core.Types.Permission"] = PS["Presto.Core.Types.Permission"] || {});
(function(exports) {
    "use strict";

  const prestoDayum = require("presto-ui").doms;
  const webParseParams = require("presto-ui").helpers.web.parseParams;
  const iOSParseParams = require("presto-ui").helpers.ios.parseParams;
  const parseParams = require("presto-ui").helpers.android.parseParams;
  const R = require("ramda");

  const callbackMapper = require("presto-ui").helpers.android.callbackMapper;

  window.callbackMapper = callbackMapper.map;

  function debounce(func, delay) {
    var inDebounce = void 0;
    return function () {
      var context = this;
      var args = arguments;
      clearTimeout(inDebounce);
      inDebounce = setTimeout(function () {
        return func.apply(context, args);
      }, delay);
    };
  };

  window.addEventListener('resize', debounce(function () {
    console.log("Resize", window.__resizeEvent);
    if (window.__resizeEvent) {
      window.__resizeEvent(window.innerWidth);
    }
  }, 300));

  exports.storeMachine = function(machine, screen) {
    window.MACHINE = machine;
    if (screen.value0)
      window.MACHINE_MAP[screen.value0] = machine;
      window.__dui_last_patch_screen = screen.value0;
  }

  exports.getLatestMachine = function(screen) {
    if (screen.value0) {
      return window.MACHINE_MAP[screen.value0];
    }
    return window.MACHINE;
  }


  exports.insertDom = insertDom;

  window.__PRESTO_ID = window.__ui_id_sequence = typeof Android.getNewID == "function" ? parseInt(Android.getNewID()) * 1000000 : 1;

  function domAll(elem) {
    if (!elem.__ref) {
      elem.__ref = window.createPrestoElement();
    }

    if (elem.props.id) {
      elem.__ref.__id = parseInt(elem.props.id, 10) || elem.__ref.__id;
    }

    const type = R.clone(elem.type);
    const props = R.clone(elem.props);

    if (props.focus == false &&  window.__OS === "ANDROID") {
      delete props.focus;
    }

    const children = [];

    for (var i = 0; i < elem.children.length; i++) {
      children.push(domAll(elem.children[i]));
    }

    // android specific code
    if (type == "viewPager" && window.__OS === "ANDROID") {
      const pages = children.splice(0);
      const id  = elem.__ref.__id;
      const cardWidth = elem.props.cardWidth || 1.0;
      props.afterRender = function () {
        var plusButtonWidth = 0.2;
        if (pages.length == 1) {
          plusButtonWidth = 0.8;
        }
        JBridge.viewPagerAdapter(id, JSON.stringify(pages), cardWidth, plusButtonWidth);
      }
      delete elem.props.cardWidth;
    }

    if (type == "listView" && props.text) {
      const id  = elem.__ref.__id;
      const text = props.text;
      const cb = props.onChange;
      delete props.text;
      props.afterRender = function () {
        const callbackName = 'listview' + id;
        window.top.__BOOT_LOADER[callbackName] = function () {
          JBridge.bankListRefresh(id);
        }
        const fn = function(i) {
          if (typeof cb === "function") {
            cb(i);
          }

        }
        JBridge.bankList(id, text, callbackName, window.callbackMapper(fn));
      }
    }

    if (__OS == "WEB" && props.onResize) {
      window.__resizeEvent = props.onResize;
    }

    props.id = elem.__ref.__id;
    if(elem.parentType && window.__OS == "ANDROID")
      return prestoDayum({elemType: type, parentType: elem.parentType}, props, children);

    return prestoDayum(type, props, children);
  }

  function cmdForAndroid(config, set, type) {
    if (set) {
      if (config.id) {
        var cmd = parseParams(type, config, "set").runInUI.replace("this->setId", "set_view=ctx->findViewById").replace(/this->/g, "get_view->");
        cmd = cmd.replace(/PARAM_CTR_HOLDER[^;]*/g, "get_view->getLayoutParams;");
      } else {
        console.error("ID null, this is not supposed to happen. Debug this or/and raise a issue in bitbucket.");
      }
      return cmd;
    }

    var cmd = "set_view=ctx->findViewById:i_" + config.id + ";";
    var runInUI;
    delete config.id;
    config.root = "true";
    runInUI = parseParams(type, config, "get").runInUI;
    cmd += runInUI + ';';
    return cmd;
  }

  function applyProp(element, attribute, set) {
    var prop = {
      id: element.__ref.__id
    }
    prop[attribute.value0] = attribute.value1;

    if (attribute.value0 == 'focus' && attribute.value1 == false &&  window.__OS == "ANDROID") {
      return;
    }

    if (window.__OS == "ANDROID") {
      var cmd = cmdForAndroid(prop, set, element.type);
      Android.runInUI(cmd, null);
    } else if (window.__OS == "IOS"){
      Android.runInUI(prop);
    } else {
      Android.runInUI(webParseParams("linearLayout", prop, "set"));
    }
    // Android.runInUI(parseParams("linearLayout", prop, "set"));
  }

  function replaceView(element, attribute, removeProp) {
    // console.log("REPLACE VIEW", element.__ref.__id, element.props);
    const props = R.clone(element.props);
    props.id = element.__ref.__id;
    var rep;
    const viewGroups = ["linearLayout", "relativeLayout", "scrollView", "frameLayout", "horizontalScrollView"];

    if (viewGroups.indexOf(element.type) != -1){
      props.root = true;
      rep = prestoDayum(element.type, props, []);
    } else if (window.__OS == "ANDROID") {
      rep = prestoDayum({elemType: element.type, parentType: element.parentNode.type}, props, []);
    } else {
      rep = prestoDayum(element.type, props, []);
    }
    if(window.__OS == "ANDROID"){
      Android.replaceView(JSON.stringify(rep), element.__ref.__id);
    } else {
      Android.replaceView(rep, element.__ref.__id);
    }
  }



  window.moveChild = moveChild;
  window.removeChild = removeChild;
  window.addChild = addChild;
  window.replaceView = replaceView;
  window.addProperty = addAttribute;
  // window.removeAttribute = removeAttribute;
  window.updateProperty = updateAttribute;
  window.addAttribute = addAttribute;
  window.insertDom = insertDom;
  window.createPrestoElement = function () {
      if(typeof(window.__ui_id_sequence) != "undefined" && window.__ui_id_sequence != null) {
          return { __id : ++window.__ui_id_sequence };
      } else {
          window.__ui_id_sequence = typeof Android.getNewID == "function" ? parseInt(Android.getNewID()) * 1000000 : window.__PRESTO_ID ;
          return { __id : ++window.__ui_id_sequence };
      }
  };

  window.__screenSubs = {};

  function moveChild(child, parent, index) {
    Android.moveView(child.__ref.__id, index);
  }



  function removeChild(child, parent, index) {
    // console.log("Remove child :", child.type);
    Android.removeView(child.__ref.__id + "");
  }

  function addChild(child, parent, index) {
    if(child.type == null) {
      console.warn("child null");
    }
    // console.log("Add child :", child.__ref.__id, child.type);
    const viewGroups = ["linearLayout", "relativeLayout", "scrollView", "frameLayout", "horizontalScrollView"];
    if (window.__OS == "ANDROID") {
      if (viewGroups.indexOf(child.type) != -1){
        child.props.root = true;
      } else {
        child.parentType = parent.type;
      }
      Android.addViewToParent(parent.__ref.__id + "", JSON.stringify(domAll(child)), index, null, null);
    }
    else
      Android.addViewToParent(parent.__ref.__id, domAll(child), index, null, null);
  }

  function addAttribute(element, attribute) {
    // console.log("add attr :", attribute);
    element.props[attribute.value0] = attribute.value1;
    applyProp(element, attribute, true);
  }

  function removeAttribute(element, attribute) {
    // console.log("remove attr :", attribute);
      replaceView(element, attribute, true);
  }

  function updateAttribute(element, attribute) {
    // console.log("update attr :", attribute);
    element.props[attribute.value0] = attribute.value1;

    applyProp(element, attribute, false);
  }


  exports.setRootNode = function(nothing) {
    var root = {type: "relativeLayout", props: {root: "true"}, children: []};

    root.props.height = "match_parent";
    root.props.width = "match_parent";
    var elemRef = window.createPrestoElement();
    root.props.id = elemRef.__id;
    root.type = "relativeLayout";
    root.__ref = elemRef;

    window.N = root;
    window.__CACHELIMIT = 50;
    window.__psNothing = nothing;
    window.MACHINE_MAP = {};
    window.__CANCELER = {};
    // Android specific shadow.
    window.shadowObject = {};

    window.__stashScreen = [];
    window.__CACHED_SCREEN = [];
    window.__lastCachedScreen = {};
      // Screen nothing is used for stashing the screens without namespace.
    window.__screenNothing = true;
    window.__prevScreenName = nothing;
    window.__currScreenName = nothing;
    window.__ROOTSCREEN = {
      idSet: {
        root: root.props.id,
        child: []
      }
    };

    if(window.__OS == "ANDROID"){
      if(typeof Android.getNewID == "function") {
        Android.Render(JSON.stringify(domAll(root)), null, "false");
      } else {
        Android.Render(JSON.stringify(domAll(root)), null);
      }
    } else if (window.__OS == "WEB"){
      Android.Render(domAll(root), null);
    } else {
      Android.Render(domAll(root), null);
    }

    return root;
  }

  exports.getRootNode = function() {
    return window.N;
  }

  function clearStash () {
    var screen = window.__stashScreen;
    var len = screen.length;

    setTimeout(function() {
      for (var i = 0; i < len; i++) {
        Android.removeView(screen[i] + "");
      }
    }, 1000);
    window.__stashScreen = [];
  }

  function makeVisible (cache, _id) {
    // console.log("SCREEN", " makeVisible", cache, _id);
    if (cache) {
      var prop = {
          id: _id,
          visibility: "visible"
      }
    } else {
      var length =  window.__ROOTSCREEN.idSet.child.length;
      var prop = {
          id: window.__ROOTSCREEN.idSet.child[length - 1].id,
          visibility: "visible"
      }
    }
    // console.log("SCREEN", " makeVisible", prop);
    if (window.__OS == "ANDROID") {
      var cmd = cmdForAndroid(prop, true, "linearLayout");
      Android.runInUI(cmd, null);
    } else if (window.__OS == "IOS"){
      Android.runInUI(prop);
    } else {
      Android.runInUI(webParseParams("relativeLayout", prop, "set"));
    }
  }

  function screenIsInStack(screen) {
    var ar = window.__ROOTSCREEN.idSet.child;
    for (var i = 0,l=ar.length; i < l; i++) {
      if (ar[i].name.value0 == screen.value0) {
        var rem = window.__ROOTSCREEN.idSet.child.splice(i+1);
        if (rem.length || i != l-1) {
          if (i == 0)
            window.__prevScreenName = window.__psNothing;
          else
            window.__prevScreenName = window.__ROOTSCREEN.idSet.child[i-1].name;
          window.__currScreenName = screen;

          setTimeout(function() {
            for (var j = 0,k=rem.length; j < k; j++) {
              Android.removeView(rem[j].id + "");
              delete window.MACHINE_MAP[rem[j].name.value0];
            }
          }, 1000);

          makeVisible(false);
        }
        return true;
      }
    }

    return false;

  }

  exports.saveScreenNameImpl = function(screen) {

    clearStash();

    if (screen == window.__psNothing) {
      window.__screenNothing = true;
      return false;
    } else {
      window.__screenNothing = false;
      window.__dui_last_patch_screen = screen.value0;


      var cond = screenIsInStack(screen)

      if (cond) {
        // console.log("SCREEN", " saveScreen calling hide", screen);
        hideCachedScreen();
        return true;
      } else {
        window.__prevScreenName = window.__currScreenName;
        window.__currScreenName = screen;


        return false;
      }
    }
  }

  function screenIsCached(screen) {
    var ar = window.__CACHED_SCREEN;

    // console.log("SCREEN", " screenIsCached", screen);

    if (window.__lastCachedScreen.name && window.__lastCachedScreen.name.value0 == screen.value0) {
      return true;
    }

    for (var i = 0,l=ar.length; i < l; i++) {
      if (ar[i].name.value0 == screen.value0) {
        makeVisible(true, ar[i].id);
        if (window.__lastCachedScreen.name && window.__lastCachedScreen.name != ""  ){
          var __visibility = window.__OS == "ANDROID" ? "gone" : "invisible";
          var prop = {
            id: window.__lastCachedScreen.id,
            visibility: __visibility
          }
          // console.log("SCREEN", " screenIsCached", screen, prop);
          if (window.__OS == "ANDROID") {
            var cmd = cmdForAndroid(prop, true, "relativeLayout");
            Android.runInUI(cmd, null);
          } else if (window.__OS == "IOS"){
            Android.runInUI(prop);
          } else {
            Android.runInUI(webParseParams("relativeLayout", prop, "set"));
          }

        }

        window.__lastCachedScreen.id = ar[i].id;
        window.__lastCachedScreen.flag = true;
        return true;
      }
    }

    return false;

  }


  exports.cacheScreenImpl = function(screen) {

      clearStash();

      if (screen == window.__psNothing) {
        window.__screenNothing = true;
        return false;
      } else {
        window.__screenNothing = false;
        window.__dui_last_patch_screen = screen.value0;
        // console.log("SCREEN", " cachedScreenImpl", screen);

        var cond = screenIsCached(screen)

        window.__lastCachedScreen.name = screen;

        return cond;
        // if (cond) {
        //   return true;
        // } else {

        //   return false;
        // }
      }
  }

  function hideCachedScreen() {
    if (window.__lastCachedScreen.flag) {
      window.__lastCachedScreen.flag = false;
      var __visibility = window.__OS == "ANDROID" ? "gone" : "invisible";
      var prop = {
          id: window.__lastCachedScreen.id,
          visibility: __visibility
      }
      // console.log("SCREEN", " hideCached", prop);

      window.__lastCachedScreen.name = "";

      if (window.__OS == "ANDROID") {
        var cmd = cmdForAndroid(prop, true, "relativeLayout");
        Android.runInUI(cmd, null);
      } else if (window.__OS == "IOS") {
        Android.runInUI(prop);
      } else {
        Android.runInUI(webParseParams("relativeLayout", prop, "set"));
      }

    }
  }

  exports.processWidget = function (){
    if(window.widgets) {
      window.widgets.forEach(function (obj) {
        obj.fn(obj.id_)();
      });
      window.widgets = [];
    }
  }

  function insertDom(root, dom) {
    root.children.push(dom);
    dom.parentNode = root;
    dom.__ref = window.createPrestoElement();
    window.N = root;

    var rootId = window.__ROOTSCREEN.idSet.root;

    dom.props.root = true;
    if (window.__screenNothing) {
      window.__stashScreen.push(dom.__ref.__id);
      window.__screenNothing = false;
    }
    else {
      var screenName = window.__currScreenName;

      var length = window.__ROOTSCREEN.idSet.child.push({id: dom.__ref.__id, name: screenName});
      if (length >= window.__CACHELIMIT) {
        window.__ROOTSCREEN.idSet.child.shift();
        length -= 1;
      }

      if (length >= 2) {
        var __visibility = window.__OS == "ANDROID" ? "gone" : "invisible";
        var prop = {
            id: window.__ROOTSCREEN.idSet.child[length - 2].id,
            visibility: __visibility
        }

        setTimeout(function() {
          if (window.__OS == "ANDROID" && length > 1) {
            var cmd = cmdForAndroid(prop, true, "relativeLayout");
            Android.runInUI(cmd, null);
          } else if (window.__OS == "IOS"  && length > 1){
            Android.runInUI(prop);
          } else if (length > 1) {
            Android.runInUI(webParseParams("relativeLayout", prop, "set"));
          }
        }, 1000);

      }
    }

    var callback = window.callbackMapper(executePostProcess);
    if (window.__OS == "ANDROID") {
      Android.addViewToParent(rootId + "", JSON.stringify(domAll(dom)), length - 1, callback, null);
    }
    else {
      Android.addViewToParent(rootId, domAll(dom), length - 1, callback, null);
    }

    hideCachedScreen();

  }


  exports.updateDom = function (root, dom) {
    root.children.push(dom);
    dom.parentNode = root;
    dom.__ref = window.createPrestoElement();
    window.N = root;

    var rootId = window.__ROOTSCREEN.idSet.root;

    var length = window.__ROOTSCREEN.idSet.child.length;
    dom.props.root = true;
    if (window.__screenNothing) {
      window.__stashScreen.push(dom.__ref.__id);
      window.__screenNothing = false;
    }
    else {
      if (window.__lastCachedScreen.id && window.__lastCachedScreen.name && window.__lastCachedScreen.name != ""  ){
        var __visibility = window.__OS == "ANDROID" ? "gone" : "invisible";
        var prop = {
          id: window.__lastCachedScreen.id,
          visibility: __visibility
        }
        if (window.__OS == "ANDROID") {
          var cmd = cmdForAndroid(prop, true, "relativeLayout");
          Android.runInUI(cmd, null);
        } else if (window.__OS == "IOS"){
          Android.runInUI(prop);
        } else {
          Android.runInUI(webParseParams("relativeLayout", prop, "set"));

        }
      }
      window.__lastCachedScreen.id = dom.__ref.__id;
      window.__lastCachedScreen.flag = true;
      var screenName = window.__lastCachedScreen.name;


      window.__CACHED_SCREEN.push({id: dom.__ref.__id, name: screenName});
    }

    if (window.__OS == "ANDROID") {
      var callback = window.callbackMapper(executePostProcess);
      Android.addViewToParent(rootId, JSON.stringify(domAll(dom)), length, callback, null);
    }
    else {
      Android.addViewToParent(rootId, domAll(dom), length, null, null);
    }

  }

  function executePostProcess() {

    if(window.__dui_screen && window["afterRender"]) {
      for (var tag in window["afterRender"][window.__dui_screen]) {
        try {
          window["afterRender"][window.__dui_screen][tag]()();
          window["afterRender"][window.__dui_screen]["executed"] = true;
        }
        catch (err) {
          console.warn(err);
        }
      }
    }

    if (JBridge && JBridge.setShadow) {
      for (var tag in window.shadowObject) {
        JBridge.setShadow(window.shadowObject[tag]["level"],
                          JSON.stringify(window.shadowObject[tag]["viewId"]),
                          JSON.stringify(window.shadowObject[tag]["backgroundColor"]),
                          JSON.stringify(window.shadowObject[tag]["blurValue"]),
                          JSON.stringify(window.shadowObject[tag]["shadowColor"]),
                          JSON.stringify(window.shadowObject[tag]["dx"]),
                          JSON.stringify(window.shadowObject[tag]["dy"]),
                          JSON.stringify(window.shadowObject[tag]["spread"]),
                          JSON.stringify(window.shadowObject[tag]["factor"]));
      }
    } else {
      console.warn("experimental feature: JBridge is not available in native");
    }
  }
})(PS["PrestoDOM.Core"] = PS["PrestoDOM.Core"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Map = PS["Data.Map"];
  var Data_Map_Internal = PS["Data.Map.Internal"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];                 
  var Compactable = function (compact, separate) {
      this.compact = compact;
      this.separate = separate;
  };
  var separate = function (dict) {
      return dict.separate;
  };
  var compact = function (dict) {
      return dict.compact;
  };
  exports["Compactable"] = Compactable;
  exports["compact"] = compact;
  exports["separate"] = separate;
})(PS["Data.Compactable"] = PS["Data.Compactable"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Compactable = PS["Data.Compactable"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Map = PS["Data.Map"];
  var Data_Map_Internal = PS["Data.Map.Internal"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];                 
  var Filterable = function (Compactable0, Functor1, filter, filterMap, partition, partitionMap) {
      this.Compactable0 = Compactable0;
      this.Functor1 = Functor1;
      this.filter = filter;
      this.filterMap = filterMap;
      this.partition = partition;
      this.partitionMap = partitionMap;
  };
  var partitionMap = function (dict) {
      return dict.partitionMap;
  };
  var partition = function (dict) {
      return dict.partition;
  };
  var filterMap = function (dict) {
      return dict.filterMap;
  };
  var filter = function (dict) {
      return dict.filter;
  };
  exports["Filterable"] = Filterable;
  exports["partitionMap"] = partitionMap;
  exports["partition"] = partition;
  exports["filterMap"] = filterMap;
  exports["filter"] = filter;
})(PS["Data.Filterable"] = PS["Data.Filterable"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Compactable = PS["Data.Compactable"];
  var Data_Filterable = PS["Data.Filterable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];                 
  var IsEvent = function (Alternative0, Filterable1, fix, fold, keepLatest, sampleOn) {
      this.Alternative0 = Alternative0;
      this.Filterable1 = Filterable1;
      this.fix = fix;
      this.fold = fold;
      this.keepLatest = keepLatest;
      this.sampleOn = sampleOn;
  };
  var sampleOn = function (dict) {
      return dict.sampleOn;
  };
  var keepLatest = function (dict) {
      return dict.keepLatest;
  };
  var fold = function (dict) {
      return dict.fold;
  };
  var fix = function (dict) {
      return dict.fix;
  };
  exports["IsEvent"] = IsEvent;
  exports["fold"] = fold;
  exports["sampleOn"] = sampleOn;
  exports["keepLatest"] = keepLatest;
  exports["fix"] = fix;
})(PS["FRP.Event.Class"] = PS["FRP.Event.Class"] || {});
(function(exports) {
    "use strict";

  exports.reallyUnsafeRefEq = function (a) {
    return function (b) {
      return a === b;
    };
  };
})(PS["Unsafe.Reference"] = PS["Unsafe.Reference"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var $foreign = PS["Unsafe.Reference"]; 
  var unsafeRefEq = $foreign.reallyUnsafeRefEq;
  exports["unsafeRefEq"] = unsafeRefEq;
})(PS["Unsafe.Reference"] = PS["Unsafe.Reference"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Compactable = PS["Data.Compactable"];
  var Data_Either = PS["Data.Either"];
  var Data_Filterable = PS["Data.Filterable"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Unit = PS["Data.Unit"];
  var Effect = PS["Effect"];
  var Effect_Ref = PS["Effect.Ref"];
  var Effect_Unsafe = PS["Effect.Unsafe"];
  var FRP_Event_Class = PS["FRP.Event.Class"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];
  var Unsafe_Reference = PS["Unsafe.Reference"];
  var subscribe = function (v) {
      return function (k) {
          return v(function ($79) {
              return Data_Functor["void"](Effect.functorEffect)(k($79));
          });
      };
  };
  var sampleOn = function (v) {
      return function (v1) {
          return function (k) {
              return function __do() {
                  var v2 = Effect_Ref["new"](Data_Maybe.Nothing.value)();
                  var v3 = v(function (a) {
                      return Effect_Ref.write(new Data_Maybe.Just(a))(v2);
                  })();
                  var v4 = v1(function (f) {
                      return Control_Bind.bind(Effect.bindEffect)(Effect_Ref.read(v2))(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(function ($80) {
                          return k(f($80));
                      }));
                  })();
                  return Control_Apply.applySecond(Effect.applyEffect)(v3)(v4);
              };
          };
      };
  };                    
  var keepLatest = function (v) {
      return function (k) {
          return function __do() {
              var v1 = Effect_Ref["new"](Data_Maybe.Nothing.value)();
              var v2 = v(function (inner) {
                  return function __do() {
                      Control_Bind.bind(Effect.bindEffect)(Effect_Ref.read(v1))(Data_Foldable.sequence_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe))();
                      var v2 = subscribe(inner)(k)();
                      return Effect_Ref.write(new Data_Maybe.Just(v2))(v1)();
                  };
              })();
              return function __do() {
                  Control_Bind.bind(Effect.bindEffect)(Effect_Ref.read(v1))(Data_Foldable.sequence_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe))();
                  return v2();
              };
          };
      };
  };
  var functorEvent = new Data_Functor.Functor(function (f) {
      return function (v) {
          return function (k) {
              return v(function ($81) {
                  return k(f($81));
              });
          };
      };
  });
  var fold = function (f) {
      return function (v) {
          return function (b) {
              return function (k) {
                  return function __do() {
                      var v1 = Effect_Ref["new"](b)();
                      return v(function (a) {
                          return Control_Bind.bind(Effect.bindEffect)(Effect_Ref.modify(f(a))(v1))(k);
                      })();
                  };
              };
          };
      };
  };
  var filter = function (p) {
      return function (v) {
          return function (k) {
              return v(function (a) {
                  var $59 = p(a);
                  if ($59) {
                      return k(a);
                  };
                  return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
              });
          };
      };
  };
  var create = function __do() {
      var v = Effect_Ref["new"]([  ])();
      return {
          event: function (k) {
              return function __do() {
                  var v1 = Effect_Ref.modify(function (v1) {
                      return Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1)([ k ]);
                  })(v)();
                  return function __do() {
                      var v2 = Effect_Ref.modify(Data_Array.deleteBy(Unsafe_Reference.unsafeRefEq)(k))(v)();
                      return Data_Unit.unit;
                  };
              };
          },
          push: function (a) {
              return Control_Bind.bind(Effect.bindEffect)(Effect_Ref.read(v))(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableArray)(function (k) {
                  return k(a);
              }));
          }
      };
  };
  var fix = function (f) {
      var v = Effect_Unsafe.unsafePerformEffect(create);
      var v1 = f(v.event);
      return function (k) {
          return function __do() {
              var v2 = subscribe(v1.input)(v.push)();
              var v3 = subscribe(v1.output)(k)();
              return Control_Apply.applySecond(Effect.applyEffect)(v2)(v3);
          };
      };
  };
  var compactableEvent = new Data_Compactable.Compactable(function (xs) {
      return Data_Functor.map(functorEvent)(function (x) {
          return Data_Maybe.fromJust()(x);
      })(filter(Data_Maybe.isJust)(xs));
  }, function (xs) {
      return {
          left: Data_Functor.map(functorEvent)(Data_Either.fromLeft())(filter(Data_Either.isLeft)(xs)),
          right: Data_Functor.map(functorEvent)(Data_Either.fromRight())(filter(Data_Either.isRight)(xs))
      };
  });
  var filterableEvent = new Data_Filterable.Filterable(function () {
      return compactableEvent;
  }, function () {
      return functorEvent;
  }, filter, function (f) {
      return function ($82) {
          return Data_Functor.map(functorEvent)(function (x) {
              return Data_Maybe.fromJust()(x);
          })(filter(Data_Maybe.isJust)(Data_Functor.map(functorEvent)(f)($82)));
      };
  }, function (p) {
      return function (xs) {
          return {
              yes: filter(p)(xs),
              no: filter(function ($83) {
                  return !p($83);
              })(xs)
          };
      };
  }, function (f) {
      return function (xs) {
          return {
              left: Data_Filterable.filterMap(filterableEvent)(function ($84) {
                  return Data_Either.either(Data_Maybe.Just.create)(Data_Function["const"](Data_Maybe.Nothing.value))(f($84));
              })(xs),
              right: Data_Filterable.filterMap(filterableEvent)(function ($85) {
                  return Data_Either.hush(f($85));
              })(xs)
          };
      };
  });
  var applyEvent = new Control_Apply.Apply(function () {
      return functorEvent;
  }, function (v) {
      return function (v1) {
          return function (k) {
              return function __do() {
                  var v2 = Effect_Ref["new"](Data_Maybe.Nothing.value)();
                  var v3 = Effect_Ref["new"](Data_Maybe.Nothing.value)();
                  var v4 = v(function (a) {
                      return function __do() {
                          Effect_Ref.write(new Data_Maybe.Just(a))(v2)();
                          return Control_Bind.bind(Effect.bindEffect)(Effect_Ref.read(v3))(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(function ($86) {
                              return k(a($86));
                          }))();
                      };
                  })();
                  var v5 = v1(function (b) {
                      return function __do() {
                          Effect_Ref.write(new Data_Maybe.Just(b))(v3)();
                          return Control_Bind.bind(Effect.bindEffect)(Effect_Ref.read(v2))(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(function ($87) {
                              return k((function (v5) {
                                  return v5(b);
                              })($87));
                          }))();
                      };
                  })();
                  return Control_Apply.applySecond(Effect.applyEffect)(v4)(v5);
              };
          };
      };
  });
  var applicativeEvent = new Control_Applicative.Applicative(function () {
      return applyEvent;
  }, function (a) {
      return function (k) {
          return function __do() {
              k(a)();
              return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
          };
      };
  });
  var altEvent = new Control_Alt.Alt(function () {
      return functorEvent;
  }, function (v) {
      return function (v1) {
          return function (k) {
              return function __do() {
                  var v2 = v(k)();
                  var v3 = v1(k)();
                  return Control_Apply.applySecond(Effect.applyEffect)(v2)(v3);
              };
          };
      };
  });
  var plusEvent = new Control_Plus.Plus(function () {
      return altEvent;
  }, function (v) {
      return Control_Applicative.pure(Effect.applicativeEffect)(Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit));
  });
  var alternativeEvent = new Control_Alternative.Alternative(function () {
      return applicativeEvent;
  }, function () {
      return plusEvent;
  });
  var eventIsEvent = new FRP_Event_Class.IsEvent(function () {
      return alternativeEvent;
  }, function () {
      return filterableEvent;
  }, fix, fold, keepLatest, sampleOn);
  exports["create"] = create;
  exports["subscribe"] = subscribe;
  exports["functorEvent"] = functorEvent;
  exports["compactableEvent"] = compactableEvent;
  exports["filterableEvent"] = filterableEvent;
  exports["applyEvent"] = applyEvent;
  exports["applicativeEvent"] = applicativeEvent;
  exports["altEvent"] = altEvent;
  exports["plusEvent"] = plusEvent;
  exports["alternativeEvent"] = alternativeEvent;
  exports["eventIsEvent"] = eventIsEvent;
})(PS["FRP.Event"] = PS["FRP.Event"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Filterable = PS["Data.Filterable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Tuple = PS["Data.Tuple"];
  var Effect = PS["Effect"];
  var FRP_Event = PS["FRP.Event"];
  var FRP_Event_AnimationFrame = PS["FRP.Event.AnimationFrame"];
  var FRP_Event_Class = PS["FRP.Event.Class"];
  var Prelude = PS["Prelude"];
  var step = function (dictIsEvent) {
      return function (a) {
          return function (e) {
              return FRP_Event_Class.sampleOn(dictIsEvent)(Control_Alt.alt(((dictIsEvent.Alternative0()).Plus1()).Alt0())(Control_Applicative.pure((dictIsEvent.Alternative0()).Applicative0())(a))(e));
          };
      };
  };
  var unfold = function (dictIsEvent) {
      return function (f) {
          return function (e) {
              return function (a) {
                  return step(dictIsEvent)(a)(FRP_Event_Class.fold(dictIsEvent)(f)(e)(a));
              };
          };
      };
  };
  var sample = function (v) {
      return function (e) {
          return v(e);
      };
  };
  var functorABehavior = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return function (v) {
              return function (e) {
                  return v(Data_Functor.map(dictFunctor)(function (v1) {
                      return function ($66) {
                          return v1(f($66));
                      };
                  })(e));
              };
          };
      });
  };
  var sampleBy = function (dictIsEvent) {
      return function (f) {
          return function (b) {
              return function (e) {
                  return sample(Data_Functor.map(functorABehavior((dictIsEvent.Filterable1()).Functor1()))(f)(b))(Data_Functor.map((dictIsEvent.Filterable1()).Functor1())(Data_Function.applyFlipped)(e));
              };
          };
      };
  };
  var sample_ = function (dictIsEvent) {
      return sampleBy(dictIsEvent)(Data_Function["const"]);
  };
  exports["step"] = step;
  exports["sample"] = sample;
  exports["sampleBy"] = sampleBy;
  exports["sample_"] = sample_;
  exports["unfold"] = unfold;
  exports["functorABehavior"] = functorABehavior;
})(PS["FRP.Behavior"] = PS["FRP.Behavior"] || {});
(function(exports) {
    "use strict";

  exports["null"] = null;

  exports.notNull = function (x) {
    return x;
  };
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var $foreign = PS["Data.Nullable"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];                 
  var toNullable = Data_Maybe.maybe($foreign["null"])($foreign.notNull);
  exports["toNullable"] = toNullable;
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Effect_Uncurried = PS["Effect.Uncurried"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];                 
  var Step = (function () {
      function Step(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Step.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Step(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Step;
  })();
  var unStep = Unsafe_Coerce.unsafeCoerce;
  var step = function (v, a) {
      return v.value2(v.value1, a);
  };
  var mkStep = Unsafe_Coerce.unsafeCoerce;
  var halt = function (v) {
      return v.value3(v.value1);
  };
  var extract = unStep(function (v) {
      return v.value0;
  });
  exports["Step"] = Step;
  exports["mkStep"] = mkStep;
  exports["unStep"] = unStep;
  exports["extract"] = extract;
  exports["step"] = step;
  exports["halt"] = halt;
})(PS["Halogen.VDom.Machine"] = PS["Halogen.VDom.Machine"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Text = (function () {
      function Text(value0) {
          this.value0 = value0;
      };
      Text.create = function (value0) {
          return new Text(value0);
      };
      return Text;
  })();
  var Elem = (function () {
      function Elem(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Elem.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Elem(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Elem;
  })();
  var Keyed = (function () {
      function Keyed(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Keyed.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Keyed(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Keyed;
  })();
  var Widget = (function () {
      function Widget(value0) {
          this.value0 = value0;
      };
      Widget.create = function (value0) {
          return new Widget(value0);
      };
      return Widget;
  })();
  var Grafted = (function () {
      function Grafted(value0) {
          this.value0 = value0;
      };
      Grafted.create = function (value0) {
          return new Grafted(value0);
      };
      return Grafted;
  })();
  var Graft = (function () {
      function Graft(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      Graft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new Graft(value0, value1, value2);
              };
          };
      };
      return Graft;
  })();
  var unGraft = function (f) {
      return function ($45) {
          return f($45);
      };
  };           
  var graft = Unsafe_Coerce.unsafeCoerce;
  var bifunctorGraft = new Data_Bifunctor.Bifunctor(function (f) {
      return function (g) {
          return unGraft(function (v) {
              return graft(new Graft(function ($47) {
                  return f(v.value0($47));
              }, function ($48) {
                  return g(v.value1($48));
              }, v.value2));
          });
      };
  });
  var runGraft = unGraft(function (v) {
      var go = function (v2) {
          if (v2 instanceof Text) {
              return new Text(v2.value0);
          };
          if (v2 instanceof Elem) {
              return new Elem(v2.value0, v2.value1, v.value0(v2.value2), Data_Functor.map(Data_Functor.functorArray)(go)(v2.value3));
          };
          if (v2 instanceof Keyed) {
              return new Keyed(v2.value0, v2.value1, v.value0(v2.value2), Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Data_Tuple.functorTuple)(go))(v2.value3));
          };
          if (v2 instanceof Widget) {
              return new Widget(v.value1(v2.value0));
          };
          if (v2 instanceof Grafted) {
              return new Grafted(Data_Bifunctor.bimap(bifunctorGraft)(v.value0)(v.value1)(v2.value0));
          };
          throw new Error("Failed pattern match at Halogen.VDom.Types (line 73, column 7 - line 73, column 27): " + [ v2.constructor.name ]);
      };
      return go(v.value2);
  });
  exports["Text"] = Text;
  exports["Elem"] = Elem;
  exports["Keyed"] = Keyed;
  exports["Widget"] = Widget;
  exports["Grafted"] = Grafted;
  exports["Graft"] = Graft;
  exports["graft"] = graft;
  exports["unGraft"] = unGraft;
  exports["runGraft"] = runGraft;
  exports["bifunctorGraft"] = bifunctorGraft;
})(PS["Halogen.VDom.Types"] = PS["Halogen.VDom.Types"] || {});
(function(exports) {
    "use strict";

  // removeEventListener
  // removeAttribute
  // removeProperty
  // pokeMutMap
  // addEventListener
  // setAttribute

  exports.cancelBehavior = function (ty) {
      var canceler = window.__CANCELER[ty];
      canceler();
  }

  exports.unsafeGetAny = function (key, obj) {
    return obj[key];
  };

  exports.unsafeGetProp = function (key, obj) {
    if (obj.props)
      return obj.props[key];
    else return;
  };

  exports.unsafeHasAny = function (key, obj) {
    return obj.hasOwnProperty(key);
  };

  exports.updateProperty = function (key, val, obj) {
    window.updateProperty(obj, {value0: key, value1: val})
  };

  exports.addProperty = function (key, val, obj) {
    window.addProperty(obj, {value0: key, value1: val})
  };

  exports.unsafeSetAny = function (key, val, obj) {
      obj[key] = val;
  };

  exports.unsafeSetProp = function (key, val, obj) {
    obj.props[key] = val;
  };

  exports.removeProperty = function (key, val, obj) {
    obj.props[key] = val;
    delete obj.props[key];
  };

  exports.forE = function (a, f) {
    var b = [];
    for (var i = 0; i < a.length; i++) {
      b.push(f(i, a[i]));
    }
    return b;
  };

  exports.forEachE = function (a, f) {
    for (var i = 0; i < a.length; i++) {
      f(a[i]);
    }
  };

  exports.forInE = function (o, f) {
    var ks = Object.keys(o);
    for (var i = 0; i < ks.length; i++) {
      var k = ks[i];
      f(k, o[k]);
    }
  };

  exports.diffWithIxE = function (a1, a2, f1, f2, f3) {
    var a3 = [];
    var l1 = a1.length;
    var l2 = a2.length;
    var i  = 0;
    while (1) {
      if (i < l1) {
        if (i < l2) {
          a3.push(f1(i, a1[i], a2[i]));
        } else {
          f2(i, a1[i]);
        }
      } else if (i < l2) {
        a3.push(f3(i, a2[i]));
      } else {
        break;
      }
      i++;
    }
    return a3;
  };

  exports.strMapWithIxE = function (as, fk, f) {
    var o = {};
    for (var i = 0; i < as.length; i++) {
      var a = as[i];
      var k = fk(a);
      o[k] = f(k, i, a);
    }
    return o;
  };

  exports.diffWithKeyAndIxE = function (o1, as, fk, f1, f2, f3) {
    var o2 = {};
    for (var i = 0; i < as.length; i++) {
      var a = as[i];
      var k = fk(a);
      if (o1.hasOwnProperty(k)) {
        o2[k] = f1(k, i, o1[k], a);
      } else {
        o2[k] = f3(k, i, a);
      }
    }
    for (var k in o1) {
      if (k in o2) {
        continue;
      }
      f2(k, o1[k]);
    }
    return o2;
  };

  exports.diffPropWithKeyAndIxE = function (o1, as, fk, f1, f2, f3, el) {
    var o2 = {};
    var replace = false;
    for (var i = 0; i < as.length; i++) {
      var a = as[i];
      var k = fk(a);
      if (o1.hasOwnProperty(k)) {
        o2[k] = f1(k, i, o1[k], a);
      } else {
        o2[k] = f3(k, i, a);
      }
    }
    for (var k in o1) {
      if (k in o2) {
        continue;
      }
      replace = true;
      f2(k, o1[k]);
    }
    if (replace)
      window.replaceView(el);
    return o2;
  };

  exports.refEq = function (a, b) {
    return a === b;
  };

  exports.createTextNode = function (s, doc) {
    return {type: "textView", children: [], props: {text: s}}
  };

  exports.setTextContent = function (s, n) {
    n.textContent = s;
  };

  exports.createElement = function (ns, name, doc) {
    return {type: name, children: [], props: {}, __ref: window.createPrestoElement()}
  };

  exports.insertChildIx = function (type, i, a, b) {
    var n = (b.children[i]) || {__ref: {__id: "-1"}};

    if (!a)
      console.warn("CUSTOM VDOM ERROR !! : ", "Trying to add undefined element to ", b);

    if (n === a) {
      return;
    }

    if (type !== "patch") {
      a.parentNode = b;
      b.children.splice(i, 0, a);

      return;
    }

    var index = b.children.indexOf(a);
    if (index !== -1) {
      b.children.splice(index, 1);
      window.moveChild(a, b, i);
    } else {
      window.addChild(a, b, i);
    }
    b.children.splice(i, 0, a);
    a.parentNode = b;
  };

  exports.removeChild = function (a, b) {
    var childIndex = -1;

    if (b && a.parentNode.__ref.__id === b.__ref.__id) {
      for (var i=0; i<b.children.length; i++) {
        if (b.children[i].__ref.__id == a.__ref.__id) {
          childIndex = i;
        }
      }
    }

    if (childIndex > -1) {
      window.removeChild(a, b, childIndex);
      a.props.__removed = true;
      b.children.splice(childIndex, 1);
    }
  };

  exports.parentNode = function (a) {
    if (a.parentNode.props.__removed) {
      a.props.__removed = true;
      return null;
    } else {
      return a.parentNode;
    }
  };

  exports.setAttribute = function (ns, attr, val, el) {
    if (ns != null) {
      el.setAttributeNS(ns, attr, val);
    } else {
      el.setAttribute(attr, val);
    }
  };

  exports.removeAttribute = function (ns, attr, el) {
    if (ns != null) {
      el.removeAttributeNS(ns, attr);
    } else {
      el.removeAttribute(attr);
    }
  };

  exports.addEventListener = function (pr, ev, listener, el) {
    // el.addEventListener(ev, listener, false);
    el.props[ev] = listener;
    if(pr == "patch") {
      window.replaceView(el);
    }
  };

  exports.removeEventListener = function (ev, listener, el) {
     // el.removeEventListener(ev, listener, false);
     delete el.props[ev];
  };

  exports.jsUndefined = void 0;
})(PS["Halogen.VDom.Util"] = PS["Halogen.VDom.Util"] || {});
(function(exports) {
    "use strict";

  exports.eventListener = function (fn) {
    return function () {
      return function (event) {
        return fn(event)();
      };
    };
  };
})(PS["Web.Event.EventTarget"] = PS["Web.Event.EventTarget"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var $foreign = PS["Web.Event.EventTarget"];
  var Effect = PS["Effect"];
  var Prelude = PS["Prelude"];
  var Web_Event_Event = PS["Web.Event.Event"];
  var Web_Event_Internal_Types = PS["Web.Event.Internal.Types"];
  exports["eventListener"] = $foreign.eventListener;
})(PS["Web.Event.EventTarget"] = PS["Web.Event.EventTarget"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var $foreign = PS["Web.DOM.Element"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Effect = PS["Effect"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Web_DOM_ChildNode = PS["Web.DOM.ChildNode"];
  var Web_DOM_Internal_Types = PS["Web.DOM.Internal.Types"];
  var Web_DOM_NonDocumentTypeChildNode = PS["Web.DOM.NonDocumentTypeChildNode"];
  var Web_DOM_ParentNode = PS["Web.DOM.ParentNode"];
  var Web_Event_EventTarget = PS["Web.Event.EventTarget"];
  var Web_Internal_FFI = PS["Web.Internal.FFI"];              
  var toNode = Unsafe_Coerce.unsafeCoerce;
  exports["toNode"] = toNode;
})(PS["Web.DOM.Element"] = PS["Web.DOM.Element"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var $foreign = PS["Halogen.VDom.Util"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Nullable = PS["Data.Nullable"];
  var Effect = PS["Effect"];
  var Effect_Uncurried = PS["Effect.Uncurried"];
  var Foreign_Object = PS["Foreign.Object"];
  var Foreign_Object_ST = PS["Foreign.Object.ST"];
  var Halogen_VDom_Types = PS["Halogen.VDom.Types"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Web_DOM_Document = PS["Web.DOM.Document"];
  var Web_DOM_Element = PS["Web.DOM.Element"];
  var Web_DOM_Node = PS["Web.DOM.Node"];
  var Web_Event_EventTarget = PS["Web.Event.EventTarget"];                 
  var unsafeLookup = $foreign.unsafeGetAny;
  var unsafeFreeze = Unsafe_Coerce.unsafeCoerce;
  var pokeMutMap = $foreign.unsafeSetAny;
  var newMutMap = Foreign_Object_ST["new"];
  exports["newMutMap"] = newMutMap;
  exports["pokeMutMap"] = pokeMutMap;
  exports["unsafeFreeze"] = unsafeFreeze;
  exports["unsafeLookup"] = unsafeLookup;
  exports["unsafeGetAny"] = $foreign.unsafeGetAny;
  exports["unsafeGetProp"] = $foreign.unsafeGetProp;
  exports["unsafeHasAny"] = $foreign.unsafeHasAny;
  exports["unsafeSetAny"] = $foreign.unsafeSetAny;
  exports["unsafeSetProp"] = $foreign.unsafeSetProp;
  exports["forE"] = $foreign.forE;
  exports["forEachE"] = $foreign.forEachE;
  exports["forInE"] = $foreign.forInE;
  exports["diffWithIxE"] = $foreign.diffWithIxE;
  exports["diffWithKeyAndIxE"] = $foreign.diffWithKeyAndIxE;
  exports["diffPropWithKeyAndIxE"] = $foreign.diffPropWithKeyAndIxE;
  exports["strMapWithIxE"] = $foreign.strMapWithIxE;
  exports["refEq"] = $foreign.refEq;
  exports["createTextNode"] = $foreign.createTextNode;
  exports["setTextContent"] = $foreign.setTextContent;
  exports["createElement"] = $foreign.createElement;
  exports["insertChildIx"] = $foreign.insertChildIx;
  exports["removeChild"] = $foreign.removeChild;
  exports["parentNode"] = $foreign.parentNode;
  exports["setAttribute"] = $foreign.setAttribute;
  exports["removeAttribute"] = $foreign.removeAttribute;
  exports["addEventListener"] = $foreign.addEventListener;
  exports["removeEventListener"] = $foreign.removeEventListener;
  exports["addProperty"] = $foreign.addProperty;
  exports["updateProperty"] = $foreign.updateProperty;
  exports["removeProperty"] = $foreign.removeProperty;
  exports["jsUndefined"] = $foreign.jsUndefined;
  exports["cancelBehavior"] = $foreign.cancelBehavior;
})(PS["Halogen.VDom.Util"] = PS["Halogen.VDom.Util"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Array = PS["Data.Array"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Effect = PS["Effect"];
  var Effect_Uncurried = PS["Effect.Uncurried"];
  var Foreign_Object = PS["Foreign.Object"];
  var Halogen_VDom_Machine = PS["Halogen.VDom.Machine"];
  var Halogen_VDom_Types = PS["Halogen.VDom.Types"];
  var Halogen_VDom_Util = PS["Halogen.VDom.Util"];
  var Prelude = PS["Prelude"];
  var Web_DOM_Document = PS["Web.DOM.Document"];
  var Web_DOM_Element = PS["Web.DOM.Element"];
  var Web_DOM_Node = PS["Web.DOM.Node"];
  var haltWidget = function (v) {
      return Halogen_VDom_Machine.halt(v.widget);
  };
  var patchWidget = function (state, vdom) {
      if (vdom instanceof Halogen_VDom_Types.Grafted) {
          return patchWidget(state, Halogen_VDom_Types.runGraft(vdom.value0));
      };
      if (vdom instanceof Halogen_VDom_Types.Widget) {
          var v = Halogen_VDom_Machine.step(state.widget, vdom.value0);
          var res$prime = Halogen_VDom_Machine.unStep(function (v1) {
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(v1.value0, {
                  build: state.build,
                  widget: v
              }, patchWidget, haltWidget));
          })(v);
          return res$prime;
      };
      haltWidget(state);
      return state.build(vdom);
  };
  var haltText = function (v) {
      var v1 = Halogen_VDom_Util.parentNode(v.node);
      return Halogen_VDom_Util.removeChild(v.node, v1);
  };
  var patchText = function (state, vdom) {
      if (vdom instanceof Halogen_VDom_Types.Grafted) {
          return patchText(state, Halogen_VDom_Types.runGraft(vdom.value0));
      };
      if (vdom instanceof Halogen_VDom_Types.Text) {
          if (state.value === vdom.value0) {
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, state, patchText, haltText));
          };
          if (Data_Boolean.otherwise) {
              var nextState = {
                  build: state.build,
                  node: state.node,
                  value: vdom.value0
              };
              Halogen_VDom_Util.setTextContent(vdom.value0, state.node);
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, patchText, haltText));
          };
      };
      haltText(state);
      return state.build(vdom);
  };
  var haltKeyed = function (v) {
      var v1 = Halogen_VDom_Util.parentNode(v.node);
      Halogen_VDom_Util.removeChild(v.node, v1);
      Halogen_VDom_Util.forInE(v.children, function (v2, s) {
          return Halogen_VDom_Machine.halt(s);
      });
      return Halogen_VDom_Machine.halt(v.attrs);
  };
  var haltElem = function (v) {
      var v1 = Halogen_VDom_Util.parentNode(v.node);
      Halogen_VDom_Util.removeChild(v.node, v1);
      Halogen_VDom_Util.forEachE(v.children, Halogen_VDom_Machine.halt);
      return Halogen_VDom_Machine.halt(v.attrs);
  };
  var eqElemSpec = function (ns1, v, ns2, v1) {
      var $84 = v === v1;
      if ($84) {
          if (ns1 instanceof Data_Maybe.Just && (ns2 instanceof Data_Maybe.Just && ns1.value0 === ns2.value0)) {
              return true;
          };
          if (ns1 instanceof Data_Maybe.Nothing && ns2 instanceof Data_Maybe.Nothing) {
              return true;
          };
          return false;
      };
      return false;
  };
  var patchElem = function (state, vdom) {
      if (vdom instanceof Halogen_VDom_Types.Grafted) {
          return patchElem(state, Halogen_VDom_Types.runGraft(vdom.value0));
      };
      if (vdom instanceof Halogen_VDom_Types.Elem && eqElemSpec(state.ns, state.name, vdom.value0, vdom.value1)) {
          var v = Data_Array.length(vdom.value3);
          var v1 = Data_Array.length(state.children);
          if (v1 === 0 && v === 0) {
              var v2 = Halogen_VDom_Machine.step(state.attrs, vdom.value2);
              var nextState = {
                  build: state.build,
                  node: state.node,
                  attrs: v2,
                  ns: vdom.value0,
                  name: vdom.value1,
                  children: state.children
              };
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, patchElem, haltElem));
          };
          var onThis = function (ix, s) {
              return Halogen_VDom_Machine.halt(s);
          };
          var onThese = function (ix, s, v2) {
              var v3 = Halogen_VDom_Machine.step(s, v2);
              Halogen_VDom_Util.insertChildIx("patch", ix, Halogen_VDom_Machine.extract(v3), state.node);
              return v3;
          };
          var onThat = function (ix, v2) {
              var v3 = state.build(v2);
              Halogen_VDom_Util.insertChildIx("patch", ix, Halogen_VDom_Machine.extract(v3), state.node);
              return v3;
          };
          var v2 = Halogen_VDom_Util.diffWithIxE(state.children, vdom.value3, onThese, onThis, onThat);
          var v3 = Halogen_VDom_Machine.step(state.attrs, vdom.value2);
          var nextState = {
              build: state.build,
              node: state.node,
              attrs: v3,
              ns: vdom.value0,
              name: vdom.value1,
              children: v2
          };
          return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, patchElem, haltElem));
      };
      haltElem(state);
      return state.build(vdom);
  };
  var patchKeyed = function (state, vdom) {
      if (vdom instanceof Halogen_VDom_Types.Grafted) {
          return patchKeyed(state, Halogen_VDom_Types.runGraft(vdom.value0));
      };
      if (vdom instanceof Halogen_VDom_Types.Keyed && eqElemSpec(state.ns, state.name, vdom.value0, vdom.value1)) {
          var v = Data_Array.length(vdom.value3);
          if (state.length === 0 && v === 0) {
              var v2 = Halogen_VDom_Machine.step(state.attrs, vdom.value2);
              var nextState = {
                  build: state.build,
                  node: state.node,
                  attrs: v2,
                  ns: vdom.value0,
                  name: vdom.value1,
                  children: state.children,
                  length: 0
              };
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, patchKeyed, haltKeyed));
          };
          var onThis = function (v2, s) {
              return Halogen_VDom_Machine.halt(s);
          };
          var onThese = function (v2, ix$prime, s, v3) {
              var v5 = Halogen_VDom_Machine.step(s, v3.value1);
              Halogen_VDom_Util.insertChildIx("patch", ix$prime, Halogen_VDom_Machine.extract(v5), state.node);
              return v5;
          };
          var onThat = function (v2, ix, v3) {
              var v5 = state.build(v3.value1);
              Halogen_VDom_Util.insertChildIx("patch", ix, Halogen_VDom_Machine.extract(v5), state.node);
              return v5;
          };
          var v2 = Halogen_VDom_Util.diffWithKeyAndIxE(state.children, vdom.value3, Data_Tuple.fst, onThese, onThis, onThat);
          var v3 = Halogen_VDom_Machine.step(state.attrs, vdom.value2);
          var nextState = {
              build: state.build,
              node: state.node,
              attrs: v3,
              ns: vdom.value0,
              name: vdom.value1,
              children: v2,
              length: v
          };
          return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, patchKeyed, haltKeyed));
      };
      haltKeyed(state);
      return state.build(vdom);
  };
  var buildWidget = function (v, build, w) {
      var v1 = v.buildWidget(v)(w);
      var res$prime = Halogen_VDom_Machine.unStep(function (v2) {
          return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(v2.value0, {
              build: build,
              widget: v1
          }, patchWidget, haltWidget));
      })(v1);
      return res$prime;
  };
  var buildText = function (v, build, s) {
      var v1 = Halogen_VDom_Util.createTextNode(s, v.document);
      var state = {
          build: build,
          node: v1,
          value: s
      };
      return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(v1, state, patchText, haltText));
  };
  var buildKeyed = function (v, build, ns1, name1, as1, ch1) {
      var v1 = Halogen_VDom_Util.createElement(Data_Nullable.toNullable(ns1), name1, v.document);
      var node = Web_DOM_Element.toNode(v1);
      var onChild = function (k, ix, v2) {
          var v3 = build(v2.value1);
          Halogen_VDom_Util.insertChildIx("render", ix, Halogen_VDom_Machine.extract(v3), node);
          return v3;
      };
      var v2 = Halogen_VDom_Util.strMapWithIxE(ch1, Data_Tuple.fst, onChild);
      var v3 = v.buildAttributes(v1)(as1);
      var state = {
          build: build,
          node: node,
          attrs: v3,
          ns: ns1,
          name: name1,
          children: v2,
          length: Data_Array.length(ch1)
      };
      return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(node, state, patchKeyed, haltKeyed));
  };
  var buildElem = function (v, build, ns1, name1, as1, ch1) {
      var v1 = Halogen_VDom_Util.createElement(Data_Nullable.toNullable(ns1), name1, v.document);
      var node = Web_DOM_Element.toNode(v1);
      var onChild = function (ix, child) {
          var v2 = build(child);
          Halogen_VDom_Util.insertChildIx("render", ix, Halogen_VDom_Machine.extract(v2), node);
          return v2;
      };
      var v2 = Halogen_VDom_Util.forE(ch1, onChild);
      var v3 = v.buildAttributes(v1)(as1);
      var state = {
          build: build,
          node: node,
          attrs: v3,
          ns: ns1,
          name: name1,
          children: v2
      };
      return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(node, state, patchElem, haltElem));
  };
  var buildVDom = function (spec) {
      var build = function (v) {
          if (v instanceof Halogen_VDom_Types.Text) {
              return buildText(spec, build, v.value0);
          };
          if (v instanceof Halogen_VDom_Types.Elem) {
              return buildElem(spec, build, v.value0, v.value1, v.value2, v.value3);
          };
          if (v instanceof Halogen_VDom_Types.Keyed) {
              return buildKeyed(spec, build, v.value0, v.value1, v.value2, v.value3);
          };
          if (v instanceof Halogen_VDom_Types.Widget) {
              return buildWidget(spec, build, v.value0);
          };
          if (v instanceof Halogen_VDom_Types.Grafted) {
              return build(Halogen_VDom_Types.runGraft(v.value0));
          };
          throw new Error("Failed pattern match at Halogen.VDom.DOM (line 58, column 27 - line 63, column 52): " + [ v.constructor.name ]);
      };
      return build;
  };
  exports["buildVDom"] = buildVDom;
  exports["buildText"] = buildText;
  exports["buildElem"] = buildElem;
  exports["buildKeyed"] = buildKeyed;
  exports["buildWidget"] = buildWidget;
})(PS["Halogen.VDom.DOM"] = PS["Halogen.VDom.DOM"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Effect = PS["Effect"];
  var Effect_Ref = PS["Effect.Ref"];
  var Effect_Uncurried = PS["Effect.Uncurried"];
  var Foreign = PS["Foreign"];
  var Foreign_Object = PS["Foreign.Object"];
  var Halogen_VDom = PS["Halogen.VDom"];
  var Halogen_VDom_Machine = PS["Halogen.VDom.Machine"];
  var Halogen_VDom_Types = PS["Halogen.VDom.Types"];
  var Halogen_VDom_Util = PS["Halogen.VDom.Util"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Web_DOM_Element = PS["Web.DOM.Element"];
  var Web_Event_Event = PS["Web.Event.Event"];
  var Web_Event_EventTarget = PS["Web.Event.EventTarget"];                 
  var Created = (function () {
      function Created(value0) {
          this.value0 = value0;
      };
      Created.create = function (value0) {
          return new Created(value0);
      };
      return Created;
  })();
  var Removed = (function () {
      function Removed(value0) {
          this.value0 = value0;
      };
      Removed.create = function (value0) {
          return new Removed(value0);
      };
      return Removed;
  })();
  var Attribute = (function () {
      function Attribute(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      Attribute.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new Attribute(value0, value1, value2);
              };
          };
      };
      return Attribute;
  })();
  var Property = (function () {
      function Property(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Property.create = function (value0) {
          return function (value1) {
              return new Property(value0, value1);
          };
      };
      return Property;
  })();
  var Handler = (function () {
      function Handler(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Handler.create = function (value0) {
          return function (value1) {
              return new Handler(value0, value1);
          };
      };
      return Handler;
  })();
  var Ref = (function () {
      function Ref(value0) {
          this.value0 = value0;
      };
      Ref.create = function (value0) {
          return new Ref(value0);
      };
      return Ref;
  })();
  var BHandler = (function () {
      function BHandler(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      BHandler.create = function (value0) {
          return function (value1) {
              return new BHandler(value0, value1);
          };
      };
      return BHandler;
  })();
  var updateProperty = Halogen_VDom_Util.updateProperty;
  var unsafeGetProperty = Halogen_VDom_Util.unsafeGetProp;
  var setProperty = Halogen_VDom_Util.unsafeSetProp;
  var removeProperty = function (key, el) {
      var v = Foreign.typeOf(Halogen_VDom_Util.unsafeGetProp(key, el));
      if (v === "string") {
          return Halogen_VDom_Util.removeProperty(key, "", el);
      };
      if (key === "rowSpan") {
          return Halogen_VDom_Util.unsafeSetAny(key, 1, el);
      };
      if (key === "colSpan") {
          return Halogen_VDom_Util.unsafeSetAny(key, 1, el);
      };
      return Halogen_VDom_Util.removeProperty(key, Halogen_VDom_Util.jsUndefined, el);
  };
  var propToStrKey = function (v) {
      if (v instanceof Attribute && v.value0 instanceof Data_Maybe.Just) {
          return "attr/" + (v.value0.value0 + (":" + v.value1));
      };
      if (v instanceof Attribute) {
          return "attr/:" + v.value1;
      };
      if (v instanceof Property) {
          return "prop/" + v.value0;
      };
      if (v instanceof Handler) {
          return "handler/" + v.value0;
      };
      if (v instanceof Ref) {
          return "ref";
      };
      if (v instanceof BHandler) {
          return "bhandler/" + v.value0;
      };
      throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 192, column 16 - line 198, column 37): " + [ v.constructor.name ]);
  };
  var propFromString = Unsafe_Coerce.unsafeCoerce;
  var propFromNumber = Unsafe_Coerce.unsafeCoerce;
  var propFromInt = Unsafe_Coerce.unsafeCoerce;
  var propFromBoolean = Unsafe_Coerce.unsafeCoerce;
  var addProperty = Halogen_VDom_Util.addProperty;
  var buildProp = function (emit) {
      return function (el) {
          var removeProp = function (prevEvents) {
              return function (v, v1) {
                  if (v1 instanceof Attribute) {
                      return Halogen_VDom_Util.removeAttribute(Data_Nullable.toNullable(v1.value0), v1.value1, el);
                  };
                  if (v1 instanceof Property) {
                      return removeProperty(v1.value0, el);
                  };
                  if (v1 instanceof Handler) {
                      var handler = Halogen_VDom_Util.unsafeLookup(v1.value0, prevEvents);
                      return Halogen_VDom_Util.removeEventListener(v1.value0, Data_Tuple.fst(handler), el);
                  };
                  if (v1 instanceof Ref) {
                      return Data_Unit.unit;
                  };
                  if (v1 instanceof BHandler) {
                      var v2 = Halogen_VDom_Util.cancelBehavior(v1.value0)();
                      return Data_Unit.unit;
                  };
                  throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 176, column 5 - line 189, column 19): " + [ v1.constructor.name ]);
              };
          };
          var mbEmit = function (v) {
              if (v instanceof Data_Maybe.Just) {
                  return emit(v.value0)();
              };
              return Data_Unit.unit;
          };
          var haltProp = function (state) {
              var v = Foreign_Object.lookup("ref")(state.props);
              if (v instanceof Data_Maybe.Just && v.value0 instanceof Ref) {
                  return mbEmit(v.value0.value0(new Removed(el)));
              };
              return Data_Unit.unit;
          };
          var diffProp = function (prevEvents, events) {
              return function (v, v1, v11, v2) {
                  if (v11 instanceof Attribute && v2 instanceof Attribute) {
                      var $66 = v11.value2 === v2.value2;
                      if ($66) {
                          return v2;
                      };
                      Halogen_VDom_Util.setAttribute(Data_Nullable.toNullable(v2.value0), v2.value1, v2.value2, el);
                      return v2;
                  };
                  if (v11 instanceof Property && v2 instanceof Property) {
                      var v4 = Halogen_VDom_Util.refEq(v11.value1, v2.value1);
                      if (v4) {
                          return v2;
                      };
                      if (v2.value0 === "value") {
                          var elVal = unsafeGetProperty("value", el);
                          var $75 = Halogen_VDom_Util.refEq(elVal, v2.value1);
                          if ($75) {
                              return v2;
                          };
                          updateProperty(v2.value0, v2.value1, el);
                          return v2;
                      };
                      updateProperty(v2.value0, v2.value1, el);
                      return v2;
                  };
                  if (v11 instanceof Handler && v2 instanceof Handler) {
                      var handler = Halogen_VDom_Util.unsafeLookup(v2.value0, prevEvents);
                      Effect_Ref.write(v2.value1)(Data_Tuple.snd(handler))();
                      Halogen_VDom_Util.pokeMutMap(v2.value0, handler, events);
                      return v2;
                  };
                  return v2;
              };
          };
          var applyProp = function (pr) {
              return function (events) {
                  return function (v, v1, v2) {
                      if (v2 instanceof Attribute) {
                          Halogen_VDom_Util.setAttribute(Data_Nullable.toNullable(v2.value0), v2.value1, v2.value2, el);
                          return v2;
                      };
                      if (v2 instanceof Property) {
                          (function () {
                              if (pr === "render") {
                                  return setProperty(v2.value0, v2.value1, el);
                              };
                              return addProperty(v2.value0, v2.value1, el);
                          })();
                          return v2;
                      };
                      if (v2 instanceof Handler) {
                          var v3 = Halogen_VDom_Util.unsafeGetAny(v2.value0, events);
                          if (Halogen_VDom_Util.unsafeHasAny(v2.value0, events)) {
                              Effect_Ref.write(v2.value1)(Data_Tuple.snd(v3))();
                              return v2;
                          };
                          var v4 = Effect_Ref["new"](v2.value1)();
                          var v5 = Web_Event_EventTarget.eventListener(function (ev) {
                              return function __do() {
                                  var v5 = Effect_Ref.read(v4)();
                                  return mbEmit(v5(ev));
                              };
                          })();
                          Halogen_VDom_Util.pokeMutMap(v2.value0, new Data_Tuple.Tuple(v5, v4), events);
                          Halogen_VDom_Util.addEventListener(pr, v2.value0, v5, el);
                          return v2;
                      };
                      if (v2 instanceof Ref) {
                          mbEmit(v2.value0(new Created(el)));
                          return v2;
                      };
                      if (v2 instanceof BHandler) {
                          mbEmit(v2.value1(Data_Unit.unit));
                          return v2;
                      };
                      throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 115, column 5 - line 142, column 16): " + [ v2.constructor.name ]);
                  };
              };
          };
          var patchProp = function (state, ps2) {
              var v = Halogen_VDom_Util.newMutMap();
              var onThis = removeProp(state.events);
              var onThese = diffProp(state.events, v);
              var onThat = applyProp("patch")(v);
              var v1 = Halogen_VDom_Util.diffPropWithKeyAndIxE(state.props, ps2, propToStrKey, onThese, onThis, onThat, el);
              var nextState = {
                  events: Halogen_VDom_Util.unsafeFreeze(v),
                  props: v1
              };
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Data_Unit.unit, nextState, patchProp, haltProp));
          };
          var renderProp = function (ps1) {
              var v = Halogen_VDom_Util.newMutMap();
              var v1 = Halogen_VDom_Util.strMapWithIxE(ps1, propToStrKey, applyProp("render")(v));
              var state = {
                  events: Halogen_VDom_Util.unsafeFreeze(v),
                  props: v1
              };
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Data_Unit.unit, state, patchProp, haltProp));
          };
          return renderProp;
      };
  };
  exports["Attribute"] = Attribute;
  exports["Property"] = Property;
  exports["Handler"] = Handler;
  exports["Ref"] = Ref;
  exports["BHandler"] = BHandler;
  exports["Created"] = Created;
  exports["Removed"] = Removed;
  exports["propFromString"] = propFromString;
  exports["propFromBoolean"] = propFromBoolean;
  exports["propFromInt"] = propFromInt;
  exports["propFromNumber"] = propFromNumber;
  exports["buildProp"] = buildProp;
})(PS["Halogen.VDom.DOM.Prop"] = PS["Halogen.VDom.DOM.Prop"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Effect = PS["Effect"];
  var Effect_Uncurried = PS["Effect.Uncurried"];
  var Halogen_VDom = PS["Halogen.VDom"];
  var Halogen_VDom_DOM = PS["Halogen.VDom.DOM"];
  var Halogen_VDom_Machine = PS["Halogen.VDom.Machine"];
  var Halogen_VDom_Util = PS["Halogen.VDom.Util"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Web_DOM_Node = PS["Web.DOM.Node"];                 
  var Thunk = (function () {
      function Thunk(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Thunk.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Thunk(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Thunk;
  })();                                          
  var unsafeEqThunk = function (v, v1) {
      return Halogen_VDom_Util.refEq(v.value0, v1.value0) && (Halogen_VDom_Util.refEq(v.value1, v1.value1) && Halogen_VDom_Util.refEq(v.value3, v1.value3));
  };
  var thunk = function (tid, eqFn, f, a) {
      return new Thunk(tid, eqFn, f, a);
  };
  var runThunk = function (v) {
      return v.value2(v.value3);
  };
  var buildThunk = function (toVDom) {
      var haltThunk = function (state) {
          return Halogen_VDom_Machine.halt(state.vdom);
      };
      var patchThunk = function (state, t2) {
          var $45 = unsafeEqThunk(state.thunk, t2);
          if ($45) {
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(state.vdom), state, patchThunk, haltThunk));
          };
          var v = Halogen_VDom_Machine.step(state.vdom, toVDom(runThunk(t2)));
          return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(v), {
              vdom: v,
              thunk: t2
          }, patchThunk, haltThunk));
      };
      var renderThunk = function (spec) {
          return function (t) {
              var v = Halogen_VDom_DOM.buildVDom(spec)(toVDom(runThunk(t)));
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(v), {
                  thunk: t,
                  vdom: v
              }, patchThunk, haltThunk));
          };
      };
      return renderThunk;
  };
  exports["Thunk"] = Thunk;
  exports["buildThunk"] = buildThunk;
  exports["runThunk"] = runThunk;
  exports["unsafeEqThunk"] = unsafeEqThunk;
})(PS["Halogen.VDom.Thunk"] = PS["Halogen.VDom.Thunk"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var $foreign = PS["PrestoDOM.Types.DomAttributes"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];                 
  var VISIBLE = (function () {
      function VISIBLE() {

      };
      VISIBLE.value = new VISIBLE();
      return VISIBLE;
  })();
  var INVISIBLE = (function () {
      function INVISIBLE() {

      };
      INVISIBLE.value = new INVISIBLE();
      return INVISIBLE;
  })();
  var GONE = (function () {
      function GONE() {

      };
      GONE.value = new GONE();
      return GONE;
  })();
  var NORMAL = (function () {
      function NORMAL() {

      };
      NORMAL.value = new NORMAL();
      return NORMAL;
  })();
  var BOLD = (function () {
      function BOLD() {

      };
      BOLD.value = new BOLD();
      return BOLD;
  })();
  var ITALIC = (function () {
      function ITALIC() {

      };
      ITALIC.value = new ITALIC();
      return ITALIC;
  })();
  var BOLD_ITALIC = (function () {
      function BOLD_ITALIC() {

      };
      BOLD_ITALIC.value = new BOLD_ITALIC();
      return BOLD_ITALIC;
  })();
  var Padding = (function () {
      function Padding(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Padding.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Padding(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Padding;
  })();
  var PaddingBottom = (function () {
      function PaddingBottom(value0) {
          this.value0 = value0;
      };
      PaddingBottom.create = function (value0) {
          return new PaddingBottom(value0);
      };
      return PaddingBottom;
  })();
  var PaddingHorizontal = (function () {
      function PaddingHorizontal(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      PaddingHorizontal.create = function (value0) {
          return function (value1) {
              return new PaddingHorizontal(value0, value1);
          };
      };
      return PaddingHorizontal;
  })();
  var PaddingLeft = (function () {
      function PaddingLeft(value0) {
          this.value0 = value0;
      };
      PaddingLeft.create = function (value0) {
          return new PaddingLeft(value0);
      };
      return PaddingLeft;
  })();
  var PaddingRight = (function () {
      function PaddingRight(value0) {
          this.value0 = value0;
      };
      PaddingRight.create = function (value0) {
          return new PaddingRight(value0);
      };
      return PaddingRight;
  })();
  var PaddingTop = (function () {
      function PaddingTop(value0) {
          this.value0 = value0;
      };
      PaddingTop.create = function (value0) {
          return new PaddingTop(value0);
      };
      return PaddingTop;
  })();
  var PaddingVertical = (function () {
      function PaddingVertical(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      PaddingVertical.create = function (value0) {
          return function (value1) {
              return new PaddingVertical(value0, value1);
          };
      };
      return PaddingVertical;
  })();
  var HORIZONTAL = (function () {
      function HORIZONTAL() {

      };
      HORIZONTAL.value = new HORIZONTAL();
      return HORIZONTAL;
  })();
  var VERTICAL = (function () {
      function VERTICAL() {

      };
      VERTICAL.value = new VERTICAL();
      return VERTICAL;
  })();
  var Margin = (function () {
      function Margin(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Margin.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Margin(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Margin;
  })();
  var MarginBottom = (function () {
      function MarginBottom(value0) {
          this.value0 = value0;
      };
      MarginBottom.create = function (value0) {
          return new MarginBottom(value0);
      };
      return MarginBottom;
  })();
  var MarginHorizontal = (function () {
      function MarginHorizontal(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      MarginHorizontal.create = function (value0) {
          return function (value1) {
              return new MarginHorizontal(value0, value1);
          };
      };
      return MarginHorizontal;
  })();
  var MarginLeft = (function () {
      function MarginLeft(value0) {
          this.value0 = value0;
      };
      MarginLeft.create = function (value0) {
          return new MarginLeft(value0);
      };
      return MarginLeft;
  })();
  var MarginRight = (function () {
      function MarginRight(value0) {
          this.value0 = value0;
      };
      MarginRight.create = function (value0) {
          return new MarginRight(value0);
      };
      return MarginRight;
  })();
  var MarginTop = (function () {
      function MarginTop(value0) {
          this.value0 = value0;
      };
      MarginTop.create = function (value0) {
          return new MarginTop(value0);
      };
      return MarginTop;
  })();
  var MarginVertical = (function () {
      function MarginVertical(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      MarginVertical.create = function (value0) {
          return function (value1) {
              return new MarginVertical(value0, value1);
          };
      };
      return MarginVertical;
  })();
  var MATCH_PARENT = (function () {
      function MATCH_PARENT() {

      };
      MATCH_PARENT.value = new MATCH_PARENT();
      return MATCH_PARENT;
  })();
  var WRAP_CONTENT = (function () {
      function WRAP_CONTENT() {

      };
      WRAP_CONTENT.value = new WRAP_CONTENT();
      return WRAP_CONTENT;
  })();
  var V = (function () {
      function V(value0) {
          this.value0 = value0;
      };
      V.create = function (value0) {
          return new V(value0);
      };
      return V;
  })();
  var Password = (function () {
      function Password() {

      };
      Password.value = new Password();
      return Password;
  })();
  var Numeric = (function () {
      function Numeric() {

      };
      Numeric.value = new Numeric();
      return Numeric;
  })();
  var NumericPassword = (function () {
      function NumericPassword() {

      };
      NumericPassword.value = new NumericPassword();
      return NumericPassword;
  })();
  var Disabled = (function () {
      function Disabled() {

      };
      Disabled.value = new Disabled();
      return Disabled;
  })();
  var TypeText = (function () {
      function TypeText() {

      };
      TypeText.value = new TypeText();
      return TypeText;
  })();
  var CENTER_HORIZONTAL = (function () {
      function CENTER_HORIZONTAL() {

      };
      CENTER_HORIZONTAL.value = new CENTER_HORIZONTAL();
      return CENTER_HORIZONTAL;
  })();
  var CENTER_VERTICAL = (function () {
      function CENTER_VERTICAL() {

      };
      CENTER_VERTICAL.value = new CENTER_VERTICAL();
      return CENTER_VERTICAL;
  })();
  var LEFT = (function () {
      function LEFT() {

      };
      LEFT.value = new LEFT();
      return LEFT;
  })();
  var RIGHT = (function () {
      function RIGHT() {

      };
      RIGHT.value = new RIGHT();
      return RIGHT;
  })();
  var CENTER = (function () {
      function CENTER() {

      };
      CENTER.value = new CENTER();
      return CENTER;
  })();
  var BOTTOM = (function () {
      function BOTTOM() {

      };
      BOTTOM.value = new BOTTOM();
      return BOTTOM;
  })();
  var TOP_VERTICAL = (function () {
      function TOP_VERTICAL() {

      };
      TOP_VERTICAL.value = new TOP_VERTICAL();
      return TOP_VERTICAL;
  })();
  var START = (function () {
      function START() {

      };
      START.value = new START();
      return START;
  })();
  var END = (function () {
      function END() {

      };
      END.value = new END();
      return END;
  })();
  var renderVisibility = function (v) {
      if (v instanceof VISIBLE) {
          return "visible";
      };
      if (v instanceof INVISIBLE) {
          return "invisible";
      };
      if (v instanceof GONE) {
          return "gone";
      };
      throw new Error("Failed pattern match at PrestoDOM.Types.DomAttributes (line 172, column 20 - line 178, column 1): " + [ v.constructor.name ]);
  };
  var renderTypeface = function (v) {
      if (v instanceof NORMAL) {
          return "normal";
      };
      if (v instanceof BOLD) {
          return "bold";
      };
      if (v instanceof ITALIC) {
          return "italic";
      };
      if (v instanceof BOLD_ITALIC) {
          return "bold_italic";
      };
      throw new Error("Failed pattern match at PrestoDOM.Types.DomAttributes (line 152, column 18 - line 159, column 1): " + [ v.constructor.name ]);
  };
  var renderPadding = function (v) {
      if (v instanceof Padding) {
          return Data_Show.show(Data_Show.showInt)(v.value0) + ("," + (Data_Show.show(Data_Show.showInt)(v.value1) + ("," + (Data_Show.show(Data_Show.showInt)(v.value2) + ("," + Data_Show.show(Data_Show.showInt)(v.value3))))));
      };
      if (v instanceof PaddingBottom) {
          return "0" + ("," + ("0" + ("," + ("0" + ("," + Data_Show.show(Data_Show.showInt)(v.value0))))));
      };
      if (v instanceof PaddingHorizontal) {
          return Data_Show.show(Data_Show.showInt)(v.value0) + ("," + ("0" + ("," + (Data_Show.show(Data_Show.showInt)(v.value1) + ("," + "0")))));
      };
      if (v instanceof PaddingLeft) {
          return Data_Show.show(Data_Show.showInt)(v.value0) + ("," + ("0" + ("," + ("0" + ("," + "0")))));
      };
      if (v instanceof PaddingRight) {
          return "0" + ("," + ("0" + ("," + (Data_Show.show(Data_Show.showInt)(v.value0) + ("," + "0")))));
      };
      if (v instanceof PaddingTop) {
          return "0" + ("," + (Data_Show.show(Data_Show.showInt)(v.value0) + ("," + ("0" + ("," + "0")))));
      };
      if (v instanceof PaddingVertical) {
          return "0" + ("," + (Data_Show.show(Data_Show.showInt)(v.value0) + ("," + ("0" + ("," + Data_Show.show(Data_Show.showInt)(v.value1))))));
      };
      throw new Error("Failed pattern match at PrestoDOM.Types.DomAttributes (line 86, column 17 - line 93, column 87): " + [ v.constructor.name ]);
  };
  var renderOrientation = function (v) {
      if (v instanceof HORIZONTAL) {
          return "horizontal";
      };
      if (v instanceof VERTICAL) {
          return "vertical";
      };
      throw new Error("Failed pattern match at PrestoDOM.Types.DomAttributes (line 133, column 21 - line 138, column 1): " + [ v.constructor.name ]);
  };
  var renderMargin = function (v) {
      if (v instanceof Margin) {
          return Data_Show.show(Data_Show.showInt)(v.value0) + ("," + (Data_Show.show(Data_Show.showInt)(v.value1) + ("," + (Data_Show.show(Data_Show.showInt)(v.value2) + ("," + Data_Show.show(Data_Show.showInt)(v.value3))))));
      };
      if (v instanceof MarginBottom) {
          return "0" + ("," + ("0" + ("," + ("0" + ("," + Data_Show.show(Data_Show.showInt)(v.value0))))));
      };
      if (v instanceof MarginHorizontal) {
          return Data_Show.show(Data_Show.showInt)(v.value0) + ("," + ("0" + ("," + (Data_Show.show(Data_Show.showInt)(v.value1) + ("," + "0")))));
      };
      if (v instanceof MarginLeft) {
          return Data_Show.show(Data_Show.showInt)(v.value0) + ("," + ("0" + ("," + ("0" + ("," + "0")))));
      };
      if (v instanceof MarginRight) {
          return "0" + ("," + ("0" + ("," + (Data_Show.show(Data_Show.showInt)(v.value0) + ("," + "0")))));
      };
      if (v instanceof MarginTop) {
          return "0" + ("," + (Data_Show.show(Data_Show.showInt)(v.value0) + ("," + ("0" + ("," + "0")))));
      };
      if (v instanceof MarginVertical) {
          return "0" + ("," + (Data_Show.show(Data_Show.showInt)(v.value0) + ("," + ("0" + ("," + Data_Show.show(Data_Show.showInt)(v.value1))))));
      };
      throw new Error("Failed pattern match at PrestoDOM.Types.DomAttributes (line 59, column 16 - line 66, column 86): " + [ v.constructor.name ]);
  };
  var renderLength = function (v) {
      if (v instanceof MATCH_PARENT) {
          return "match_parent";
      };
      if (v instanceof WRAP_CONTENT) {
          return "wrap_content";
      };
      if (v instanceof V) {
          return Data_Show.show(Data_Show.showInt)(v.value0);
      };
      throw new Error("Failed pattern match at PrestoDOM.Types.DomAttributes (line 36, column 16 - line 39, column 18): " + [ v.constructor.name ]);
  };
  var renderInputType = function (v) {
      if (v instanceof Password) {
          return "password";
      };
      if (v instanceof Numeric) {
          return "numeric";
      };
      if (v instanceof NumericPassword) {
          return "numericPassword";
      };
      if (v instanceof Disabled) {
          return "disabled";
      };
      if (v instanceof TypeText) {
          return "text";
      };
      throw new Error("Failed pattern match at PrestoDOM.Types.DomAttributes (line 114, column 19 - line 123, column 1): " + [ v.constructor.name ]);
  };
  var renderGravity = function (v) {
      if (v instanceof CENTER_HORIZONTAL) {
          return "center_horizontal";
      };
      if (v instanceof CENTER_VERTICAL) {
          return "center_vertical";
      };
      if (v instanceof LEFT) {
          return "left";
      };
      if (v instanceof RIGHT) {
          return "right";
      };
      if (v instanceof BOTTOM) {
          return "bottom";
      };
      if (v instanceof CENTER) {
          return "center";
      };
      if (v instanceof TOP_VERTICAL) {
          return "top_vertical";
      };
      if (v instanceof START) {
          return "start";
      };
      if (v instanceof END) {
          return "end";
      };
      throw new Error("Failed pattern match at PrestoDOM.Types.DomAttributes (line 201, column 17 - line 212, column 1): " + [ v.constructor.name ]);
  };
  exports["CENTER_HORIZONTAL"] = CENTER_HORIZONTAL;
  exports["CENTER_VERTICAL"] = CENTER_VERTICAL;
  exports["LEFT"] = LEFT;
  exports["RIGHT"] = RIGHT;
  exports["CENTER"] = CENTER;
  exports["BOTTOM"] = BOTTOM;
  exports["TOP_VERTICAL"] = TOP_VERTICAL;
  exports["START"] = START;
  exports["END"] = END;
  exports["Password"] = Password;
  exports["Numeric"] = Numeric;
  exports["NumericPassword"] = NumericPassword;
  exports["Disabled"] = Disabled;
  exports["TypeText"] = TypeText;
  exports["MATCH_PARENT"] = MATCH_PARENT;
  exports["WRAP_CONTENT"] = WRAP_CONTENT;
  exports["V"] = V;
  exports["HORIZONTAL"] = HORIZONTAL;
  exports["VERTICAL"] = VERTICAL;
  exports["NORMAL"] = NORMAL;
  exports["BOLD"] = BOLD;
  exports["ITALIC"] = ITALIC;
  exports["BOLD_ITALIC"] = BOLD_ITALIC;
  exports["VISIBLE"] = VISIBLE;
  exports["INVISIBLE"] = INVISIBLE;
  exports["GONE"] = GONE;
  exports["Padding"] = Padding;
  exports["PaddingBottom"] = PaddingBottom;
  exports["PaddingHorizontal"] = PaddingHorizontal;
  exports["PaddingLeft"] = PaddingLeft;
  exports["PaddingRight"] = PaddingRight;
  exports["PaddingTop"] = PaddingTop;
  exports["PaddingVertical"] = PaddingVertical;
  exports["Margin"] = Margin;
  exports["MarginBottom"] = MarginBottom;
  exports["MarginHorizontal"] = MarginHorizontal;
  exports["MarginLeft"] = MarginLeft;
  exports["MarginRight"] = MarginRight;
  exports["MarginTop"] = MarginTop;
  exports["MarginVertical"] = MarginVertical;
  exports["renderMargin"] = renderMargin;
  exports["renderPadding"] = renderPadding;
  exports["renderGravity"] = renderGravity;
  exports["renderInputType"] = renderInputType;
  exports["renderLength"] = renderLength;
  exports["renderOrientation"] = renderOrientation;
  exports["renderTypeface"] = renderTypeface;
  exports["renderVisibility"] = renderVisibility;
})(PS["PrestoDOM.Types.DomAttributes"] = PS["PrestoDOM.Types.DomAttributes"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Tuple = PS["Data.Tuple"];
  var Effect = PS["Effect"];
  var Global_Unsafe = PS["Global.Unsafe"];
  var Halogen_VDom_DOM_Prop = PS["Halogen.VDom.DOM.Prop"];
  var Halogen_VDom_Thunk = PS["Halogen.VDom.Thunk"];
  var Halogen_VDom_Types = PS["Halogen.VDom.Types"];
  var Prelude = PS["Prelude"];
  var PrestoDOM_Types_DomAttributes = PS["PrestoDOM.Types.DomAttributes"];
  var PrestoWidget = function (x) {
      return x;
  };   
  var IsProp = function (toPropValue) {
      this.toPropValue = toPropValue;
  };
  var visibilityIsProp = new IsProp(function ($6) {
      return Halogen_VDom_DOM_Prop.propFromString(PrestoDOM_Types_DomAttributes.renderVisibility($6));
  });
  var typefaceIsProp = new IsProp(function ($7) {
      return Halogen_VDom_DOM_Prop.propFromString(PrestoDOM_Types_DomAttributes.renderTypeface($7));
  });
  var toPropValue = function (dict) {
      return dict.toPropValue;
  };
  var stringIsProp = new IsProp(Halogen_VDom_DOM_Prop.propFromString);
  var paddingIsProp = new IsProp(function ($10) {
      return Halogen_VDom_DOM_Prop.propFromString(PrestoDOM_Types_DomAttributes.renderPadding($10));
  });
  var orientationIsProp = new IsProp(function ($11) {
      return Halogen_VDom_DOM_Prop.propFromString(PrestoDOM_Types_DomAttributes.renderOrientation($11));
  });
  var numberIsProp = new IsProp(Halogen_VDom_DOM_Prop.propFromNumber);
  var newtypePrestoWidget = new Data_Newtype.Newtype(function (n) {
      return n;
  }, PrestoWidget);
  var marginIsProp = new IsProp(function ($12) {
      return Halogen_VDom_DOM_Prop.propFromString(PrestoDOM_Types_DomAttributes.renderMargin($12));
  });
  var lengthIsProp = new IsProp(function ($13) {
      return Halogen_VDom_DOM_Prop.propFromString(PrestoDOM_Types_DomAttributes.renderLength($13));
  });
  var intIsProp = new IsProp(Halogen_VDom_DOM_Prop.propFromInt);
  var inputTypeIsProp = new IsProp(function ($14) {
      return Halogen_VDom_DOM_Prop.propFromString(PrestoDOM_Types_DomAttributes.renderInputType($14));
  });
  var gravityIsProp = new IsProp(function ($15) {
      return Halogen_VDom_DOM_Prop.propFromString(PrestoDOM_Types_DomAttributes.renderGravity($15));
  });
  var booleanIsProp = new IsProp(Halogen_VDom_DOM_Prop.propFromBoolean);
  exports["toPropValue"] = toPropValue;
  exports["PrestoWidget"] = PrestoWidget;
  exports["IsProp"] = IsProp;
  exports["newtypePrestoWidget"] = newtypePrestoWidget;
  exports["stringIsProp"] = stringIsProp;
  exports["intIsProp"] = intIsProp;
  exports["numberIsProp"] = numberIsProp;
  exports["booleanIsProp"] = booleanIsProp;
  exports["lengthIsProp"] = lengthIsProp;
  exports["inputTypeIsProp"] = inputTypeIsProp;
  exports["orientationIsProp"] = orientationIsProp;
  exports["typefaceIsProp"] = typefaceIsProp;
  exports["visibilityIsProp"] = visibilityIsProp;
  exports["gravityIsProp"] = gravityIsProp;
  exports["marginIsProp"] = marginIsProp;
  exports["paddingIsProp"] = paddingIsProp;
})(PS["PrestoDOM.Types.Core"] = PS["PrestoDOM.Types.Core"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var $foreign = PS["PrestoDOM.Utils"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];
  var PrestoDOM_Types_Core = PS["PrestoDOM.Types.Core"];
  var exit = function ($1) {
      return Data_Either.Left.create(Data_Tuple.Tuple.create(Data_Maybe.Nothing.value)($1));
  };
  var $$continue = function (state) {
      return new Data_Either.Right(new Data_Tuple.Tuple(state, [  ]));
  };
  exports["continue"] = $$continue;
  exports["exit"] = exit;
})(PS["PrestoDOM.Utils"] = PS["PrestoDOM.Utils"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var $foreign = PS["PrestoDOM.Core"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Effect = PS["Effect"];
  var Effect_Aff = PS["Effect.Aff"];
  var Effect_Uncurried = PS["Effect.Uncurried"];
  var FRP_Behavior = PS["FRP.Behavior"];
  var FRP_Event = PS["FRP.Event"];
  var Foreign_Object = PS["Foreign.Object"];
  var Halogen_VDom = PS["Halogen.VDom"];
  var Halogen_VDom_DOM = PS["Halogen.VDom.DOM"];
  var Halogen_VDom_DOM_Prop = PS["Halogen.VDom.DOM.Prop"];
  var Halogen_VDom_Machine = PS["Halogen.VDom.Machine"];
  var Halogen_VDom_Thunk = PS["Halogen.VDom.Thunk"];
  var Halogen_VDom_Types = PS["Halogen.VDom.Types"];
  var Prelude = PS["Prelude"];
  var PrestoDOM_Types_Core = PS["PrestoDOM.Types.Core"];
  var PrestoDOM_Utils = PS["PrestoDOM.Utils"];
  var Web_DOM_Document = PS["Web.DOM.Document"];                 
  var spec = function (document) {
      return {
          buildWidget: Halogen_VDom_Thunk.buildThunk(Data_Newtype.un(PrestoDOM_Types_Core.newtypePrestoWidget)(PrestoDOM_Types_Core.PrestoWidget)),
          buildAttributes: Halogen_VDom_DOM_Prop.buildProp(Control_Category.identity(Control_Category.categoryFn)),
          document: document
      };
  };
  var initUI = function (cb) {
      var view = new Halogen_VDom_Types.Elem(Data_Maybe.Nothing.value, "linearLayout", [  ], [  ]);
      return function __do() {
          var v = $foreign.setRootNode(Data_Maybe.Nothing.value);
          var v1 = Halogen_VDom_DOM.buildVDom(spec(v))(view);
          $foreign.insertDom(v, Halogen_VDom_Machine.extract(v1));
          cb(new Data_Either.Right(Data_Unit.unit))();
          return Effect_Aff.nonCanceler;
      };
  };
  var getScreenName = function (v) {
      if (v instanceof Halogen_VDom_Types.Elem) {
          return Control_Applicative.pure(Effect.applicativeEffect)(v.value0);
      };
      return Control_Applicative.pure(Effect.applicativeEffect)(Data_Maybe.Nothing.value);
  };
  var patchAndRun = function (myDom) {
      return function __do() {
          var v = getScreenName(myDom)();
          var v1 = $foreign.getLatestMachine(v);
          var v2 = Halogen_VDom_Machine.step(v1, myDom);
          return $foreign.storeMachine(v2, v);
      };
  };
  var compareScreen = function (screen) {
      return function __do() {
          var v = $foreign.saveScreenNameImpl(screen);
          return v;
      };
  };
  var checkCachedScreen = function (screen) {
      return function __do() {
          var v = $foreign.cacheScreenImpl(screen);
          return v;
      };
  };
  var runScreenImpl = function (cache) {
      return function (v) {
          return function (cb) {
              var onStateChange = function (push) {
                  return function (v1) {
                      return Control_Apply.applySecond(Effect.applyEffect)(patchAndRun(v.view(push)(v1.value0)))(Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableArray)(v1.value1)(function (effAction) {
                          return Control_Bind.bind(Effect.bindEffect)(effAction)(push);
                      }));
                  };
              };
              var onExit = function (push) {
                  return function (v1) {
                      if (v1.value0 instanceof Data_Maybe.Just) {
                          return Control_Apply.applySecond(Effect.applyEffect)(patchAndRun(v.view(push)(v1.value0.value0)))(cb(new Data_Either.Right(v1.value1)));
                      };
                      if (v1.value0 instanceof Data_Maybe.Nothing) {
                          return cb(new Data_Either.Right(v1.value1));
                      };
                      throw new Error("Failed pattern match at PrestoDOM.Core (line 158, column 15 - line 160, column 45): " + [ v1.value0.constructor.name ]);
                  };
              };
              return function __do() {
                  var v1 = FRP_Event.create();
                  var myDom = v.view(v1.push)(v.initialState);
                  var v2 = getScreenName(myDom)();
                  var v3 = (function () {
                      if (cache) {
                          return checkCachedScreen(v2)();
                      };
                      return compareScreen(v2)();
                  })();
                  (function () {
                      if (!v3) {
                          var v4 = $foreign.getRootNode();
                          var v5 = Halogen_VDom_DOM.buildVDom(spec(v4))(myDom);
                          $foreign.storeMachine(v5, v2);
                          (function () {
                              if (cache) {
                                  return $foreign.updateDom(v4, Halogen_VDom_Machine.extract(v5));
                              };
                              return $foreign.insertDom(v4, Halogen_VDom_Machine.extract(v5));
                          })();
                          return $foreign.processWidget();
                      };
                      if (v3) {
                          return patchAndRun(myDom)();
                      };
                      throw new Error("Failed pattern match at PrestoDOM.Core (line 137, column 3 - line 147, column 26): " + [ v3.constructor.name ]);
                  })();
                  var stateBeh = FRP_Behavior.unfold(FRP_Event.eventIsEvent)(function (action) {
                      return function (eitherState) {
                          return Control_Bind.bind(Data_Either.bindEither)(eitherState)(function ($72) {
                              return v["eval"](action)(Data_Tuple.fst($72));
                          });
                      };
                  })(v1.event)(PrestoDOM_Utils["continue"](v.initialState));
                  var v4 = FRP_Event.subscribe(FRP_Behavior.sample_(FRP_Event.eventIsEvent)(stateBeh)(v1.event))(Data_Either.either(onExit(v1.push))(onStateChange(v1.push)))();
                  return Effect_Aff.nonCanceler;
              };
          };
      };
  };                                   
  var showScreen = runScreenImpl(true);
  exports["showScreen"] = showScreen;
  exports["initUI"] = initUI;
})(PS["PrestoDOM.Core"] = PS["PrestoDOM.Core"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Monad_Free = PS["Control.Monad.Free"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Exists = PS["Data.Exists"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Show = PS["Data.Show"];
  var Data_Time_Duration = PS["Data.Time.Duration"];
  var Data_Unit = PS["Data.Unit"];
  var Effect_Aff = PS["Effect.Aff"];
  var Effect_Aff_AVar = PS["Effect.Aff.AVar"];
  var Effect_Exception = PS["Effect.Exception"];
  var Foreign_Class = PS["Foreign.Class"];
  var Prelude = PS["Prelude"];
  var Presto_Core_Types_API = PS["Presto.Core.Types.API"];
  var Presto_Core_Types_Language_APIInteract = PS["Presto.Core.Types.Language.APIInteract"];
  var Presto_Core_Types_Language_Interaction = PS["Presto.Core.Types.Language.Interaction"];
  var Presto_Core_Types_Language_Storage = PS["Presto.Core.Types.Language.Storage"];
  var Presto_Core_Types_Permission = PS["Presto.Core.Types.Permission"];
  var PrestoDOM_Core = PS["PrestoDOM.Core"];
  var PrestoDOM_Types_Core = PS["PrestoDOM.Types.Core"];                 
  var LocalStore = (function () {
      function LocalStore() {

      };
      LocalStore.value = new LocalStore();
      return LocalStore;
  })();
  var InMemoryStore = (function () {
      function InMemoryStore() {

      };
      InMemoryStore.value = new InMemoryStore();
      return InMemoryStore;
  })();
  var ThrowError = (function () {
      function ThrowError(value0) {
          this.value0 = value0;
      };
      ThrowError.create = function (value0) {
          return new ThrowError(value0);
      };
      return ThrowError;
  })();
  var ReturnResult = (function () {
      function ReturnResult(value0) {
          this.value0 = value0;
      };
      ReturnResult.create = function (value0) {
          return new ReturnResult(value0);
      };
      return ReturnResult;
  })();
  var RunUI = (function () {
      function RunUI(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      RunUI.create = function (value0) {
          return function (value1) {
              return new RunUI(value0, value1);
          };
      };
      return RunUI;
  })();
  var ForkUI = (function () {
      function ForkUI(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ForkUI.create = function (value0) {
          return function (value1) {
              return new ForkUI(value0, value1);
          };
      };
      return ForkUI;
  })();
  var CallAPI = (function () {
      function CallAPI(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      CallAPI.create = function (value0) {
          return function (value1) {
              return new CallAPI(value0, value1);
          };
      };
      return CallAPI;
  })();
  var Get = (function () {
      function Get(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      Get.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new Get(value0, value1, value2);
              };
          };
      };
      return Get;
  })();
  var $$Set = (function () {
      function $$Set(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      $$Set.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new $$Set(value0, value1, value2, value3);
                  };
              };
          };
      };
      return $$Set;
  })();
  var Fork = (function () {
      function Fork(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Fork.create = function (value0) {
          return function (value1) {
              return new Fork(value0, value1);
          };
      };
      return Fork;
  })();
  var DoAff = (function () {
      function DoAff(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      DoAff.create = function (value0) {
          return function (value1) {
              return new DoAff(value0, value1);
          };
      };
      return DoAff;
  })();
  var Await = (function () {
      function Await(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Await.create = function (value0) {
          return function (value1) {
              return new Await(value0, value1);
          };
      };
      return Await;
  })();
  var Delay = (function () {
      function Delay(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Delay.create = function (value0) {
          return function (value1) {
              return new Delay(value0, value1);
          };
      };
      return Delay;
  })();
  var OneOf = (function () {
      function OneOf(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      OneOf.create = function (value0) {
          return function (value1) {
              return new OneOf(value0, value1);
          };
      };
      return OneOf;
  })();
  var HandleError = (function () {
      function HandleError(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      HandleError.create = function (value0) {
          return function (value1) {
              return new HandleError(value0, value1);
          };
      };
      return HandleError;
  })();
  var CheckPermissions = (function () {
      function CheckPermissions(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      CheckPermissions.create = function (value0) {
          return function (value1) {
              return new CheckPermissions(value0, value1);
          };
      };
      return CheckPermissions;
  })();
  var TakePermissions = (function () {
      function TakePermissions(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      TakePermissions.create = function (value0) {
          return function (value1) {
              return new TakePermissions(value0, value1);
          };
      };
      return TakePermissions;
  })();
  var InitUIWithScreen = (function () {
      function InitUIWithScreen(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      InitUIWithScreen.create = function (value0) {
          return function (value1) {
              return new InitUIWithScreen(value0, value1);
          };
      };
      return InitUIWithScreen;
  })();
  var InitUI = (function () {
      function InitUI(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      InitUI.create = function (value0) {
          return function (value1) {
              return new InitUI(value0, value1);
          };
      };
      return InitUI;
  })();
  var RunScreen = (function () {
      function RunScreen(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      RunScreen.create = function (value0) {
          return function (value1) {
              return new RunScreen(value0, value1);
          };
      };
      return RunScreen;
  })();
  var ShowScreen = (function () {
      function ShowScreen(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ShowScreen.create = function (value0) {
          return function (value1) {
              return new ShowScreen(value0, value1);
          };
      };
      return ShowScreen;
  })();
  var FlowWrapper = function (x) {
      return x;
  };
  var wrap = function ($17) {
      return Control_Monad_Free.liftF(FlowWrapper(Data_Exists.mkExists($17)));
  };                                                                  
  var showScreen = function (screen) {
      return wrap(new ShowScreen(Effect_Aff.makeAff(function (cb) {
          return PrestoDOM_Core.showScreen(screen)(cb);
      }), Control_Category.identity(Control_Category.categoryFn)));
  };
  var oneOf = function (flows) {
      return wrap(new OneOf(flows, Control_Category.identity(Control_Category.categoryFn)));
  };
  var initUI = wrap(new InitUI(Effect_Aff.makeAff(function (cb) {
      return PrestoDOM_Core.initUI(cb);
  }), Control_Category.identity(Control_Category.categoryFn)));
  var doAff = function (aff) {
      return wrap(new DoAff(aff, Control_Category.identity(Control_Category.categoryFn)));
  };
  exports["LocalStore"] = LocalStore;
  exports["InMemoryStore"] = InMemoryStore;
  exports["ThrowError"] = ThrowError;
  exports["ReturnResult"] = ReturnResult;
  exports["RunUI"] = RunUI;
  exports["ForkUI"] = ForkUI;
  exports["CallAPI"] = CallAPI;
  exports["Get"] = Get;
  exports["Set"] = $$Set;
  exports["Fork"] = Fork;
  exports["DoAff"] = DoAff;
  exports["Await"] = Await;
  exports["Delay"] = Delay;
  exports["OneOf"] = OneOf;
  exports["HandleError"] = HandleError;
  exports["CheckPermissions"] = CheckPermissions;
  exports["TakePermissions"] = TakePermissions;
  exports["InitUIWithScreen"] = InitUIWithScreen;
  exports["InitUI"] = InitUI;
  exports["RunScreen"] = RunScreen;
  exports["ShowScreen"] = ShowScreen;
  exports["FlowWrapper"] = FlowWrapper;
  exports["wrap"] = wrap;
  exports["doAff"] = doAff;
  exports["initUI"] = initUI;
  exports["showScreen"] = showScreen;
  exports["oneOf"] = oneOf;
})(PS["Presto.Core.Types.Language.Flow"] = PS["Presto.Core.Types.Language.Flow"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Halogen_VDom_DOM_Prop = PS["Halogen.VDom.DOM.Prop"];
  var Prelude = PS["Prelude"];
  var PrestoDOM_Types_Core = PS["PrestoDOM.Types.Core"];                 
  var prop = function (dictIsProp) {
      return function (v) {
          return function ($3) {
              return Halogen_VDom_DOM_Prop.Property.create(v)(PrestoDOM_Types_Core.toPropValue(dictIsProp)($3));
          };
      };
  };                                                                      
  var singleLine = prop(PrestoDOM_Types_Core.booleanIsProp)("singleLine");
  var stroke = prop(PrestoDOM_Types_Core.stringIsProp)("stroke");              
  var text = prop(PrestoDOM_Types_Core.stringIsProp)("text");
  var textAllCaps = prop(PrestoDOM_Types_Core.booleanIsProp)("textAllCaps");          
  var textSize = prop(PrestoDOM_Types_Core.intIsProp)("textSize");           
  var translationY = prop(PrestoDOM_Types_Core.numberIsProp)("translationY");
  var translationZ = prop(PrestoDOM_Types_Core.numberIsProp)("translationZ");
  var typeface = prop(PrestoDOM_Types_Core.typefaceIsProp)("typeface");
  var visibility = prop(PrestoDOM_Types_Core.visibilityIsProp)("visibility");
  var weight = prop(PrestoDOM_Types_Core.numberIsProp)("weight");
  var width = prop(PrestoDOM_Types_Core.lengthIsProp)("width");    
  var padding = prop(PrestoDOM_Types_Core.paddingIsProp)("padding");
  var orientation = prop(PrestoDOM_Types_Core.orientationIsProp)("orientation");
  var margin = prop(PrestoDOM_Types_Core.marginIsProp)("margin");
  var lineHeight = prop(PrestoDOM_Types_Core.stringIsProp)("lineHeight");
  var inputType = prop(PrestoDOM_Types_Core.inputTypeIsProp)("inputType");
  var imageUrl = prop(PrestoDOM_Types_Core.stringIsProp)("imageUrl");
  var hintColor = prop(PrestoDOM_Types_Core.stringIsProp)("hintColor");
  var hint = prop(PrestoDOM_Types_Core.stringIsProp)("hint");
  var height = prop(PrestoDOM_Types_Core.lengthIsProp)("height");    
  var gravity = prop(PrestoDOM_Types_Core.gravityIsProp)("gravity");      
  var fontStyle = prop(PrestoDOM_Types_Core.stringIsProp)("fontStyle");
  var cornerRadius = prop(PrestoDOM_Types_Core.numberIsProp)("cornerRadius");
  var color = prop(PrestoDOM_Types_Core.stringIsProp)("color");                    
  var background = prop(PrestoDOM_Types_Core.stringIsProp)("background");
  var alpha = prop(PrestoDOM_Types_Core.numberIsProp)("alpha");
  exports["prop"] = prop;
  exports["alpha"] = alpha;
  exports["background"] = background;
  exports["color"] = color;
  exports["cornerRadius"] = cornerRadius;
  exports["fontStyle"] = fontStyle;
  exports["gravity"] = gravity;
  exports["height"] = height;
  exports["hint"] = hint;
  exports["hintColor"] = hintColor;
  exports["imageUrl"] = imageUrl;
  exports["inputType"] = inputType;
  exports["lineHeight"] = lineHeight;
  exports["margin"] = margin;
  exports["orientation"] = orientation;
  exports["padding"] = padding;
  exports["singleLine"] = singleLine;
  exports["stroke"] = stroke;
  exports["text"] = text;
  exports["textAllCaps"] = textAllCaps;
  exports["textSize"] = textSize;
  exports["translationY"] = translationY;
  exports["translationZ"] = translationZ;
  exports["typeface"] = typeface;
  exports["visibility"] = visibility;
  exports["weight"] = weight;
  exports["width"] = width;
})(PS["PrestoDOM.Properties"] = PS["PrestoDOM.Properties"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var $foreign = PS["Engineering.Helpers.Commons"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Monad_Free = PS["Control.Monad.Free"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Transformers_Back_Trans = PS["Control.Transformers.Back.Trans"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Show = PS["Data.Show"];
  var Effect = PS["Effect"];
  var Effect_Aff = PS["Effect.Aff"];
  var Effect_Class = PS["Effect.Class"];
  var Effect_Exception = PS["Effect.Exception"];
  var Engineering_Types_App = PS["Engineering.Types.App"];
  var Foreign = PS["Foreign"];
  var Prelude = PS["Prelude"];
  var Presto_Core_Flow = PS["Presto.Core.Flow"];
  var Presto_Core_Types_API = PS["Presto.Core.Types.API"];
  var Presto_Core_Types_Language_Flow = PS["Presto.Core.Types.Language.Flow"];
  var Presto_Core_Types_Language_Interaction = PS["Presto.Core.Types.Language.Interaction"];
  var PrestoDOM = PS["PrestoDOM"];
  var PrestoDOM_Properties = PS["PrestoDOM.Properties"];
  var PrestoDOM_Types_Core = PS["PrestoDOM.Types.Core"];
  var onBackPress = Presto_Core_Types_Language_Flow.doAff(Control_Apply.applySecond(Effect_Aff.applyAff)(Effect_Aff.makeAff(function (sc) {
      return Control_Apply.applySecond(Effect.applyEffect)($foreign["onBackPress'"](function ($13) {
          return sc(Data_Either.Right.create($13));
      }))(Control_Applicative.pure(Effect.applicativeEffect)(Effect_Aff.nonCanceler));
  }))(Control_Applicative.pure(Effect_Aff.applicativeAff)(Control_Transformers_Back_Trans.GoBack.value)));
  var mkNativeHeader = function (v) {
      return {
          field: v.value0,
          value: v.value1
      };
  };
  var mkNativeRequest = function (v) {
      return {
          method: Data_Show.show(Presto_Core_Types_API.showMethod)(v.method),
          url: v.url,
          payload: v.payload,
          headers: Data_Functor.map(Data_Functor.functorArray)(mkNativeHeader)(v.headers)
      };
  };
  var liftRunScreen = function (f) {
      return function (a) {
          return Control_Transformers_Back_Trans.BackT(Control_Monad_Except_Trans.ExceptT(Data_Functor.map(Control_Monad_Free.freeFunctor)(Data_Either.Right.create)(Presto_Core_Types_Language_Flow.oneOf([ Data_Functor.map(Control_Monad_Free.freeFunctor)(f)(Presto_Core_Types_Language_Flow.showScreen(a)), onBackPress ]))));
      };
  };
  exports["mkNativeRequest"] = mkNativeRequest;
  exports["mkNativeHeader"] = mkNativeHeader;
  exports["onBackPress"] = onBackPress;
  exports["liftRunScreen"] = liftRunScreen;
  exports["showUI'"] = $foreign["showUI'"];
  exports["callAPI'"] = $foreign["callAPI'"];
})(PS["Engineering.Helpers.Commons"] = PS["Engineering.Helpers.Commons"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var GoToAirtelNB = (function () {
      function GoToAirtelNB() {

      };
      GoToAirtelNB.value = new GoToAirtelNB();
      return GoToAirtelNB;
  })();
  var AirtelCard = (function () {
      function AirtelCard() {

      };
      AirtelCard.value = new AirtelCard();
      return AirtelCard;
  })();
  exports["GoToAirtelNB"] = GoToAirtelNB;
  exports["AirtelCard"] = AirtelCard;
})(PS["Types"] = PS["Types"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Tuple = PS["Data.Tuple"];
  var Halogen_VDom_DOM_Prop = PS["Halogen.VDom.DOM.Prop"];
  var Halogen_VDom_Types = PS["Halogen.VDom.Types"];
  var PrestoDOM_Types_Core = PS["PrestoDOM.Types.Core"];                 
  var rootElement = function (screenName) {
      return function (elemName) {
          return Halogen_VDom_Types.Elem.create(new Data_Maybe.Just(screenName))(elemName);
      };
  };
  var linearLayout_ = function (screenName) {
      return rootElement(screenName)("linearLayout");
  };
  var element = function (elemName) {
      return Halogen_VDom_Types.Elem.create(Data_Maybe.Nothing.value)(elemName);
  };
  var leaf = function (elem) {
      return function (props) {
          return element(elem)(props)([  ]);
      };
  };
  var imageView = leaf("imageView");
  var textView = leaf("textView");
  var node = function (elem) {
      return element(elem);
  };                                                      
  var linearLayout = node("linearLayout");    
  var scrollView = node("scrollView");
  var editText = leaf("editText");
  exports["element"] = element;
  exports["linearLayout_"] = linearLayout_;
  exports["linearLayout"] = linearLayout;
  exports["scrollView"] = scrollView;
  exports["imageView"] = imageView;
  exports["editText"] = editText;
  exports["textView"] = textView;
})(PS["PrestoDOM.Elements.Elements"] = PS["PrestoDOM.Elements.Elements"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Prelude = PS["Prelude"];
  var PrestoDOM = PS["PrestoDOM"];
  var PrestoDOM_Types_DomAttributes = PS["PrestoDOM.Types.DomAttributes"];                 
  var Right = (function () {
      function Right() {

      };
      Right.value = new Right();
      return Right;
  })();
  var Left = (function () {
      function Left() {

      };
      Left.value = new Left();
      return Left;
  })();
  var Config = (function () {
      function Config(value0) {
          this.value0 = value0;
      };
      Config.create = function (value0) {
          return new Config(value0);
      };
      return Config;
  })();
  var defConfig = new Config({
      background: "#ff5252",
      textStyle: PrestoDOM_Types_DomAttributes.NORMAL.value,
      text: "null",
      textColor: "#FFFFFF",
      textSize: 22,
      imageUrl: "toolbar_arrow_back_white",
      inputUrl: "closebutton",
      iconVisibility: PrestoDOM_Types_DomAttributes.GONE.value,
      secondaryTextVisible: PrestoDOM_Types_DomAttributes.GONE.value,
      textVisibility: PrestoDOM_Types_DomAttributes.VISIBLE.value,
      padding: new PrestoDOM_Types_DomAttributes.Padding(10, 0, 0, 0),
      secondaryText: "",
      typeface: PrestoDOM_Types_DomAttributes.NORMAL.value,
      translationY: 0.0,
      translationZ: 0.0,
      height: new PrestoDOM_Types_DomAttributes.V(200),
      hintText: "",
      hintColor: "#99FFFFFF",
      inputVisibility: false,
      actionIcon: "",
      actionIconSize: new PrestoDOM_Types_DomAttributes.V(28),
      parentPadding: new PrestoDOM_Types_DomAttributes.Padding(5, 5, 5, 5),
      font: "Roboto-Regular",
      iconDirection: Left.value
  });
  exports["Right"] = Right;
  exports["Left"] = Left;
  exports["defConfig"] = defConfig;
  exports["Config"] = Config;
})(PS["UI.Components.Config.ToolBar"] = PS["UI.Components.Config.ToolBar"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Prelude = PS["Prelude"];
  var PrestoDOM = PS["PrestoDOM"];
  var PrestoDOM_Types_DomAttributes = PS["PrestoDOM.Types.DomAttributes"];                 
  var EditTextConfigV2 = (function () {
      function EditTextConfigV2(value0) {
          this.value0 = value0;
      };
      EditTextConfigV2.create = function (value0) {
          return new EditTextConfigV2(value0);
      };
      return EditTextConfigV2;
  })();
  var EditTextConfig = (function () {
      function EditTextConfig(value0) {
          this.value0 = value0;
      };
      EditTextConfig.create = function (value0) {
          return new EditTextConfig(value0);
      };
      return EditTextConfig;
  })();
  var Config = (function () {
      function Config(value0) {
          this.value0 = value0;
      };
      Config.create = function (value0) {
          return new Config(value0);
      };
      return Config;
  })();
  var defEditTextConfigV2 = new EditTextConfigV2({
      hint: "",
      margin: new PrestoDOM_Types_DomAttributes.Margin(0, 0, 0, 0),
      iconUrl: "",
      iconWidth: new PrestoDOM_Types_DomAttributes.V(36),
      iconHeight: new PrestoDOM_Types_DomAttributes.V(36),
      cardWidth: PrestoDOM_Types_DomAttributes.MATCH_PARENT.value,
      cardHeight: new PrestoDOM_Types_DomAttributes.V(50),
      lineSeparatorColor: "#aaaaaa",
      lineSeparatorHeight: 1,
      textColor: "#000000",
      hintColor: "#aaaaaa",
      tickVisibility: PrestoDOM_Types_DomAttributes.GONE.value,
      hintOutOfEditText: false,
      editTextPadding: new PrestoDOM_Types_DomAttributes.Padding(0, 0, 0, 0),
      inputType: PrestoDOM_Types_DomAttributes.Numeric.value,
      editTextVisibility: PrestoDOM_Types_DomAttributes.VISIBLE.value,
      visibility: PrestoDOM_Types_DomAttributes.VISIBLE.value,
      lineSeparatorMargin: new PrestoDOM_Types_DomAttributes.Margin(0, 0, 0, 0),
      background: "#FFFFFF",
      font: "Roboto-Regular"
  });
  var defEditTextConfig = new EditTextConfig({
      background: "null",
      text: "null",
      textColor: "#616161",
      textSize: 14,
      textHeight: new PrestoDOM_Types_DomAttributes.V(24),
      typeface: PrestoDOM_Types_DomAttributes.NORMAL.value,
      textMargin: new PrestoDOM_Types_DomAttributes.Margin(0, 0, 0, 0),
      parentHeight: new PrestoDOM_Types_DomAttributes.V(65),
      parentWidth: PrestoDOM_Types_DomAttributes.MATCH_PARENT.value,
      parentMargin: new PrestoDOM_Types_DomAttributes.Margin(10, 0, 10, 10),
      parentPadding: new PrestoDOM_Types_DomAttributes.Padding(0, 0, 0, 0),
      parentBackground: "#ffffff",
      rowHeight: new PrestoDOM_Types_DomAttributes.V(40),
      rowWidth: PrestoDOM_Types_DomAttributes.MATCH_PARENT.value,
      rowPadding: new PrestoDOM_Types_DomAttributes.Padding(0, 0, 0, 0),
      rowStroke: "",
      rowCornerRadius: 0.0,
      editTextBackground: "#ffffff",
      hint: "",
      editTextSize: 16,
      inputType: PrestoDOM_Types_DomAttributes.Numeric.value,
      pipeVisibility: PrestoDOM_Types_DomAttributes.GONE.value,
      imageUrl: "",
      imageBackground: "#f5f5f5",
      imageHeight: new PrestoDOM_Types_DomAttributes.V(40),
      imageWidth: new PrestoDOM_Types_DomAttributes.V(60),
      imageMargin: new PrestoDOM_Types_DomAttributes.Margin(0, 0, 0, 0),
      imagePadding: new PrestoDOM_Types_DomAttributes.Padding(10, 0, 10, 0),
      imageVisibility: PrestoDOM_Types_DomAttributes.VISIBLE.value,
      font: "Roboto-Regular"
  });
  var defConfig = new Config({
      height: PrestoDOM_Types_DomAttributes.MATCH_PARENT.value,
      margin: new PrestoDOM_Types_DomAttributes.Margin(0, 0, 0, 0),
      padding: new PrestoDOM_Types_DomAttributes.Padding(0, 0, 0, 0),
      background: "#ffffff",
      cornerRadius: 0.0,
      stroke: "1,#aaaaaa",
      imageUrl: "edittext_airtel_cvv",
      widthCvv: new PrestoDOM_Types_DomAttributes.V(100),
      widthDate: new PrestoDOM_Types_DomAttributes.V(0),
      editTextCardConfig: defEditTextConfig,
      editTextNameConfig: defEditTextConfig,
      editTextDateConfig: defEditTextConfig,
      editTextCvvConfig: defEditTextConfig,
      editTextCardConfigV2: defEditTextConfigV2,
      editTextNameConfigV2: defEditTextConfigV2,
      editTextDateConfigV2: defEditTextConfigV2,
      editTextCvvConfigV2: defEditTextConfigV2,
      version: 1,
      isFormVisible: true,
      font: "Roboto-Regular"
  });
  exports["defEditTextConfig"] = defEditTextConfig;
  exports["EditTextConfig"] = EditTextConfig;
  exports["defEditTextConfigV2"] = defEditTextConfigV2;
  exports["EditTextConfigV2"] = EditTextConfigV2;
  exports["defConfig"] = defConfig;
  exports["Config"] = Config;
})(PS["UI.Components.Config.AddCard"] = PS["UI.Components.Config.AddCard"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Semiring = PS["Data.Semiring"];
  var Effect = PS["Effect"];
  var Prelude = PS["Prelude"];
  var PrestoDOM = PS["PrestoDOM"];
  var PrestoDOM_Elements_Elements = PS["PrestoDOM.Elements.Elements"];
  var PrestoDOM_Properties = PS["PrestoDOM.Properties"];
  var PrestoDOM_Types_DomAttributes = PS["PrestoDOM.Types.DomAttributes"];
  var Types = PS["Types"];
  var UI_Components_Config_AddCard = PS["UI.Components.Config.AddCard"];
  var UI_Components_Controller_AddCard = PS["UI.Components.Controller.AddCard"];                 
  var _addCardEditTextV2 = function (v) {
      return PrestoDOM_Elements_Elements.linearLayout([ PrestoDOM_Properties.width(v.value0.cardWidth), PrestoDOM_Properties.height(v.value0.cardHeight), PrestoDOM_Properties.background(v.value0.background), PrestoDOM_Properties.orientation(PrestoDOM_Types_DomAttributes.VERTICAL.value), PrestoDOM_Properties.margin(v.value0.margin), PrestoDOM_Properties.visibility(v.value0.visibility) ])([ PrestoDOM_Elements_Elements.textView([ PrestoDOM_Properties.width(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.height(new PrestoDOM_Types_DomAttributes.V(20)), PrestoDOM_Properties.text(v.value0.hint), PrestoDOM_Properties.color("#aaaaaa"), PrestoDOM_Properties.visibility((function () {
          if (v.value0.hintOutOfEditText) {
              return PrestoDOM_Types_DomAttributes.VISIBLE.value;
          };
          return PrestoDOM_Types_DomAttributes.GONE.value;
      })()), PrestoDOM_Properties.fontStyle(v.value0.font) ]), PrestoDOM_Elements_Elements.linearLayout([ PrestoDOM_Properties.width(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.height(new PrestoDOM_Types_DomAttributes.V(0)), PrestoDOM_Properties.orientation(PrestoDOM_Types_DomAttributes.HORIZONTAL.value), PrestoDOM_Properties.weight(1.0), PrestoDOM_Properties.padding(v.value0.editTextPadding), PrestoDOM_Properties.gravity(PrestoDOM_Types_DomAttributes.CENTER_VERTICAL.value) ])([ PrestoDOM_Elements_Elements.editText([ PrestoDOM_Properties.width(new PrestoDOM_Types_DomAttributes.V(0)), PrestoDOM_Properties.height(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.hint((function () {
          if (v.value0.hintOutOfEditText) {
              return "";
          };
          return v.value0.hint;
      })()), PrestoDOM_Properties.color(v.value0.textColor), PrestoDOM_Properties.weight(1.0), PrestoDOM_Properties.background(v.value0.background), PrestoDOM_Properties.hintColor(v.value0.hintColor), PrestoDOM_Properties.inputType(v.value0.inputType), PrestoDOM_Properties.visibility(v.value0.editTextVisibility) ]), PrestoDOM_Elements_Elements.imageView([ PrestoDOM_Properties.width(v.value0.iconWidth), PrestoDOM_Properties.height(v.value0.iconHeight), PrestoDOM_Properties.visibility((function () {
          var $6 = v.value0.iconUrl === "";
          if ($6) {
              return PrestoDOM_Types_DomAttributes.GONE.value;
          };
          return PrestoDOM_Types_DomAttributes.VISIBLE.value;
      })()), PrestoDOM_Properties.imageUrl(v.value0.iconUrl), PrestoDOM_Properties.padding(new PrestoDOM_Types_DomAttributes.PaddingLeft(10)) ]) ]), PrestoDOM_Elements_Elements.linearLayout([ PrestoDOM_Properties.width(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.height(new PrestoDOM_Types_DomAttributes.V(v.value0.lineSeparatorHeight + 4 | 0)), PrestoDOM_Properties.orientation(PrestoDOM_Types_DomAttributes.HORIZONTAL.value), PrestoDOM_Properties.margin(v.value0.lineSeparatorMargin) ])([ PrestoDOM_Elements_Elements.linearLayout([ PrestoDOM_Properties.width(new PrestoDOM_Types_DomAttributes.V(v.value0.lineSeparatorHeight)), PrestoDOM_Properties.height(new PrestoDOM_Types_DomAttributes.V(v.value0.lineSeparatorHeight + 4 | 0)), PrestoDOM_Properties.background(v.value0.lineSeparatorColor), PrestoDOM_Properties.visibility(v.value0.tickVisibility) ])([  ]), PrestoDOM_Elements_Elements.linearLayout([ PrestoDOM_Properties.width(new PrestoDOM_Types_DomAttributes.V(0)), PrestoDOM_Properties.height(new PrestoDOM_Types_DomAttributes.V(v.value0.lineSeparatorHeight)), PrestoDOM_Properties.background(v.value0.lineSeparatorColor), PrestoDOM_Properties.margin(new PrestoDOM_Types_DomAttributes.MarginTop((function () {
          if (v.value0.tickVisibility instanceof PrestoDOM_Types_DomAttributes.VISIBLE) {
              return 4;
          };
          return 0;
      })())), PrestoDOM_Properties.weight(1.0) ])([  ]), PrestoDOM_Elements_Elements.linearLayout([ PrestoDOM_Properties.width(new PrestoDOM_Types_DomAttributes.V(v.value0.lineSeparatorHeight)), PrestoDOM_Properties.height(new PrestoDOM_Types_DomAttributes.V(v.value0.lineSeparatorHeight + 4 | 0)), PrestoDOM_Properties.background(v.value0.lineSeparatorColor), PrestoDOM_Properties.visibility(v.value0.tickVisibility) ])([  ]) ]) ]);
  };
  var _addCardEditTextV1 = function (v) {
      return PrestoDOM_Elements_Elements.linearLayout([ PrestoDOM_Properties.height(v.value0.parentHeight), PrestoDOM_Properties.width(v.value0.parentWidth), PrestoDOM_Properties.margin(v.value0.parentMargin), PrestoDOM_Properties.padding(v.value0.parentPadding), PrestoDOM_Properties.background(v.value0.parentBackground), PrestoDOM_Properties.orientation(PrestoDOM_Types_DomAttributes.VERTICAL.value) ])([ PrestoDOM_Elements_Elements.textView([ PrestoDOM_Properties.height(v.value0.textHeight), PrestoDOM_Properties.width(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.text(v.value0.text), PrestoDOM_Properties.textSize(v.value0.textSize), PrestoDOM_Properties.color(v.value0.textColor), PrestoDOM_Properties.typeface(v.value0.typeface), PrestoDOM_Properties.margin(v.value0.textMargin), PrestoDOM_Properties.gravity(PrestoDOM_Types_DomAttributes.CENTER_VERTICAL.value), PrestoDOM_Properties.fontStyle(v.value0.font) ]), PrestoDOM_Elements_Elements.linearLayout([ PrestoDOM_Properties.height(v.value0.rowHeight), PrestoDOM_Properties.width(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.orientation(PrestoDOM_Types_DomAttributes.HORIZONTAL.value), PrestoDOM_Properties.background("#f5f5f5"), PrestoDOM_Properties.stroke(v.value0.rowStroke), PrestoDOM_Properties.cornerRadius(v.value0.rowCornerRadius), PrestoDOM_Properties.padding(v.value0.rowPadding) ])([ PrestoDOM_Elements_Elements.editText([ PrestoDOM_Properties.height(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.width(new PrestoDOM_Types_DomAttributes.V(0)), PrestoDOM_Properties.weight(1.0), PrestoDOM_Properties.gravity(PrestoDOM_Types_DomAttributes.CENTER_VERTICAL.value), PrestoDOM_Properties.padding(new PrestoDOM_Types_DomAttributes.Padding(10, 0, 0, 0)), PrestoDOM_Properties.inputType(v.value0.inputType), PrestoDOM_Properties.background(v.value0.editTextBackground), PrestoDOM_Properties.hint(v.value0.hint), PrestoDOM_Properties.textSize(v.value0.editTextSize) ]), PrestoDOM_Elements_Elements.linearLayout([ PrestoDOM_Properties.height(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.width(new PrestoDOM_Types_DomAttributes.V(1)), PrestoDOM_Properties.background("#bdbdbd"), PrestoDOM_Properties.visibility(v.value0.pipeVisibility) ])([  ]), PrestoDOM_Elements_Elements.imageView([ PrestoDOM_Properties.height(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.width(v.value0.imageWidth), PrestoDOM_Properties.visibility(v.value0.imageVisibility), PrestoDOM_Properties.imageUrl(v.value0.imageUrl), PrestoDOM_Properties.background(v.value0.imageBackground), PrestoDOM_Properties.padding(v.value0.imagePadding) ]) ]) ]);
  };
  var view = function (push) {
      return function (v) {
          return PrestoDOM_Elements_Elements.linearLayout([ PrestoDOM_Properties.width(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.height(v.value0.height), PrestoDOM_Properties.background(v.value0.background), PrestoDOM_Properties.orientation(PrestoDOM_Types_DomAttributes.VERTICAL.value), PrestoDOM_Properties.margin(v.value0.margin), PrestoDOM_Properties.padding(v.value0.padding), PrestoDOM_Properties.stroke(v.value0.stroke), PrestoDOM_Properties.cornerRadius(v.value0.cornerRadius), PrestoDOM_Properties.visibility((function () {
              if (v.value0.isFormVisible) {
                  return PrestoDOM_Types_DomAttributes.VISIBLE.value;
              };
              return PrestoDOM_Types_DomAttributes.GONE.value;
          })()) ])([ (function () {
              var $14 = v.value0.version === 1;
              if ($14) {
                  return _addCardEditTextV1(v.value0.editTextCardConfig);
              };
              return _addCardEditTextV2(v.value0.editTextCardConfigV2);
          })(), (function () {
              var $15 = v.value0.version === 1;
              if ($15) {
                  return _addCardEditTextV1(v.value0.editTextNameConfig);
              };
              return _addCardEditTextV2(v.value0.editTextNameConfigV2);
          })(), PrestoDOM_Elements_Elements.linearLayout([ PrestoDOM_Properties.width(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.height(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value) ])([ PrestoDOM_Elements_Elements.linearLayout([ PrestoDOM_Properties.height(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.width(v.value0.widthDate), PrestoDOM_Properties.weight(1.0) ])([ (function () {
              var $16 = v.value0.version === 1;
              if ($16) {
                  return _addCardEditTextV1(v.value0.editTextDateConfig);
              };
              return _addCardEditTextV2(v.value0.editTextDateConfigV2);
          })() ]), PrestoDOM_Elements_Elements.linearLayout([ PrestoDOM_Properties.height(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.width(v.value0.widthCvv), PrestoDOM_Properties.weight(1.0) ])([ (function () {
              var $17 = v.value0.version === 1;
              if ($17) {
                  return _addCardEditTextV1(v.value0.editTextCvvConfig);
              };
              return _addCardEditTextV2(v.value0.editTextCvvConfigV2);
          })() ]), PrestoDOM_Elements_Elements.imageView([ PrestoDOM_Properties.width(new PrestoDOM_Types_DomAttributes.V(40)), PrestoDOM_Properties.height(new PrestoDOM_Types_DomAttributes.V(40)), PrestoDOM_Properties.margin(new PrestoDOM_Types_DomAttributes.Margin(0, 30, 8, 0)), PrestoDOM_Properties.visibility((function () {
              var $18 = v.value0.imageUrl === "";
              if ($18) {
                  return PrestoDOM_Types_DomAttributes.GONE.value;
              };
              return PrestoDOM_Types_DomAttributes.VISIBLE.value;
          })()), PrestoDOM_Properties.imageUrl(v.value0.imageUrl) ]) ]) ]);
      };
  };
  exports["view"] = view;
  exports["_addCardEditTextV1"] = _addCardEditTextV1;
  exports["_addCardEditTextV2"] = _addCardEditTextV2;
})(PS["UI.Components.View.AddCard"] = PS["UI.Components.View.AddCard"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Prelude = PS["Prelude"];
  var PrestoDOM = PS["PrestoDOM"];
  var PrestoDOM_Types_DomAttributes = PS["PrestoDOM.Types.DomAttributes"];                 
  var Config = (function () {
      function Config(value0) {
          this.value0 = value0;
      };
      Config.create = function (value0) {
          return new Config(value0);
      };
      return Config;
  })();
  var defConfig = new Config({
      background: "#aaaaaa",
      height: new PrestoDOM_Types_DomAttributes.V(50),
      text: "PAY",
      color: "#ffffff",
      cornerRadius: 0.0,
      textSize: 18,
      margin: new PrestoDOM_Types_DomAttributes.Margin(4, 4, 4, 4),
      typeface: PrestoDOM_Types_DomAttributes.NORMAL.value,
      stroke: "0,#ffffff",
      font: "Roboto-Regular"
  });
  exports["defConfig"] = defConfig;
  exports["Config"] = Config;
})(PS["UI.Components.Config.PrimaryButton"] = PS["UI.Components.Config.PrimaryButton"] || {});
(function(exports) {exports['getOS'] = function (x) {
	  var userAgent = navigator.userAgent;
	  console.log('OS ==> ', userAgent);
	  if (userAgent) {
		  if (userAgent.indexOf('Android') != -1) {
			  return 'ANDROID';
		  }
		  if (userAgent.indexOf('iPhone') != -1) {
			  return 'IOS';
		  } else {
			  return 'WEB';
		  }
	  } else {
		  console.log('Null user agent defaulting to android ');
	  }
  };

  exports['getLabelHeight'] = function (text) {
	  return function (fontName) {
		  return function (fontSize) {
			  return function (width) {
				  return function (height) {
					  if (__OS == 'ANDROID') {
						  return 0;
					  }
					  var size = JBridge.sizeForLabelWithText(text, fontName, fontSize, width, height);
					  return parseInt(JSON.parse(size)['height']);
				  };
			  };
		  };
	  };
  };

  exports['getLabelWidth'] = function (text) {
	  return function (fontName) {
		  return function (fontSize) {
			  return function (width) {
				  return function (height) {
					  if (__OS == 'ANDROID') {
						  return 0;
					  }
					  var size = JBridge.sizeForLabelWithText(text, fontName, fontSize, width, height);
					  console.log('Size :', size);
					  return parseInt(JSON.parse(size)['width']);
				  };
			  };
		  };
	  };
  };

  exports['screenWidth'] = function (x) {
	  if (window.__OS == 'ANDROID') {
		  if (window.__android_screenWidth) {
			  return window.__android_screenWidth;
		  } else {
			  return (window.__android_screenWidth =
				  JSON.parse(Android.getScreenDimensions()).width / JBridge.getPixels());
		  }
	  } else {
		  if (window.__ios_screenWidth) {
			  return window.__ios_screenWidth;
		  } else {
			  return (window.__ios_screenWidth = JSON.parse(Android.getScreenDimensions()).width);
		  }
	  }
  };

  exports["exitSDK'"] = function (payload) {
	  return function (code) {
		  console.log("EXIT SDK => ", payload);
		  JOS.finish(code)(payload)()

	  }
  }

  exports["log"] = function (tag) {
	  return function (a) {
		  console.log(tag + " >>", a);
		  return a;
	  }
  }
})(PS["Utils"] = PS["Utils"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var $foreign = PS["Utils"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Monad_Free = PS["Control.Monad.Free"];
  var Data_Function = PS["Data.Function"];
  var Data_Unit = PS["Data.Unit"];
  var Effect = PS["Effect"];
  var Prelude = PS["Prelude"];
  var Presto_Core_Flow = PS["Presto.Core.Flow"];
  var PrestoDOM = PS["PrestoDOM"];
  var PrestoDOM_Properties = PS["PrestoDOM.Properties"];
  var PrestoDOM_Types_Core = PS["PrestoDOM.Types.Core"];
  var os = $foreign.getOS(Data_Unit.unit);                                                        
  var exitSDK = function (response) {
      return function (code) {
          return Control_Applicative.pure(Control_Monad_Free.freeApplicative)($foreign["exitSDK'"](response)(code));
      };
  };
  exports["os"] = os;
  exports["exitSDK"] = exitSDK;
  exports["getLabelHeight"] = $foreign.getLabelHeight;
  exports["getLabelWidth"] = $foreign.getLabelWidth;
  exports["screenWidth"] = $foreign.screenWidth;
})(PS["Utils"] = PS["Utils"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Unit = PS["Data.Unit"];
  var Effect = PS["Effect"];
  var Prelude = PS["Prelude"];
  var PrestoDOM = PS["PrestoDOM"];
  var PrestoDOM_Elements_Elements = PS["PrestoDOM.Elements.Elements"];
  var PrestoDOM_Properties = PS["PrestoDOM.Properties"];
  var PrestoDOM_Types_DomAttributes = PS["PrestoDOM.Types.DomAttributes"];
  var Types = PS["Types"];
  var UI_Components_Config_PrimaryButton = PS["UI.Components.Config.PrimaryButton"];
  var UI_Components_Controller_PrimaryButton = PS["UI.Components.Controller.PrimaryButton"];
  var Utils = PS["Utils"];                 
  var view = function (push) {
      return function (v) {
          return PrestoDOM_Elements_Elements.linearLayout([ PrestoDOM_Properties.width(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.height(v.value0.height), PrestoDOM_Properties.orientation(PrestoDOM_Types_DomAttributes.HORIZONTAL.value), PrestoDOM_Properties.margin(v.value0.margin), PrestoDOM_Properties.background(v.value0.background), PrestoDOM_Properties.cornerRadius(v.value0.cornerRadius), PrestoDOM_Properties.stroke(v.value0.stroke), PrestoDOM_Properties.gravity(PrestoDOM_Types_DomAttributes.CENTER.value) ])([ PrestoDOM_Elements_Elements.textView([ PrestoDOM_Properties.height((function () {
              var $3 = Utils.os === "ANDROID";
              if ($3) {
                  return PrestoDOM_Types_DomAttributes.WRAP_CONTENT.value;
              };
              return new PrestoDOM_Types_DomAttributes.V(Utils.getLabelHeight(v.value0.text)(v.value0.font)(v.value0.textSize)(Utils.screenWidth(Data_Unit.unit))(0));
          })()), PrestoDOM_Properties.text(v.value0.text), PrestoDOM_Properties.width(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.gravity(PrestoDOM_Types_DomAttributes.CENTER.value), PrestoDOM_Properties.color(v.value0.color), PrestoDOM_Properties.textSize(v.value0.textSize), PrestoDOM_Properties.typeface(v.value0.typeface), PrestoDOM_Properties.fontStyle(v.value0.font) ]) ]);
      };
  };
  exports["view"] = view;
})(PS["UI.Components.View.PrimaryButton"] = PS["UI.Components.View.PrimaryButton"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var $foreign = PS["PrestoDOM.Events"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Unit = PS["Data.Unit"];
  var Effect = PS["Effect"];
  var Halogen_VDom_DOM_Prop = PS["Halogen.VDom.DOM.Prop"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Web_Event_Event = PS["Web.Event.Event"];                 
  var makeEvent = function (push) {
      return function (ev) {
          return function __do() {
              var v = push(ev)();
              return Data_Unit.unit;
          };
      };
  };
  var event = Halogen_VDom_DOM_Prop.Handler.create;
  var onClick = function (push) {
      return function (f) {
          return event("onClick")(function ($6) {
              return Data_Maybe.Just.create(makeEvent(function ($7) {
                  return push(f($7));
              })($6));
          });
      };
  };
  exports["onClick"] = onClick;
})(PS["PrestoDOM.Events"] = PS["PrestoDOM.Events"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var UI_Components_Config_ToolBar = PS["UI.Components.Config.ToolBar"];
  var ActionIconClicked = (function () {
      function ActionIconClicked() {

      };
      ActionIconClicked.value = new ActionIconClicked();
      return ActionIconClicked;
  })();
  exports["ActionIconClicked"] = ActionIconClicked;
})(PS["UI.Components.Controller.ToolBar"] = PS["UI.Components.Controller.ToolBar"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Effect = PS["Effect"];
  var Prelude = PS["Prelude"];
  var PrestoDOM = PS["PrestoDOM"];
  var PrestoDOM_Elements_Elements = PS["PrestoDOM.Elements.Elements"];
  var PrestoDOM_Events = PS["PrestoDOM.Events"];
  var PrestoDOM_Properties = PS["PrestoDOM.Properties"];
  var PrestoDOM_Types_DomAttributes = PS["PrestoDOM.Types.DomAttributes"];
  var UI_Components_Config_ToolBar = PS["UI.Components.Config.ToolBar"];
  var UI_Components_Controller_ToolBar = PS["UI.Components.Controller.ToolBar"];                 
  var icon = function (push) {
      return function (config) {
          return [ PrestoDOM_Elements_Elements.imageView([ PrestoDOM_Properties.height(config.actionIconSize), PrestoDOM_Properties.width(config.actionIconSize), PrestoDOM_Properties.imageUrl(config.actionIcon), PrestoDOM_Properties.visibility(config.iconVisibility), PrestoDOM_Events.onClick(push)(Data_Function["const"](UI_Components_Controller_ToolBar.ActionIconClicked.value)) ]) ];
      };
  };
  var body = function (push) {
      return function (config) {
          return Data_Semigroup.append(Data_Semigroup.semigroupArray)((function () {
              if (config.iconDirection instanceof UI_Components_Config_ToolBar.Left) {
                  return icon(push)(config);
              };
              return [  ];
          })())(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ PrestoDOM_Elements_Elements.textView([ PrestoDOM_Properties.height(new PrestoDOM_Types_DomAttributes.V(32)), PrestoDOM_Properties.padding(new PrestoDOM_Types_DomAttributes.Padding(5, 0, 5, 0)), PrestoDOM_Properties.gravity(PrestoDOM_Types_DomAttributes.CENTER_VERTICAL.value), PrestoDOM_Properties.color("#ffffff"), PrestoDOM_Properties.textSize(22), PrestoDOM_Properties.text(config.secondaryText), PrestoDOM_Properties.visibility(config.secondaryTextVisible), PrestoDOM_Properties.fontStyle(config.font) ]) ])((function () {
              if (config.iconDirection instanceof UI_Components_Config_ToolBar.Right) {
                  return icon(push)(config);
              };
              return [  ];
          })()));
      };
  };
  var view = function (push) {
      return function (v) {
          return PrestoDOM_Elements_Elements.linearLayout([ PrestoDOM_Properties.height(new PrestoDOM_Types_DomAttributes.V(60)), PrestoDOM_Properties.width(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.orientation(PrestoDOM_Types_DomAttributes.HORIZONTAL.value), PrestoDOM_Properties.padding(v.value0.parentPadding), PrestoDOM_Properties.background(v.value0.background), PrestoDOM_Properties.gravity(PrestoDOM_Types_DomAttributes.CENTER.value), PrestoDOM_Properties.translationY(v.value0.translationY), PrestoDOM_Properties.translationZ(v.value0.translationZ) ])(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ PrestoDOM_Elements_Elements.imageView([ PrestoDOM_Properties.height(new PrestoDOM_Types_DomAttributes.V(24)), PrestoDOM_Properties.width(new PrestoDOM_Types_DomAttributes.V(40)), PrestoDOM_Properties.gravity(PrestoDOM_Types_DomAttributes.LEFT.value), PrestoDOM_Properties.imageUrl(v.value0.imageUrl) ]), PrestoDOM_Elements_Elements.textView([ PrestoDOM_Properties.height(new PrestoDOM_Types_DomAttributes.V(32)), PrestoDOM_Properties.width(new PrestoDOM_Types_DomAttributes.V(0)), PrestoDOM_Properties.weight(1.0), PrestoDOM_Properties.text(v.value0.text), PrestoDOM_Properties.padding(v.value0.padding), PrestoDOM_Properties.gravity(PrestoDOM_Types_DomAttributes.CENTER_VERTICAL.value), PrestoDOM_Properties.color(v.value0.textColor), PrestoDOM_Properties.textSize(v.value0.textSize), PrestoDOM_Properties.typeface(v.value0.typeface), PrestoDOM_Properties.visibility((function () {
              if (v.value0.inputVisibility) {
                  return PrestoDOM_Types_DomAttributes.GONE.value;
              };
              return PrestoDOM_Types_DomAttributes.VISIBLE.value;
          })()) ]), PrestoDOM_Elements_Elements.editText([ PrestoDOM_Properties.height(new PrestoDOM_Types_DomAttributes.V(32)), PrestoDOM_Properties.weight(1.0), PrestoDOM_Properties.padding(v.value0.padding), PrestoDOM_Properties.gravity(PrestoDOM_Types_DomAttributes.CENTER_VERTICAL.value), PrestoDOM_Properties.typeface(v.value0.textStyle), PrestoDOM_Properties.color(v.value0.textColor), PrestoDOM_Properties.background(v.value0.background), PrestoDOM_Properties.textSize(v.value0.textSize), PrestoDOM_Properties.hint(v.value0.hintText), PrestoDOM_Properties.hintColor(v.value0.hintColor), PrestoDOM_Properties.visibility((function () {
              if (v.value0.inputVisibility) {
                  return PrestoDOM_Types_DomAttributes.VISIBLE.value;
              };
              return PrestoDOM_Types_DomAttributes.GONE.value;
          })()) ]) ])(body(push)(v.value0)));
      };
  };
  exports["view"] = view;
  exports["body"] = body;
  exports["icon"] = icon;
})(PS["UI.Components.View.ToolBar"] = PS["UI.Components.View.ToolBar"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Prelude = PS["Prelude"];
  var PrestoDOM = PS["PrestoDOM"];
  var PrestoDOM_Types_DomAttributes = PS["PrestoDOM.Types.DomAttributes"];                 
  var Config = (function () {
      function Config(value0) {
          this.value0 = value0;
      };
      Config.create = function (value0) {
          return new Config(value0);
      };
      return Config;
  })();
  var defConfig = new Config({
      background: "#ffffff",
      text: "",
      color: "#aaaaaa",
      textSize: 14,
      height: PrestoDOM_Types_DomAttributes.MATCH_PARENT.value,
      width: PrestoDOM_Types_DomAttributes.MATCH_PARENT.value,
      gravity: PrestoDOM_Types_DomAttributes.LEFT.value,
      typeface: PrestoDOM_Types_DomAttributes.NORMAL.value,
      orientation: PrestoDOM_Types_DomAttributes.HORIZONTAL.value,
      pipeVisibility: PrestoDOM_Types_DomAttributes.GONE.value,
      headingColor: "#000000",
      headingText: "Amount Payable",
      headingTextSize: 18,
      headingTypeface: PrestoDOM_Types_DomAttributes.NORMAL.value,
      headingWidth: PrestoDOM_Types_DomAttributes.MATCH_PARENT.value,
      headingHeight: PrestoDOM_Types_DomAttributes.MATCH_PARENT.value,
      headingWeight: 1.0,
      weight: 1.0,
      amountHeadingVisibility: PrestoDOM_Types_DomAttributes.GONE.value,
      amountHeadingText: "Pay Amount",
      amountText: "\u20b90",
      amountColor: "#000000",
      amountTextSize: 18,
      amountHeight: PrestoDOM_Types_DomAttributes.MATCH_PARENT.value,
      amountTypeface: PrestoDOM_Types_DomAttributes.NORMAL.value,
      amountVisibility: PrestoDOM_Types_DomAttributes.VISIBLE.value,
      amountGravity: PrestoDOM_Types_DomAttributes.LEFT.value,
      imageHeight: new PrestoDOM_Types_DomAttributes.V(24),
      imageVisibility: PrestoDOM_Types_DomAttributes.GONE.value,
      imageMargin: new PrestoDOM_Types_DomAttributes.Margin(8, 8, 0, 8),
      imageUrl: "amountview_goibibo_info_blue",
      imageWidth: new PrestoDOM_Types_DomAttributes.V(24),
      heightParent: new PrestoDOM_Types_DomAttributes.V(50),
      widthParent: PrestoDOM_Types_DomAttributes.MATCH_PARENT.value,
      margin: new PrestoDOM_Types_DomAttributes.Margin(0, 0, 0, 0),
      padding: new PrestoDOM_Types_DomAttributes.Padding(10, 10, 10, 10),
      cornerRadius: 0.0,
      font: "Roboto-Regular",
      parentGravity: PrestoDOM_Types_DomAttributes.CENTER.value
  });
  exports["defConfig"] = defConfig;
  exports["Config"] = Config;
})(PS["UI.Components.Config.AmountView"] = PS["UI.Components.Config.AmountView"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Prelude = PS["Prelude"];
  var PrestoDOM = PS["PrestoDOM"];
  var PrestoDOM_Types_DomAttributes = PS["PrestoDOM.Types.DomAttributes"];                 
  var Right = (function () {
      function Right() {

      };
      Right.value = new Right();
      return Right;
  })();
  var Left = (function () {
      function Left() {

      };
      Left.value = new Left();
      return Left;
  })();
  var None = (function () {
      function None() {

      };
      None.value = new None();
      return None;
  })();
  var Config = (function () {
      function Config(value0) {
          this.value0 = value0;
      };
      Config.create = function (value0) {
          return new Config(value0);
      };
      return Config;
  })();
  var defConfig = new Config({
      background: "#ffffff",
      radioDirection: None.value,
      radioInnerColor: "#03A9F4",
      radioOuterColor: "#cccccc",
      bankImageSize: 24,
      bankImageVisible: PrestoDOM_Types_DomAttributes.VISIBLE.value,
      bankTextSize: 24,
      bankTextFont: "Arial",
      bankTextColor: "#000000",
      arrowImage: "arrowimg",
      arrowVisible: PrestoDOM_Types_DomAttributes.VISIBLE.value,
      cardHeight: 52,
      orientation: PrestoDOM_Types_DomAttributes.HORIZONTAL.value,
      dividerVisibility: PrestoDOM_Types_DomAttributes.GONE.value,
      dividerMargin: new PrestoDOM_Types_DomAttributes.Margin(0, 0, 0, 0),
      dividerColor: "#e1e1e1",
      radioSize: new PrestoDOM_Types_DomAttributes.V(20),
      radioPadding: new PrestoDOM_Types_DomAttributes.Padding(3, 3, 3, 3),
      font: "Roboto-Regular",
      radioImage: "",
      cardPadding: new PrestoDOM_Types_DomAttributes.Padding(10, 0, 10, 0),
      radioMargin: new PrestoDOM_Types_DomAttributes.Margin(0, 0, 0, 0),
      bankImagePadding: new PrestoDOM_Types_DomAttributes.Padding(0, 0, 0, 0),
      bankTextPadding: new PrestoDOM_Types_DomAttributes.Padding(0, 0, 0, 0)
  });
  exports["Right"] = Right;
  exports["Left"] = Left;
  exports["None"] = None;
  exports["Config"] = Config;
  exports["defConfig"] = defConfig;
})(PS["UI.Components.Config.BankListItem"] = PS["UI.Components.Config.BankListItem"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Prelude = PS["Prelude"];
  var PrestoDOM = PS["PrestoDOM"];
  var PrestoDOM_Types_DomAttributes = PS["PrestoDOM.Types.DomAttributes"];                 
  var Config = (function () {
      function Config(value0) {
          this.value0 = value0;
      };
      Config.create = function (value0) {
          return new Config(value0);
      };
      return Config;
  })();
  var defConfig = new Config({
      amount: "\u20b9 0.0",
      amountGravity: PrestoDOM_Types_DomAttributes.CENTER.value,
      amountStroke: "0,#ffffff",
      amountCornerRadius: 0.0,
      height: new PrestoDOM_Types_DomAttributes.V(90),
      imageWidth: new PrestoDOM_Types_DomAttributes.V(80),
      imageHeight: PrestoDOM_Types_DomAttributes.MATCH_PARENT.value,
      text: "",
      gravity: PrestoDOM_Types_DomAttributes.LEFT.value,
      color: "#757575",
      amountColor: "#00BFA5",
      amountWidth: new PrestoDOM_Types_DomAttributes.V(70),
      amountBackground: "#ffffff",
      padding: new PrestoDOM_Types_DomAttributes.Padding(4, 2, 2, 0),
      imageUrl: "ic_airtel_money",
      headingText: "Airtel Money",
      discountVisibility: PrestoDOM_Types_DomAttributes.VISIBLE.value,
      headingHeight: new PrestoDOM_Types_DomAttributes.V(20),
      headingWeight: 0.0,
      boxPadding: new PrestoDOM_Types_DomAttributes.Padding(0, 8, 8, 0),
      parentPadding: new PrestoDOM_Types_DomAttributes.Padding(0, 12, 0, 12),
      lineSeparaterVisibility: PrestoDOM_Types_DomAttributes.GONE.value,
      lineSeparaterMargin: new PrestoDOM_Types_DomAttributes.Margin(0, 0, 0, 0),
      lineSeparaterColor: "#aaaaaa",
      id: "0",
      font: "Roboto-Regular"
  });
  exports["defConfig"] = defConfig;
  exports["Config"] = Config;
})(PS["UI.Components.Config.PaymentOptionsV2"] = PS["UI.Components.Config.PaymentOptionsV2"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Prelude = PS["Prelude"];
  var PrestoDOM = PS["PrestoDOM"];
  var PrestoDOM_Types_DomAttributes = PS["PrestoDOM.Types.DomAttributes"];                 
  var Config = (function () {
      function Config(value0) {
          this.value0 = value0;
      };
      Config.create = function (value0) {
          return new Config(value0);
      };
      return Config;
  })();
  var defConfig = new Config({
      background: "null",
      text: "null",
      textColor: "#aaaaaa",
      textSize: 12,
      textAllCaps: false,
      textHeight: new PrestoDOM_Types_DomAttributes.V(24),
      textWidth: PrestoDOM_Types_DomAttributes.MATCH_PARENT.value,
      parentHeight: PrestoDOM_Types_DomAttributes.MATCH_PARENT.value,
      parentWidth: PrestoDOM_Types_DomAttributes.MATCH_PARENT.value,
      parentMargin: new PrestoDOM_Types_DomAttributes.Margin(0, 0, 0, 0),
      rowHeight: new PrestoDOM_Types_DomAttributes.V(50),
      rowWidth: PrestoDOM_Types_DomAttributes.MATCH_PARENT.value,
      rowMargin: new PrestoDOM_Types_DomAttributes.Margin(0, 0, 0, 0),
      cellHeight: PrestoDOM_Types_DomAttributes.MATCH_PARENT.value,
      cellWidth: new PrestoDOM_Types_DomAttributes.V(0),
      cellMargin: new PrestoDOM_Types_DomAttributes.Margin(0, 0, 0, 0),
      cellStroke: "0,#aaaaaa",
      cellCornerRadius: 0.0,
      cellPadding: new PrestoDOM_Types_DomAttributes.Padding(0, 0, 0, 0),
      imageHeight: new PrestoDOM_Types_DomAttributes.V(40),
      imageWidth: new PrestoDOM_Types_DomAttributes.V(40),
      imageMargin: new PrestoDOM_Types_DomAttributes.Margin(0, 0, 0, 0),
      imagePadding: new PrestoDOM_Types_DomAttributes.Padding(0, 0, 0, 0),
      imageStroke: "0,#aaaaaa",
      imageCornerRadius: 0.0,
      isFormVisible: false,
      bankNameVisibility: PrestoDOM_Types_DomAttributes.VISIBLE.value,
      font: "Roboto-Regular"
  });
  exports["defConfig"] = defConfig;
  exports["Config"] = Config;
})(PS["UI.Components.Config.PopularBanks"] = PS["UI.Components.Config.PopularBanks"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Prelude = PS["Prelude"];
  var PrestoDOM = PS["PrestoDOM"];
  var PrestoDOM_Types_DomAttributes = PS["PrestoDOM.Types.DomAttributes"];                 
  var Config = (function () {
      function Config(value0) {
          this.value0 = value0;
      };
      Config.create = function (value0) {
          return new Config(value0);
      };
      return Config;
  })();
  var defConfig = new Config({
      hint: "",
      stroke: "0,#ff00ff",
      fieldErrorMessage: "",
      imageUrl: "ic_search_black",
      id: "null",
      height: new PrestoDOM_Types_DomAttributes.V(52),
      padding: new PrestoDOM_Types_DomAttributes.Padding(0, 0, 0, 0),
      textSize: 24,
      cornerRadius: 0.0,
      searchIconAlpha: 1.0,
      searchIconVisibility: PrestoDOM_Types_DomAttributes.GONE.value,
      searchIconPadding: new PrestoDOM_Types_DomAttributes.Padding(0, 0, 0, 0),
      searchIconMargin: new PrestoDOM_Types_DomAttributes.Margin(0, 0, 0, 0),
      editTextPadding: new PrestoDOM_Types_DomAttributes.Padding(0, 0, 0, 0),
      editTextMargin: new PrestoDOM_Types_DomAttributes.Margin(0, 0, 0, 0),
      tickVisibility: PrestoDOM_Types_DomAttributes.GONE.value,
      lineVisibility: PrestoDOM_Types_DomAttributes.GONE.value,
      searchIconSize: new PrestoDOM_Types_DomAttributes.V(24),
      font: "Roboto-Regular"
  });
  exports["defConfig"] = defConfig;
  exports["Config"] = Config;
})(PS["UI.Components.Config.SearchBox"] = PS["UI.Components.Config.SearchBox"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var initialState = {};
  exports["initialState"] = initialState;
})(PS["UI.Components.Controller.AmountView"] = PS["UI.Components.Controller.AmountView"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Prelude = PS["Prelude"];
  var PrestoDOM = PS["PrestoDOM"];
  var PrestoDOM_Events = PS["PrestoDOM.Events"];
  var UI_Components_Config_BankListItem = PS["UI.Components.Config.BankListItem"];                 
  var CardClicked = (function () {
      function CardClicked(value0) {
          this.value0 = value0;
      };
      CardClicked.create = function (value0) {
          return new CardClicked(value0);
      };
      return CardClicked;
  })();
  var overrides = function (v) {
      return function (push) {
          return function (state) {
              if (v === "Clicked") {
                  return [ PrestoDOM_Events.onClick(push)(Data_Function["const"](new CardClicked(state.index))) ];
              };
              return [  ];
          };
      };
  };
  var initialState = {
      active: true,
      name: "Axis Bank",
      logo: "bank_axis",
      index: 0
  };
  exports["CardClicked"] = CardClicked;
  exports["initialState"] = initialState;
  exports["overrides"] = overrides;
})(PS["UI.Components.Controller.BankListItem"] = PS["UI.Components.Controller.BankListItem"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Prelude = PS["Prelude"];                 
  var ToggleOption = (function () {
      function ToggleOption(value0) {
          this.value0 = value0;
      };
      ToggleOption.create = function (value0) {
          return new ToggleOption(value0);
      };
      return ToggleOption;
  })();
  exports["ToggleOption"] = ToggleOption;
})(PS["UI.Components.Controller.PaymentOptionsV2"] = PS["UI.Components.Controller.PaymentOptionsV2"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Effect = PS["Effect"];
  var Prelude = PS["Prelude"];
  var PrestoDOM = PS["PrestoDOM"];
  var PrestoDOM_Events = PS["PrestoDOM.Events"];
  var PrestoDOM_Utils = PS["PrestoDOM.Utils"];
  var Types = PS["Types"];
  var UI_Components_Config_BankListItem = PS["UI.Components.Config.BankListItem"];
  var UI_Components_Controller_AmountView = PS["UI.Components.Controller.AmountView"];
  var UI_Components_Controller_BankListItem = PS["UI.Components.Controller.BankListItem"];
  var UI_Components_Controller_PaymentOptions = PS["UI.Components.Controller.PaymentOptions"];
  var UI_Components_Controller_PaymentOptionsV2 = PS["UI.Components.Controller.PaymentOptionsV2"];
  var UI_Components_Controller_PopularBanks = PS["UI.Components.Controller.PopularBanks"];
  var UI_Components_Controller_ToolBar = PS["UI.Components.Controller.ToolBar"];                 
  var AirtelAction = (function () {
      function AirtelAction() {

      };
      AirtelAction.value = new AirtelAction();
      return AirtelAction;
  })();
  var ToolBarAction = (function () {
      function ToolBarAction(value0) {
          this.value0 = value0;
      };
      ToolBarAction.create = function (value0) {
          return new ToolBarAction(value0);
      };
      return ToolBarAction;
  })();
  var AmountViewAction = (function () {
      function AmountViewAction(value0) {
          this.value0 = value0;
      };
      AmountViewAction.create = function (value0) {
          return new AmountViewAction(value0);
      };
      return AmountViewAction;
  })();
  var PopularBanksAction = (function () {
      function PopularBanksAction(value0) {
          this.value0 = value0;
      };
      PopularBanksAction.create = function (value0) {
          return new PopularBanksAction(value0);
      };
      return PopularBanksAction;
  })();
  var PaymentOptionsV2Action = (function () {
      function PaymentOptionsV2Action(value0) {
          this.value0 = value0;
      };
      PaymentOptionsV2Action.create = function (value0) {
          return new PaymentOptionsV2Action(value0);
      };
      return PaymentOptionsV2Action;
  })();
  var initialState = function (input) {
      return {
          orderSummaryState: UI_Components_Controller_AmountView.initialState
      };
  };
  var $$eval = function (v) {
      return function (state) {
          if (v instanceof AirtelAction) {
              return PrestoDOM_Utils.exit(Types.GoToAirtelNB.value);
          };
          if (v instanceof PaymentOptionsV2Action) {
              if (v.value0.value0 === "1") {
                  return PrestoDOM_Utils.exit(Types.AirtelCard.value);
              };
              return PrestoDOM_Utils["continue"](state);
          };
          return PrestoDOM_Utils["continue"](state);
      };
  };
  exports["AirtelAction"] = AirtelAction;
  exports["ToolBarAction"] = ToolBarAction;
  exports["AmountViewAction"] = AmountViewAction;
  exports["PopularBanksAction"] = PopularBanksAction;
  exports["PaymentOptionsV2Action"] = PaymentOptionsV2Action;
  exports["initialState"] = initialState;
  exports["eval"] = $$eval;
})(PS["UI.Merchants.Airtel.Controller.AirtelScreen"] = PS["UI.Merchants.Airtel.Controller.AirtelScreen"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Prelude = PS["Prelude"];
  var PrestoDOM = PS["PrestoDOM"];
  var PrestoDOM_Types_DomAttributes = PS["PrestoDOM.Types.DomAttributes"];
  var UI_Components_Config_AddCard = PS["UI.Components.Config.AddCard"];
  var UI_Components_Config_AmountView = PS["UI.Components.Config.AmountView"];
  var UI_Components_Config_BankListItem = PS["UI.Components.Config.BankListItem"];
  var UI_Components_Config_PaymentOptions = PS["UI.Components.Config.PaymentOptions"];
  var UI_Components_Config_PaymentOptionsV2 = PS["UI.Components.Config.PaymentOptionsV2"];
  var UI_Components_Config_PopularBanks = PS["UI.Components.Config.PopularBanks"];
  var UI_Components_Config_PrimaryButton = PS["UI.Components.Config.PrimaryButton"];
  var UI_Components_Config_SearchBox = PS["UI.Components.Config.SearchBox"];
  var UI_Components_Config_SecondaryButton = PS["UI.Components.Config.SecondaryButton"];
  var UI_Components_Config_ToolBar = PS["UI.Components.Config.ToolBar"];
  var UI_Merchants_Airtel_Controller_AirtelScreen = PS["UI.Merchants.Airtel.Controller.AirtelScreen"];
  var Utils = PS["Utils"];                 
  var screenFont = "Roboto-Bold";
  var searchBoxConfigAirtel = (function () {
      var searchBoxConfig = {
          hint: "Search your bank",
          searchIconVisibility: PrestoDOM_Types_DomAttributes.VISIBLE.value,
          tickVisibility: PrestoDOM_Types_DomAttributes.GONE.value,
          lineVisibility: PrestoDOM_Types_DomAttributes.VISIBLE.value,
          searchIconAlpha: 0.4,
          searchIconMargin: new PrestoDOM_Types_DomAttributes.Margin(10, 0, 5, 0),
          height: new PrestoDOM_Types_DomAttributes.V(52),
          padding: new PrestoDOM_Types_DomAttributes.Padding(10, 0, 10, 0),
          searchIconSize: new PrestoDOM_Types_DomAttributes.V(20),
          textSize: 20,
          font: screenFont,
          cornerRadius: UI_Components_Config_SearchBox.defConfig.value0.cornerRadius,
          editTextMargin: UI_Components_Config_SearchBox.defConfig.value0.editTextMargin,
          editTextPadding: UI_Components_Config_SearchBox.defConfig.value0.editTextPadding,
          fieldErrorMessage: UI_Components_Config_SearchBox.defConfig.value0.fieldErrorMessage,
          id: UI_Components_Config_SearchBox.defConfig.value0.id,
          imageUrl: UI_Components_Config_SearchBox.defConfig.value0.imageUrl,
          searchIconPadding: UI_Components_Config_SearchBox.defConfig.value0.searchIconPadding,
          stroke: UI_Components_Config_SearchBox.defConfig.value0.stroke
      };
      return new UI_Components_Config_SearchBox.Config(searchBoxConfig);
  })();
  var toolBarConfigAirtel = (function () {
      var toolBarConfig = {
          background: "#ED3833",
          text: "Select payment option",
          padding: new PrestoDOM_Types_DomAttributes.Padding(10, 0, 0, 0),
          imageUrl: "toolbar_arrow_back_white",
          font: screenFont,
          actionIcon: UI_Components_Config_ToolBar.defConfig.value0.actionIcon,
          actionIconSize: UI_Components_Config_ToolBar.defConfig.value0.actionIconSize,
          height: UI_Components_Config_ToolBar.defConfig.value0.height,
          hintColor: UI_Components_Config_ToolBar.defConfig.value0.hintColor,
          hintText: UI_Components_Config_ToolBar.defConfig.value0.hintText,
          iconDirection: UI_Components_Config_ToolBar.defConfig.value0.iconDirection,
          iconVisibility: UI_Components_Config_ToolBar.defConfig.value0.iconVisibility,
          inputUrl: UI_Components_Config_ToolBar.defConfig.value0.inputUrl,
          inputVisibility: UI_Components_Config_ToolBar.defConfig.value0.inputVisibility,
          parentPadding: UI_Components_Config_ToolBar.defConfig.value0.parentPadding,
          secondaryText: UI_Components_Config_ToolBar.defConfig.value0.secondaryText,
          secondaryTextVisible: UI_Components_Config_ToolBar.defConfig.value0.secondaryTextVisible,
          textColor: UI_Components_Config_ToolBar.defConfig.value0.textColor,
          textSize: UI_Components_Config_ToolBar.defConfig.value0.textSize,
          textStyle: UI_Components_Config_ToolBar.defConfig.value0.textStyle,
          textVisibility: UI_Components_Config_ToolBar.defConfig.value0.textVisibility,
          translationY: UI_Components_Config_ToolBar.defConfig.value0.translationY,
          translationZ: UI_Components_Config_ToolBar.defConfig.value0.translationZ,
          typeface: UI_Components_Config_ToolBar.defConfig.value0.typeface
      };
      return new UI_Components_Config_ToolBar.Config(toolBarConfig);
  })();
  var primarybuttonConfigAirtel = (function () {
      var config = {
          text: "Pay Now",
          background: "#3FAAF1",
          cornerRadius: 3.0,
          height: new PrestoDOM_Types_DomAttributes.V(40),
          font: screenFont,
          color: UI_Components_Config_PrimaryButton.defConfig.value0.color,
          margin: UI_Components_Config_PrimaryButton.defConfig.value0.margin,
          stroke: UI_Components_Config_PrimaryButton.defConfig.value0.stroke,
          textSize: UI_Components_Config_PrimaryButton.defConfig.value0.textSize,
          typeface: UI_Components_Config_PrimaryButton.defConfig.value0.typeface
      };
      return new UI_Components_Config_PrimaryButton.Config(config);
  })();
  var popularBanksConfigAirtel = UI_Components_Config_PopularBanks.defConfig;
  var phonepeConfig = (function () {
      var cardConfig = {
          amount: "\u20b9 25.0",
          text: "20% Cashback on prepaid recharge of Rs 399 and above. T&C",
          headingText: "PhonePe",
          imageUrl: "paymentoption_phonepe",
          id: "3",
          font: screenFont,
          amountBackground: UI_Components_Config_PaymentOptionsV2.defConfig.value0.amountBackground,
          amountColor: UI_Components_Config_PaymentOptionsV2.defConfig.value0.amountColor,
          amountCornerRadius: UI_Components_Config_PaymentOptionsV2.defConfig.value0.amountCornerRadius,
          amountGravity: UI_Components_Config_PaymentOptionsV2.defConfig.value0.amountGravity,
          amountStroke: UI_Components_Config_PaymentOptionsV2.defConfig.value0.amountStroke,
          amountWidth: UI_Components_Config_PaymentOptionsV2.defConfig.value0.amountWidth,
          boxPadding: UI_Components_Config_PaymentOptionsV2.defConfig.value0.boxPadding,
          color: UI_Components_Config_PaymentOptionsV2.defConfig.value0.color,
          discountVisibility: UI_Components_Config_PaymentOptionsV2.defConfig.value0.discountVisibility,
          gravity: UI_Components_Config_PaymentOptionsV2.defConfig.value0.gravity,
          headingHeight: UI_Components_Config_PaymentOptionsV2.defConfig.value0.headingHeight,
          headingWeight: UI_Components_Config_PaymentOptionsV2.defConfig.value0.headingWeight,
          height: UI_Components_Config_PaymentOptionsV2.defConfig.value0.height,
          imageHeight: UI_Components_Config_PaymentOptionsV2.defConfig.value0.imageHeight,
          imageWidth: UI_Components_Config_PaymentOptionsV2.defConfig.value0.imageWidth,
          lineSeparaterColor: UI_Components_Config_PaymentOptionsV2.defConfig.value0.lineSeparaterColor,
          lineSeparaterMargin: UI_Components_Config_PaymentOptionsV2.defConfig.value0.lineSeparaterMargin,
          lineSeparaterVisibility: UI_Components_Config_PaymentOptionsV2.defConfig.value0.lineSeparaterVisibility,
          padding: UI_Components_Config_PaymentOptionsV2.defConfig.value0.padding,
          parentPadding: UI_Components_Config_PaymentOptionsV2.defConfig.value0.parentPadding
      };
      return new UI_Components_Config_PaymentOptionsV2.Config(cardConfig);
  })();
  var paytmConfig = (function () {
      var cardConfig = {
          amount: "\u20b9 100.0",
          text: "20% Cashback on prepaid recharge of Rs 399 and above. T&C",
          imageUrl: "paymentoption_paytm",
          headingText: "Paytm",
          id: "2",
          font: screenFont,
          amountBackground: UI_Components_Config_PaymentOptionsV2.defConfig.value0.amountBackground,
          amountColor: UI_Components_Config_PaymentOptionsV2.defConfig.value0.amountColor,
          amountCornerRadius: UI_Components_Config_PaymentOptionsV2.defConfig.value0.amountCornerRadius,
          amountGravity: UI_Components_Config_PaymentOptionsV2.defConfig.value0.amountGravity,
          amountStroke: UI_Components_Config_PaymentOptionsV2.defConfig.value0.amountStroke,
          amountWidth: UI_Components_Config_PaymentOptionsV2.defConfig.value0.amountWidth,
          boxPadding: UI_Components_Config_PaymentOptionsV2.defConfig.value0.boxPadding,
          color: UI_Components_Config_PaymentOptionsV2.defConfig.value0.color,
          discountVisibility: UI_Components_Config_PaymentOptionsV2.defConfig.value0.discountVisibility,
          gravity: UI_Components_Config_PaymentOptionsV2.defConfig.value0.gravity,
          headingHeight: UI_Components_Config_PaymentOptionsV2.defConfig.value0.headingHeight,
          headingWeight: UI_Components_Config_PaymentOptionsV2.defConfig.value0.headingWeight,
          height: UI_Components_Config_PaymentOptionsV2.defConfig.value0.height,
          imageHeight: UI_Components_Config_PaymentOptionsV2.defConfig.value0.imageHeight,
          imageWidth: UI_Components_Config_PaymentOptionsV2.defConfig.value0.imageWidth,
          lineSeparaterColor: UI_Components_Config_PaymentOptionsV2.defConfig.value0.lineSeparaterColor,
          lineSeparaterMargin: UI_Components_Config_PaymentOptionsV2.defConfig.value0.lineSeparaterMargin,
          lineSeparaterVisibility: UI_Components_Config_PaymentOptionsV2.defConfig.value0.lineSeparaterVisibility,
          padding: UI_Components_Config_PaymentOptionsV2.defConfig.value0.padding,
          parentPadding: UI_Components_Config_PaymentOptionsV2.defConfig.value0.parentPadding
      };
      return new UI_Components_Config_PaymentOptionsV2.Config(cardConfig);
  })();
  var amountConfigAirtel = (function () {
      var amountConfig = {
          text: "\u20b91.0",
          gravity: PrestoDOM_Types_DomAttributes.RIGHT.value,
          color: "#000000",
          textSize: 18,
          headingText: "Payable Amount",
          typeface: PrestoDOM_Types_DomAttributes.BOLD.value,
          headingTypeface: PrestoDOM_Types_DomAttributes.BOLD.value,
          amountVisibility: PrestoDOM_Types_DomAttributes.GONE.value,
          height: new PrestoDOM_Types_DomAttributes.V(22),
          headingHeight: new PrestoDOM_Types_DomAttributes.V(22),
          font: screenFont,
          headingWidth: (function () {
              var $31 = Utils.os === "ANDROID";
              if ($31) {
                  return new PrestoDOM_Types_DomAttributes.V(0);
              };
              return PrestoDOM_Types_DomAttributes.V.create(Utils.getLabelWidth(UI_Components_Config_AmountView.defConfig.value0.amountText)(UI_Components_Config_AmountView.defConfig.value0.font)(UI_Components_Config_AmountView.defConfig.value0.amountTextSize)(0)(0));
          })(),
          width: (function () {
              var $32 = Utils.os === "ANDROID";
              if ($32) {
                  return new PrestoDOM_Types_DomAttributes.V(0);
              };
              return PrestoDOM_Types_DomAttributes.V.create(Utils.getLabelWidth(UI_Components_Config_AmountView.defConfig.value0.amountText)(UI_Components_Config_AmountView.defConfig.value0.font)(UI_Components_Config_AmountView.defConfig.value0.amountTextSize)(0)(0));
          })(),
          amountColor: UI_Components_Config_AmountView.defConfig.value0.amountColor,
          amountGravity: UI_Components_Config_AmountView.defConfig.value0.amountGravity,
          amountHeadingText: UI_Components_Config_AmountView.defConfig.value0.amountHeadingText,
          amountHeadingVisibility: UI_Components_Config_AmountView.defConfig.value0.amountHeadingVisibility,
          amountHeight: UI_Components_Config_AmountView.defConfig.value0.amountHeight,
          amountText: UI_Components_Config_AmountView.defConfig.value0.amountText,
          amountTextSize: UI_Components_Config_AmountView.defConfig.value0.amountTextSize,
          amountTypeface: UI_Components_Config_AmountView.defConfig.value0.amountTypeface,
          background: UI_Components_Config_AmountView.defConfig.value0.background,
          cornerRadius: UI_Components_Config_AmountView.defConfig.value0.cornerRadius,
          headingColor: UI_Components_Config_AmountView.defConfig.value0.headingColor,
          headingTextSize: UI_Components_Config_AmountView.defConfig.value0.headingTextSize,
          headingWeight: UI_Components_Config_AmountView.defConfig.value0.headingWeight,
          heightParent: UI_Components_Config_AmountView.defConfig.value0.heightParent,
          imageHeight: UI_Components_Config_AmountView.defConfig.value0.imageHeight,
          imageMargin: UI_Components_Config_AmountView.defConfig.value0.imageMargin,
          imageUrl: UI_Components_Config_AmountView.defConfig.value0.imageUrl,
          imageVisibility: UI_Components_Config_AmountView.defConfig.value0.imageVisibility,
          imageWidth: UI_Components_Config_AmountView.defConfig.value0.imageWidth,
          margin: UI_Components_Config_AmountView.defConfig.value0.margin,
          orientation: UI_Components_Config_AmountView.defConfig.value0.orientation,
          padding: UI_Components_Config_AmountView.defConfig.value0.padding,
          parentGravity: UI_Components_Config_AmountView.defConfig.value0.parentGravity,
          pipeVisibility: UI_Components_Config_AmountView.defConfig.value0.pipeVisibility,
          weight: UI_Components_Config_AmountView.defConfig.value0.weight,
          widthParent: UI_Components_Config_AmountView.defConfig.value0.widthParent
      };
      return new UI_Components_Config_AmountView.Config(amountConfig);
  })();
  var airtelNetBankConfig = (function () {
      var config = {
          radioDirection: UI_Components_Config_BankListItem.Right.value,
          radioOuterColor: "#A0A0A0",
          bankImageVisible: PrestoDOM_Types_DomAttributes.GONE.value,
          bankTextSize: 18,
          arrowVisible: PrestoDOM_Types_DomAttributes.GONE.value,
          font: screenFont,
          arrowImage: UI_Components_Config_BankListItem.defConfig.value0.arrowImage,
          background: UI_Components_Config_BankListItem.defConfig.value0.background,
          bankImagePadding: UI_Components_Config_BankListItem.defConfig.value0.bankImagePadding,
          bankImageSize: UI_Components_Config_BankListItem.defConfig.value0.bankImageSize,
          bankTextColor: UI_Components_Config_BankListItem.defConfig.value0.bankTextColor,
          bankTextFont: UI_Components_Config_BankListItem.defConfig.value0.bankTextFont,
          bankTextPadding: UI_Components_Config_BankListItem.defConfig.value0.bankTextPadding,
          cardHeight: UI_Components_Config_BankListItem.defConfig.value0.cardHeight,
          cardPadding: UI_Components_Config_BankListItem.defConfig.value0.cardPadding,
          dividerColor: UI_Components_Config_BankListItem.defConfig.value0.dividerColor,
          dividerMargin: UI_Components_Config_BankListItem.defConfig.value0.dividerMargin,
          dividerVisibility: UI_Components_Config_BankListItem.defConfig.value0.dividerVisibility,
          orientation: UI_Components_Config_BankListItem.defConfig.value0.orientation,
          radioImage: UI_Components_Config_BankListItem.defConfig.value0.radioImage,
          radioInnerColor: UI_Components_Config_BankListItem.defConfig.value0.radioInnerColor,
          radioMargin: UI_Components_Config_BankListItem.defConfig.value0.radioMargin,
          radioPadding: UI_Components_Config_BankListItem.defConfig.value0.radioPadding,
          radioSize: UI_Components_Config_BankListItem.defConfig.value0.radioSize
      };
      return new UI_Components_Config_BankListItem.Config(config);
  })();
  var airtelMoneyConfig = (function () {
      var cardConfig = {
          amount: "\u20b9 0.0",
          text: "50% Cashback on prepaid recharge of Rs 35 and above. T&C",
          headingText: "Airtel Money",
          imageUrl: "paymentoption_airtel_money",
          id: "4",
          font: screenFont,
          amountBackground: UI_Components_Config_PaymentOptionsV2.defConfig.value0.amountBackground,
          amountColor: UI_Components_Config_PaymentOptionsV2.defConfig.value0.amountColor,
          amountCornerRadius: UI_Components_Config_PaymentOptionsV2.defConfig.value0.amountCornerRadius,
          amountGravity: UI_Components_Config_PaymentOptionsV2.defConfig.value0.amountGravity,
          amountStroke: UI_Components_Config_PaymentOptionsV2.defConfig.value0.amountStroke,
          amountWidth: UI_Components_Config_PaymentOptionsV2.defConfig.value0.amountWidth,
          boxPadding: UI_Components_Config_PaymentOptionsV2.defConfig.value0.boxPadding,
          color: UI_Components_Config_PaymentOptionsV2.defConfig.value0.color,
          discountVisibility: UI_Components_Config_PaymentOptionsV2.defConfig.value0.discountVisibility,
          gravity: UI_Components_Config_PaymentOptionsV2.defConfig.value0.gravity,
          headingHeight: UI_Components_Config_PaymentOptionsV2.defConfig.value0.headingHeight,
          headingWeight: UI_Components_Config_PaymentOptionsV2.defConfig.value0.headingWeight,
          height: UI_Components_Config_PaymentOptionsV2.defConfig.value0.height,
          imageHeight: UI_Components_Config_PaymentOptionsV2.defConfig.value0.imageHeight,
          imageWidth: UI_Components_Config_PaymentOptionsV2.defConfig.value0.imageWidth,
          lineSeparaterColor: UI_Components_Config_PaymentOptionsV2.defConfig.value0.lineSeparaterColor,
          lineSeparaterMargin: UI_Components_Config_PaymentOptionsV2.defConfig.value0.lineSeparaterMargin,
          lineSeparaterVisibility: UI_Components_Config_PaymentOptionsV2.defConfig.value0.lineSeparaterVisibility,
          padding: UI_Components_Config_PaymentOptionsV2.defConfig.value0.padding,
          parentPadding: UI_Components_Config_PaymentOptionsV2.defConfig.value0.parentPadding
      };
      return new UI_Components_Config_PaymentOptionsV2.Config(cardConfig);
  })();
  var airtelCardNumberEditText = (function () {
      var editTextConfig = {
          text: "CARD NO",
          editTextBackground: "#f5f5f5",
          hint: "xxxx xxxx xxxx xxxx",
          imageUrl: "addcard_airtel_card_icon",
          parentMargin: new PrestoDOM_Types_DomAttributes.Margin(10, 10, 10, 10),
          font: screenFont,
          background: UI_Components_Config_AddCard.defEditTextConfig.value0.background,
          editTextSize: UI_Components_Config_AddCard.defEditTextConfig.value0.editTextSize,
          imageBackground: UI_Components_Config_AddCard.defEditTextConfig.value0.imageBackground,
          imageHeight: UI_Components_Config_AddCard.defEditTextConfig.value0.imageHeight,
          imageMargin: UI_Components_Config_AddCard.defEditTextConfig.value0.imageMargin,
          imagePadding: UI_Components_Config_AddCard.defEditTextConfig.value0.imagePadding,
          imageVisibility: UI_Components_Config_AddCard.defEditTextConfig.value0.imageVisibility,
          imageWidth: UI_Components_Config_AddCard.defEditTextConfig.value0.imageWidth,
          inputType: UI_Components_Config_AddCard.defEditTextConfig.value0.inputType,
          parentBackground: UI_Components_Config_AddCard.defEditTextConfig.value0.parentBackground,
          parentHeight: UI_Components_Config_AddCard.defEditTextConfig.value0.parentHeight,
          parentPadding: UI_Components_Config_AddCard.defEditTextConfig.value0.parentPadding,
          parentWidth: UI_Components_Config_AddCard.defEditTextConfig.value0.parentWidth,
          pipeVisibility: UI_Components_Config_AddCard.defEditTextConfig.value0.pipeVisibility,
          rowCornerRadius: UI_Components_Config_AddCard.defEditTextConfig.value0.rowCornerRadius,
          rowHeight: UI_Components_Config_AddCard.defEditTextConfig.value0.rowHeight,
          rowPadding: UI_Components_Config_AddCard.defEditTextConfig.value0.rowPadding,
          rowStroke: UI_Components_Config_AddCard.defEditTextConfig.value0.rowStroke,
          rowWidth: UI_Components_Config_AddCard.defEditTextConfig.value0.rowWidth,
          textColor: UI_Components_Config_AddCard.defEditTextConfig.value0.textColor,
          textHeight: UI_Components_Config_AddCard.defEditTextConfig.value0.textHeight,
          textMargin: UI_Components_Config_AddCard.defEditTextConfig.value0.textMargin,
          textSize: UI_Components_Config_AddCard.defEditTextConfig.value0.textSize,
          typeface: UI_Components_Config_AddCard.defEditTextConfig.value0.typeface
      };
      return new UI_Components_Config_AddCard.EditTextConfig(editTextConfig);
  })();
  var airtelCardNameEditText = (function () {
      var editTextConfig = {
          text: "NAME ON CARD",
          editTextBackground: "#f5f5f5",
          hint: "NAME ON CARD",
          imageVisibility: PrestoDOM_Types_DomAttributes.GONE.value,
          inputType: PrestoDOM_Types_DomAttributes.TypeText.value,
          font: screenFont,
          background: UI_Components_Config_AddCard.defEditTextConfig.value0.background,
          editTextSize: UI_Components_Config_AddCard.defEditTextConfig.value0.editTextSize,
          imageBackground: UI_Components_Config_AddCard.defEditTextConfig.value0.imageBackground,
          imageHeight: UI_Components_Config_AddCard.defEditTextConfig.value0.imageHeight,
          imageMargin: UI_Components_Config_AddCard.defEditTextConfig.value0.imageMargin,
          imagePadding: UI_Components_Config_AddCard.defEditTextConfig.value0.imagePadding,
          imageUrl: UI_Components_Config_AddCard.defEditTextConfig.value0.imageUrl,
          imageWidth: UI_Components_Config_AddCard.defEditTextConfig.value0.imageWidth,
          parentBackground: UI_Components_Config_AddCard.defEditTextConfig.value0.parentBackground,
          parentHeight: UI_Components_Config_AddCard.defEditTextConfig.value0.parentHeight,
          parentMargin: UI_Components_Config_AddCard.defEditTextConfig.value0.parentMargin,
          parentPadding: UI_Components_Config_AddCard.defEditTextConfig.value0.parentPadding,
          parentWidth: UI_Components_Config_AddCard.defEditTextConfig.value0.parentWidth,
          pipeVisibility: UI_Components_Config_AddCard.defEditTextConfig.value0.pipeVisibility,
          rowCornerRadius: UI_Components_Config_AddCard.defEditTextConfig.value0.rowCornerRadius,
          rowHeight: UI_Components_Config_AddCard.defEditTextConfig.value0.rowHeight,
          rowPadding: UI_Components_Config_AddCard.defEditTextConfig.value0.rowPadding,
          rowStroke: UI_Components_Config_AddCard.defEditTextConfig.value0.rowStroke,
          rowWidth: UI_Components_Config_AddCard.defEditTextConfig.value0.rowWidth,
          textColor: UI_Components_Config_AddCard.defEditTextConfig.value0.textColor,
          textHeight: UI_Components_Config_AddCard.defEditTextConfig.value0.textHeight,
          textMargin: UI_Components_Config_AddCard.defEditTextConfig.value0.textMargin,
          textSize: UI_Components_Config_AddCard.defEditTextConfig.value0.textSize,
          typeface: UI_Components_Config_AddCard.defEditTextConfig.value0.typeface
      };
      return new UI_Components_Config_AddCard.EditTextConfig(editTextConfig);
  })();
  var airtelCardDateEditText = (function () {
      var editTextConfig = {
          text: "EXPIRY DATE",
          editTextBackground: "#f5f5f5",
          hint: "MM/YY",
          imageVisibility: PrestoDOM_Types_DomAttributes.GONE.value,
          font: screenFont,
          background: UI_Components_Config_AddCard.defEditTextConfig.value0.background,
          editTextSize: UI_Components_Config_AddCard.defEditTextConfig.value0.editTextSize,
          imageBackground: UI_Components_Config_AddCard.defEditTextConfig.value0.imageBackground,
          imageHeight: UI_Components_Config_AddCard.defEditTextConfig.value0.imageHeight,
          imageMargin: UI_Components_Config_AddCard.defEditTextConfig.value0.imageMargin,
          imagePadding: UI_Components_Config_AddCard.defEditTextConfig.value0.imagePadding,
          imageUrl: UI_Components_Config_AddCard.defEditTextConfig.value0.imageUrl,
          imageWidth: UI_Components_Config_AddCard.defEditTextConfig.value0.imageWidth,
          inputType: UI_Components_Config_AddCard.defEditTextConfig.value0.inputType,
          parentBackground: UI_Components_Config_AddCard.defEditTextConfig.value0.parentBackground,
          parentHeight: UI_Components_Config_AddCard.defEditTextConfig.value0.parentHeight,
          parentMargin: UI_Components_Config_AddCard.defEditTextConfig.value0.parentMargin,
          parentPadding: UI_Components_Config_AddCard.defEditTextConfig.value0.parentPadding,
          parentWidth: UI_Components_Config_AddCard.defEditTextConfig.value0.parentWidth,
          pipeVisibility: UI_Components_Config_AddCard.defEditTextConfig.value0.pipeVisibility,
          rowCornerRadius: UI_Components_Config_AddCard.defEditTextConfig.value0.rowCornerRadius,
          rowHeight: UI_Components_Config_AddCard.defEditTextConfig.value0.rowHeight,
          rowPadding: UI_Components_Config_AddCard.defEditTextConfig.value0.rowPadding,
          rowStroke: UI_Components_Config_AddCard.defEditTextConfig.value0.rowStroke,
          rowWidth: UI_Components_Config_AddCard.defEditTextConfig.value0.rowWidth,
          textColor: UI_Components_Config_AddCard.defEditTextConfig.value0.textColor,
          textHeight: UI_Components_Config_AddCard.defEditTextConfig.value0.textHeight,
          textMargin: UI_Components_Config_AddCard.defEditTextConfig.value0.textMargin,
          textSize: UI_Components_Config_AddCard.defEditTextConfig.value0.textSize,
          typeface: UI_Components_Config_AddCard.defEditTextConfig.value0.typeface
      };
      return new UI_Components_Config_AddCard.EditTextConfig(editTextConfig);
  })();
  var airtelCardCvvEditText = (function () {
      var editTextConfig = {
          text: "CVV",
          editTextBackground: "#f5f5f5",
          hint: "CVV",
          imageVisibility: PrestoDOM_Types_DomAttributes.GONE.value,
          parentMargin: new PrestoDOM_Types_DomAttributes.Margin(0, 0, 10, 10),
          font: screenFont,
          background: UI_Components_Config_AddCard.defEditTextConfig.value0.background,
          editTextSize: UI_Components_Config_AddCard.defEditTextConfig.value0.editTextSize,
          imageBackground: UI_Components_Config_AddCard.defEditTextConfig.value0.imageBackground,
          imageHeight: UI_Components_Config_AddCard.defEditTextConfig.value0.imageHeight,
          imageMargin: UI_Components_Config_AddCard.defEditTextConfig.value0.imageMargin,
          imagePadding: UI_Components_Config_AddCard.defEditTextConfig.value0.imagePadding,
          imageUrl: UI_Components_Config_AddCard.defEditTextConfig.value0.imageUrl,
          imageWidth: UI_Components_Config_AddCard.defEditTextConfig.value0.imageWidth,
          inputType: UI_Components_Config_AddCard.defEditTextConfig.value0.inputType,
          parentBackground: UI_Components_Config_AddCard.defEditTextConfig.value0.parentBackground,
          parentHeight: UI_Components_Config_AddCard.defEditTextConfig.value0.parentHeight,
          parentPadding: UI_Components_Config_AddCard.defEditTextConfig.value0.parentPadding,
          parentWidth: UI_Components_Config_AddCard.defEditTextConfig.value0.parentWidth,
          pipeVisibility: UI_Components_Config_AddCard.defEditTextConfig.value0.pipeVisibility,
          rowCornerRadius: UI_Components_Config_AddCard.defEditTextConfig.value0.rowCornerRadius,
          rowHeight: UI_Components_Config_AddCard.defEditTextConfig.value0.rowHeight,
          rowPadding: UI_Components_Config_AddCard.defEditTextConfig.value0.rowPadding,
          rowStroke: UI_Components_Config_AddCard.defEditTextConfig.value0.rowStroke,
          rowWidth: UI_Components_Config_AddCard.defEditTextConfig.value0.rowWidth,
          textColor: UI_Components_Config_AddCard.defEditTextConfig.value0.textColor,
          textHeight: UI_Components_Config_AddCard.defEditTextConfig.value0.textHeight,
          textMargin: UI_Components_Config_AddCard.defEditTextConfig.value0.textMargin,
          textSize: UI_Components_Config_AddCard.defEditTextConfig.value0.textSize,
          typeface: UI_Components_Config_AddCard.defEditTextConfig.value0.typeface
      };
      return new UI_Components_Config_AddCard.EditTextConfig(editTextConfig);
  })();
  var airtelAddCardConfig = (function () {
      var config = {
          height: PrestoDOM_Types_DomAttributes.MATCH_PARENT.value,
          cornerRadius: 3.0,
          margin: new PrestoDOM_Types_DomAttributes.Margin(8, 8, 8, 8),
          padding: new PrestoDOM_Types_DomAttributes.Padding(8, 8, 8, 8),
          widthCvv: new PrestoDOM_Types_DomAttributes.V(0),
          stroke: "1,#BDBDBD",
          editTextCardConfig: airtelCardNumberEditText,
          editTextNameConfig: airtelCardNameEditText,
          editTextDateConfig: airtelCardDateEditText,
          editTextCvvConfig: airtelCardCvvEditText,
          font: screenFont,
          background: UI_Components_Config_AddCard.defConfig.value0.background,
          editTextCardConfigV2: UI_Components_Config_AddCard.defConfig.value0.editTextCardConfigV2,
          editTextCvvConfigV2: UI_Components_Config_AddCard.defConfig.value0.editTextCvvConfigV2,
          editTextDateConfigV2: UI_Components_Config_AddCard.defConfig.value0.editTextDateConfigV2,
          editTextNameConfigV2: UI_Components_Config_AddCard.defConfig.value0.editTextNameConfigV2,
          imageUrl: UI_Components_Config_AddCard.defConfig.value0.imageUrl,
          isFormVisible: UI_Components_Config_AddCard.defConfig.value0.isFormVisible,
          version: UI_Components_Config_AddCard.defConfig.value0.version,
          widthDate: UI_Components_Config_AddCard.defConfig.value0.widthDate
      };
      return new UI_Components_Config_AddCard.Config(config);
  })();
  var addCardConfig = (function () {
      var cardConfig = {
          amount: "",
          text: "Debit/Credit Card",
          imageUrl: "paymentoption_airtel_new_card",
          headingText: "New Card",
          headingHeight: new PrestoDOM_Types_DomAttributes.V(0),
          headingWeight: 1.0,
          discountVisibility: PrestoDOM_Types_DomAttributes.GONE.value,
          boxPadding: new PrestoDOM_Types_DomAttributes.Padding(0, 0, 0, 0),
          padding: new PrestoDOM_Types_DomAttributes.Padding(0, 0, 0, 0),
          gravity: PrestoDOM_Types_DomAttributes.CENTER_VERTICAL.value,
          id: "1",
          font: screenFont,
          amountBackground: UI_Components_Config_PaymentOptionsV2.defConfig.value0.amountBackground,
          amountColor: UI_Components_Config_PaymentOptionsV2.defConfig.value0.amountColor,
          amountCornerRadius: UI_Components_Config_PaymentOptionsV2.defConfig.value0.amountCornerRadius,
          amountGravity: UI_Components_Config_PaymentOptionsV2.defConfig.value0.amountGravity,
          amountStroke: UI_Components_Config_PaymentOptionsV2.defConfig.value0.amountStroke,
          amountWidth: UI_Components_Config_PaymentOptionsV2.defConfig.value0.amountWidth,
          color: UI_Components_Config_PaymentOptionsV2.defConfig.value0.color,
          height: UI_Components_Config_PaymentOptionsV2.defConfig.value0.height,
          imageHeight: UI_Components_Config_PaymentOptionsV2.defConfig.value0.imageHeight,
          imageWidth: UI_Components_Config_PaymentOptionsV2.defConfig.value0.imageWidth,
          lineSeparaterColor: UI_Components_Config_PaymentOptionsV2.defConfig.value0.lineSeparaterColor,
          lineSeparaterMargin: UI_Components_Config_PaymentOptionsV2.defConfig.value0.lineSeparaterMargin,
          lineSeparaterVisibility: UI_Components_Config_PaymentOptionsV2.defConfig.value0.lineSeparaterVisibility,
          parentPadding: UI_Components_Config_PaymentOptionsV2.defConfig.value0.parentPadding
      };
      return new UI_Components_Config_PaymentOptionsV2.Config(cardConfig);
  })();
  exports["screenFont"] = screenFont;
  exports["toolBarConfigAirtel"] = toolBarConfigAirtel;
  exports["searchBoxConfigAirtel"] = searchBoxConfigAirtel;
  exports["primarybuttonConfigAirtel"] = primarybuttonConfigAirtel;
  exports["popularBanksConfigAirtel"] = popularBanksConfigAirtel;
  exports["amountConfigAirtel"] = amountConfigAirtel;
  exports["airtelMoneyConfig"] = airtelMoneyConfig;
  exports["phonepeConfig"] = phonepeConfig;
  exports["paytmConfig"] = paytmConfig;
  exports["addCardConfig"] = addCardConfig;
  exports["airtelNetBankConfig"] = airtelNetBankConfig;
  exports["airtelAddCardConfig"] = airtelAddCardConfig;
  exports["airtelCardNumberEditText"] = airtelCardNumberEditText;
  exports["airtelCardNameEditText"] = airtelCardNameEditText;
  exports["airtelCardDateEditText"] = airtelCardDateEditText;
  exports["airtelCardCvvEditText"] = airtelCardCvvEditText;
})(PS["UI.Merchants.Airtel.Config"] = PS["UI.Merchants.Airtel.Config"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Effect = PS["Effect"];
  var Prelude = PS["Prelude"];
  var PrestoDOM = PS["PrestoDOM"];
  var PrestoDOM_Events = PS["PrestoDOM.Events"];
  var PrestoDOM_Utils = PS["PrestoDOM.Utils"];
  var Types = PS["Types"];
  var UI_Components_Config_BankListItem = PS["UI.Components.Config.BankListItem"];
  var UI_Components_Controller_AddCard = PS["UI.Components.Controller.AddCard"];
  var UI_Components_Controller_BankListItem = PS["UI.Components.Controller.BankListItem"];
  var UI_Components_Controller_PaymentOptions = PS["UI.Components.Controller.PaymentOptions"];
  var UI_Components_Controller_PaymentOptionsV2 = PS["UI.Components.Controller.PaymentOptionsV2"];
  var UI_Components_Controller_PrimaryButton = PS["UI.Components.Controller.PrimaryButton"];
  var UI_Components_Controller_SearchBox = PS["UI.Components.Controller.SearchBox"];
  var UI_Components_Controller_ToolBar = PS["UI.Components.Controller.ToolBar"];
  var UI_Merchants_Dream11_Controller_AddCardScreen = PS["UI.Merchants.Dream11.Controller.AddCardScreen"];                 
  var AirtelAction = (function () {
      function AirtelAction() {

      };
      AirtelAction.value = new AirtelAction();
      return AirtelAction;
  })();
  var ToolBarAction = (function () {
      function ToolBarAction(value0) {
          this.value0 = value0;
      };
      ToolBarAction.create = function (value0) {
          return new ToolBarAction(value0);
      };
      return ToolBarAction;
  })();
  var AddCardAction = (function () {
      function AddCardAction(value0) {
          this.value0 = value0;
      };
      AddCardAction.create = function (value0) {
          return new AddCardAction(value0);
      };
      return AddCardAction;
  })();
  var PrimaryButtonAction = (function () {
      function PrimaryButtonAction(value0) {
          this.value0 = value0;
      };
      PrimaryButtonAction.create = function (value0) {
          return new PrimaryButtonAction(value0);
      };
      return PrimaryButtonAction;
  })();
  var initialState = function (input) {
      return {
          bankListItemState: UI_Components_Controller_BankListItem.initialState
      };
  };
  var $$eval = function (v) {
      return function (state) {
          if (v instanceof AirtelAction) {
              return PrestoDOM_Utils["continue"](state);
          };
          return PrestoDOM_Utils["continue"](state);
      };
  };
  exports["AirtelAction"] = AirtelAction;
  exports["ToolBarAction"] = ToolBarAction;
  exports["AddCardAction"] = AddCardAction;
  exports["PrimaryButtonAction"] = PrimaryButtonAction;
  exports["initialState"] = initialState;
  exports["eval"] = $$eval;
})(PS["UI.Merchants.Airtel.Controller.AirtelCardScreen"] = PS["UI.Merchants.Airtel.Controller.AirtelCardScreen"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Effect = PS["Effect"];
  var Halogen_VDom_Types = PS["Halogen.VDom.Types"];
  var Prelude = PS["Prelude"];
  var PrestoDOM = PS["PrestoDOM"];
  var PrestoDOM_Elements_Elements = PS["PrestoDOM.Elements.Elements"];
  var PrestoDOM_Properties = PS["PrestoDOM.Properties"];
  var PrestoDOM_Types_DomAttributes = PS["PrestoDOM.Types.DomAttributes"];
  var UI_Components_Config_ToolBar = PS["UI.Components.Config.ToolBar"];
  var UI_Components_View_AddCard = PS["UI.Components.View.AddCard"];
  var UI_Components_View_PrimaryButton = PS["UI.Components.View.PrimaryButton"];
  var UI_Components_View_ToolBar = PS["UI.Components.View.ToolBar"];
  var UI_Merchants_Airtel_Config = PS["UI.Merchants.Airtel.Config"];
  var UI_Merchants_Airtel_Controller_AirtelCardScreen = PS["UI.Merchants.Airtel.Controller.AirtelCardScreen"];                 
  var view = function (push) {
      return function (state) {
          var finalConfig = {
              text: "Add New Card",
              actionIcon: UI_Merchants_Airtel_Config.toolBarConfigAirtel.value0.actionIcon,
              actionIconSize: UI_Merchants_Airtel_Config.toolBarConfigAirtel.value0.actionIconSize,
              background: UI_Merchants_Airtel_Config.toolBarConfigAirtel.value0.background,
              font: UI_Merchants_Airtel_Config.toolBarConfigAirtel.value0.font,
              height: UI_Merchants_Airtel_Config.toolBarConfigAirtel.value0.height,
              hintColor: UI_Merchants_Airtel_Config.toolBarConfigAirtel.value0.hintColor,
              hintText: UI_Merchants_Airtel_Config.toolBarConfigAirtel.value0.hintText,
              iconDirection: UI_Merchants_Airtel_Config.toolBarConfigAirtel.value0.iconDirection,
              iconVisibility: UI_Merchants_Airtel_Config.toolBarConfigAirtel.value0.iconVisibility,
              imageUrl: UI_Merchants_Airtel_Config.toolBarConfigAirtel.value0.imageUrl,
              inputUrl: UI_Merchants_Airtel_Config.toolBarConfigAirtel.value0.inputUrl,
              inputVisibility: UI_Merchants_Airtel_Config.toolBarConfigAirtel.value0.inputVisibility,
              padding: UI_Merchants_Airtel_Config.toolBarConfigAirtel.value0.padding,
              parentPadding: UI_Merchants_Airtel_Config.toolBarConfigAirtel.value0.parentPadding,
              secondaryText: UI_Merchants_Airtel_Config.toolBarConfigAirtel.value0.secondaryText,
              secondaryTextVisible: UI_Merchants_Airtel_Config.toolBarConfigAirtel.value0.secondaryTextVisible,
              textColor: UI_Merchants_Airtel_Config.toolBarConfigAirtel.value0.textColor,
              textSize: UI_Merchants_Airtel_Config.toolBarConfigAirtel.value0.textSize,
              textStyle: UI_Merchants_Airtel_Config.toolBarConfigAirtel.value0.textStyle,
              textVisibility: UI_Merchants_Airtel_Config.toolBarConfigAirtel.value0.textVisibility,
              translationY: UI_Merchants_Airtel_Config.toolBarConfigAirtel.value0.translationY,
              translationZ: UI_Merchants_Airtel_Config.toolBarConfigAirtel.value0.translationZ,
              typeface: UI_Merchants_Airtel_Config.toolBarConfigAirtel.value0.typeface
          };
          return PrestoDOM_Elements_Elements.linearLayout_("AirtelCard")([ PrestoDOM_Properties.height(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.width(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.background("#ffffff"), PrestoDOM_Properties.orientation(PrestoDOM_Types_DomAttributes.VERTICAL.value) ])([ UI_Components_View_ToolBar.view(function ($3) {
              return push(UI_Merchants_Airtel_Controller_AirtelCardScreen.ToolBarAction.create($3));
          })(new UI_Components_Config_ToolBar.Config(finalConfig)), PrestoDOM_Elements_Elements.scrollView([ PrestoDOM_Properties.height(new PrestoDOM_Types_DomAttributes.V(0)), PrestoDOM_Properties.weight(1.0), PrestoDOM_Properties.width(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value) ])([ PrestoDOM_Elements_Elements.linearLayout([ PrestoDOM_Properties.height(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.width(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.orientation(PrestoDOM_Types_DomAttributes.VERTICAL.value) ])([ PrestoDOM_Elements_Elements.textView([ PrestoDOM_Properties.width(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.height(new PrestoDOM_Types_DomAttributes.V(60)), PrestoDOM_Properties.gravity(PrestoDOM_Types_DomAttributes.CENTER.value), PrestoDOM_Properties.text("DEBIT/CREDIT CARD"), PrestoDOM_Properties.color("#000000"), PrestoDOM_Properties.textSize(18) ]), UI_Components_View_AddCard.view(function ($4) {
              return push(UI_Merchants_Airtel_Controller_AirtelCardScreen.AddCardAction.create($4));
          })(UI_Merchants_Airtel_Config.airtelAddCardConfig), PrestoDOM_Elements_Elements.textView([ PrestoDOM_Properties.width(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.height(new PrestoDOM_Types_DomAttributes.V(50)), PrestoDOM_Properties.margin(new PrestoDOM_Types_DomAttributes.Margin(8, 8, 8, 0)), PrestoDOM_Properties.text("We'll save this card for faster transactions in future."), PrestoDOM_Properties.textSize(18) ]), PrestoDOM_Elements_Elements.textView([ PrestoDOM_Properties.width(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.height(new PrestoDOM_Types_DomAttributes.V(50)), PrestoDOM_Properties.margin(new PrestoDOM_Types_DomAttributes.Margin(8, 8, 8, 0)), PrestoDOM_Properties.text("At any point of time, if you want to remove the card, please go to:"), PrestoDOM_Properties.textSize(16) ]), PrestoDOM_Elements_Elements.linearLayout([ PrestoDOM_Properties.width(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.height(new PrestoDOM_Types_DomAttributes.V(30)), PrestoDOM_Properties.orientation(PrestoDOM_Types_DomAttributes.HORIZONTAL.value), PrestoDOM_Properties.margin(new PrestoDOM_Types_DomAttributes.Margin(8, 8, 8, 0)) ])([ PrestoDOM_Elements_Elements.imageView([ PrestoDOM_Properties.width(new PrestoDOM_Types_DomAttributes.V(30)), PrestoDOM_Properties.height(new PrestoDOM_Types_DomAttributes.V(20)), PrestoDOM_Properties.imageUrl("addcard_airtel_settings_icon") ]), PrestoDOM_Elements_Elements.textView([ PrestoDOM_Properties.width(new PrestoDOM_Types_DomAttributes.V(0)), PrestoDOM_Properties.height(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.weight(1.0), PrestoDOM_Properties.text("settings"), PrestoDOM_Properties.textSize(16), PrestoDOM_Properties.typeface(PrestoDOM_Types_DomAttributes.BOLD.value), PrestoDOM_Properties.color("#000000"), PrestoDOM_Properties.padding(new PrestoDOM_Types_DomAttributes.Padding(2, 0, 0, 0)) ]) ]) ]) ]), UI_Components_View_PrimaryButton.view(function ($5) {
              return push(UI_Merchants_Airtel_Controller_AirtelCardScreen.PrimaryButtonAction.create($5));
          })(UI_Merchants_Airtel_Config.primarybuttonConfigAirtel) ]);
      };
  };
  var screen = function (input) {
      return {
          initialState: UI_Merchants_Airtel_Controller_AirtelCardScreen.initialState(input),
          view: view,
          "eval": UI_Merchants_Airtel_Controller_AirtelCardScreen["eval"]
      };
  };
  exports["screen"] = screen;
  exports["view"] = view;
})(PS["UI.Merchants.Airtel.View.AirtelCardScreen"] = PS["UI.Merchants.Airtel.View.AirtelCardScreen"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Effect = PS["Effect"];
  var Prelude = PS["Prelude"];
  var PrestoDOM = PS["PrestoDOM"];
  var PrestoDOM_Elements_Elements = PS["PrestoDOM.Elements.Elements"];
  var PrestoDOM_Properties = PS["PrestoDOM.Properties"];
  var PrestoDOM_Types_DomAttributes = PS["PrestoDOM.Types.DomAttributes"];
  var Types = PS["Types"];
  var UI_Components_Config_BankListItem = PS["UI.Components.Config.BankListItem"];
  var UI_Components_Controller_BankListItem = PS["UI.Components.Controller.BankListItem"];                 
  var radioButton = function (push) {
      return function (config) {
          return function (state) {
              return [ PrestoDOM_Elements_Elements.linearLayout([ PrestoDOM_Properties.height(config.radioSize), PrestoDOM_Properties.width(config.radioSize), PrestoDOM_Properties.cornerRadius(100.0), PrestoDOM_Properties.stroke("1," + config.radioOuterColor), PrestoDOM_Properties.background("#ffffff"), PrestoDOM_Properties.gravity(PrestoDOM_Types_DomAttributes.CENTER.value), PrestoDOM_Properties.padding(config.radioPadding), PrestoDOM_Properties.margin(config.radioMargin) ])([ PrestoDOM_Elements_Elements.imageView([ PrestoDOM_Properties.height(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.width(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.cornerRadius(100.0), PrestoDOM_Properties.visibility((function () {
                  if (state.active) {
                      return PrestoDOM_Types_DomAttributes.VISIBLE.value;
                  };
                  return PrestoDOM_Types_DomAttributes.GONE.value;
              })()), PrestoDOM_Properties.background((function () {
                  if (state.active) {
                      return config.radioInnerColor;
                  };
                  return "#00FFFFFF";
              })()), PrestoDOM_Properties.imageUrl(config.radioImage) ]) ]) ];
          };
      };
  };
  var body = function (push) {
      return function (v) {
          return function (state) {
              return Data_Semigroup.append(Data_Semigroup.semigroupArray)((function () {
                  if (v.value0.radioDirection instanceof UI_Components_Config_BankListItem.Left) {
                      return radioButton(push)(v.value0)(state);
                  };
                  return [  ];
              })())(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ PrestoDOM_Elements_Elements.imageView([ PrestoDOM_Properties.height(new PrestoDOM_Types_DomAttributes.V(v.value0.bankImageSize)), PrestoDOM_Properties.width(new PrestoDOM_Types_DomAttributes.V(v.value0.bankImageSize)), PrestoDOM_Properties.margin((function () {
                  if (v.value0.orientation instanceof PrestoDOM_Types_DomAttributes.HORIZONTAL) {
                      return new PrestoDOM_Types_DomAttributes.MarginLeft(10);
                  };
                  if (v.value0.orientation instanceof PrestoDOM_Types_DomAttributes.VERTICAL) {
                      return new PrestoDOM_Types_DomAttributes.MarginLeft(0);
                  };
                  throw new Error("Failed pattern match at UI.Components.View.BankListItem (line 47, column 26 - line 49, column 55): " + [ v.value0.orientation.constructor.name ]);
              })()), PrestoDOM_Properties.padding(v.value0.bankImagePadding), PrestoDOM_Properties.visibility(v.value0.bankImageVisible), PrestoDOM_Properties.imageUrl(state.logo) ]), PrestoDOM_Elements_Elements.textView([ PrestoDOM_Properties.height(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.weight(1.0), PrestoDOM_Properties.color(v.value0.bankTextColor), PrestoDOM_Properties.margin((function () {
                  if (v.value0.orientation instanceof PrestoDOM_Types_DomAttributes.HORIZONTAL) {
                      return new PrestoDOM_Types_DomAttributes.MarginLeft(10);
                  };
                  if (v.value0.orientation instanceof PrestoDOM_Types_DomAttributes.VERTICAL) {
                      return new PrestoDOM_Types_DomAttributes.MarginTop(0);
                  };
                  throw new Error("Failed pattern match at UI.Components.View.BankListItem (line 58, column 26 - line 60, column 54): " + [ v.value0.orientation.constructor.name ]);
              })()), PrestoDOM_Properties.padding(v.value0.bankTextPadding), PrestoDOM_Properties.textSize(v.value0.bankTextSize), PrestoDOM_Properties.gravity(PrestoDOM_Types_DomAttributes.CENTER_VERTICAL.value), PrestoDOM_Properties.text(state.name), PrestoDOM_Properties.typeface((function () {
                  if (state.active) {
                      return PrestoDOM_Types_DomAttributes.BOLD.value;
                  };
                  return PrestoDOM_Types_DomAttributes.NORMAL.value;
              })()), PrestoDOM_Properties.fontStyle(v.value0.font) ]) ])(Data_Semigroup.append(Data_Semigroup.semigroupArray)((function () {
                  if (v.value0.radioDirection instanceof UI_Components_Config_BankListItem.Right) {
                      return radioButton(push)(v.value0)(state);
                  };
                  return [  ];
              })())([ PrestoDOM_Elements_Elements.imageView([ PrestoDOM_Properties.height(new PrestoDOM_Types_DomAttributes.V(24)), PrestoDOM_Properties.width(new PrestoDOM_Types_DomAttributes.V(24)), PrestoDOM_Properties.visibility(v.value0.arrowVisible), PrestoDOM_Properties.imageUrl(v.value0.arrowImage) ]) ])));
          };
      };
  };
  var view = function (push) {
      return function (v) {
          return function (state) {
              return PrestoDOM_Elements_Elements.linearLayout(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ PrestoDOM_Properties.height(new PrestoDOM_Types_DomAttributes.V(v.value0.cardHeight)), PrestoDOM_Properties.width(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.background(v.value0.background), PrestoDOM_Properties.gravity(PrestoDOM_Types_DomAttributes.CENTER.value), PrestoDOM_Properties.orientation(PrestoDOM_Types_DomAttributes.VERTICAL.value), PrestoDOM_Properties.padding(v.value0.cardPadding) ])(UI_Components_Controller_BankListItem.overrides("Clicked")(push)(state)))([ PrestoDOM_Elements_Elements.linearLayout([ PrestoDOM_Properties.height(new PrestoDOM_Types_DomAttributes.V(0)), PrestoDOM_Properties.width(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.weight(1.0), PrestoDOM_Properties.gravity(PrestoDOM_Types_DomAttributes.CENTER.value), PrestoDOM_Properties.orientation(v.value0.orientation) ])(body(push)(new UI_Components_Config_BankListItem.Config(v.value0))(state)), PrestoDOM_Elements_Elements.linearLayout([ PrestoDOM_Properties.height(new PrestoDOM_Types_DomAttributes.V(1)), PrestoDOM_Properties.width(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.margin(v.value0.dividerMargin), PrestoDOM_Properties.visibility(v.value0.dividerVisibility), PrestoDOM_Properties.background(v.value0.dividerColor) ])([  ]) ]);
          };
      };
  };
  exports["view"] = view;
  exports["body"] = body;
  exports["radioButton"] = radioButton;
})(PS["UI.Components.View.BankListItem"] = PS["UI.Components.View.BankListItem"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Ring = PS["Data.Ring"];
  var Effect = PS["Effect"];
  var Prelude = PS["Prelude"];
  var PrestoDOM = PS["PrestoDOM"];
  var PrestoDOM_Elements_Elements = PS["PrestoDOM.Elements.Elements"];
  var PrestoDOM_Properties = PS["PrestoDOM.Properties"];
  var PrestoDOM_Types_DomAttributes = PS["PrestoDOM.Types.DomAttributes"];
  var Types = PS["Types"];
  var UI_Components_Config_SearchBox = PS["UI.Components.Config.SearchBox"];
  var UI_Components_Controller_SearchBox = PS["UI.Components.Controller.SearchBox"];                 
  var view = function (push) {
      return function (v) {
          return PrestoDOM_Elements_Elements.linearLayout([ PrestoDOM_Properties.height(v.value0.height), PrestoDOM_Properties.width(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.gravity(PrestoDOM_Types_DomAttributes.CENTER_VERTICAL.value), PrestoDOM_Properties.cornerRadius(v.value0.cornerRadius), PrestoDOM_Properties.orientation(PrestoDOM_Types_DomAttributes.HORIZONTAL.value), PrestoDOM_Properties.background("#ffffff"), PrestoDOM_Properties.stroke(v.value0.stroke), PrestoDOM_Properties.padding(v.value0.padding) ])([ PrestoDOM_Elements_Elements.imageView([ PrestoDOM_Properties.height(v.value0.searchIconSize), PrestoDOM_Properties.width(v.value0.searchIconSize), PrestoDOM_Properties.imageUrl(v.value0.imageUrl), PrestoDOM_Properties.padding(v.value0.searchIconPadding), PrestoDOM_Properties.margin(v.value0.searchIconMargin), PrestoDOM_Properties.visibility(v.value0.searchIconVisibility), PrestoDOM_Properties.alpha(v.value0.searchIconAlpha) ]), PrestoDOM_Elements_Elements.linearLayout([ PrestoDOM_Properties.height(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.width(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.gravity(PrestoDOM_Types_DomAttributes.CENTER_VERTICAL.value), PrestoDOM_Properties.orientation(PrestoDOM_Types_DomAttributes.VERTICAL.value) ])([ PrestoDOM_Elements_Elements.editText([ PrestoDOM_Properties.height(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.width(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.weight(1.0), PrestoDOM_Properties.textSize(v.value0.textSize), PrestoDOM_Properties.color("#000000"), PrestoDOM_Properties.background("#ffffff"), PrestoDOM_Properties.hint(v.value0.hint), PrestoDOM_Properties.hintColor("#aaaaaa"), PrestoDOM_Properties.lineHeight("21px"), PrestoDOM_Properties.singleLine(true), PrestoDOM_Properties.padding(new PrestoDOM_Types_DomAttributes.Padding(8, 0, 0, 0)), PrestoDOM_Properties.margin(new PrestoDOM_Types_DomAttributes.MarginTop(4)), PrestoDOM_Properties.gravity(PrestoDOM_Types_DomAttributes.CENTER_VERTICAL.value) ]), PrestoDOM_Elements_Elements.linearLayout([ PrestoDOM_Properties.height(new PrestoDOM_Types_DomAttributes.V(4)), PrestoDOM_Properties.width(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.orientation(PrestoDOM_Types_DomAttributes.HORIZONTAL.value), PrestoDOM_Properties.gravity(PrestoDOM_Types_DomAttributes.BOTTOM.value) ])([ PrestoDOM_Elements_Elements.linearLayout([ PrestoDOM_Properties.width(new PrestoDOM_Types_DomAttributes.V(1)), PrestoDOM_Properties.height(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.background("#aaaaaa"), PrestoDOM_Properties.visibility(v.value0.tickVisibility) ])([  ]), PrestoDOM_Elements_Elements.linearLayout([ PrestoDOM_Properties.height(new PrestoDOM_Types_DomAttributes.V(1)), PrestoDOM_Properties.width(new PrestoDOM_Types_DomAttributes.V(-1 | 0)), PrestoDOM_Properties.weight(1.0), PrestoDOM_Properties.margin(new PrestoDOM_Types_DomAttributes.Margin(0, 3, 0, 0)), PrestoDOM_Properties.visibility(v.value0.lineVisibility), PrestoDOM_Properties.background("#aaaaaa") ])([  ]), PrestoDOM_Elements_Elements.linearLayout([ PrestoDOM_Properties.width(new PrestoDOM_Types_DomAttributes.V(1)), PrestoDOM_Properties.height(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.background("#aaaaaa"), PrestoDOM_Properties.visibility(v.value0.tickVisibility) ])([  ]) ]) ]), PrestoDOM_Elements_Elements.textView([ PrestoDOM_Properties.width(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.height(new PrestoDOM_Types_DomAttributes.V(20)), PrestoDOM_Properties.color("#ff0000"), PrestoDOM_Properties.text(v.value0.fieldErrorMessage), PrestoDOM_Properties.fontStyle(v.value0.font) ]) ]);
      };
  };
  exports["view"] = view;
})(PS["UI.Components.View.SearchBox"] = PS["UI.Components.View.SearchBox"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Effect = PS["Effect"];
  var Prelude = PS["Prelude"];
  var PrestoDOM = PS["PrestoDOM"];
  var PrestoDOM_Events = PS["PrestoDOM.Events"];
  var PrestoDOM_Utils = PS["PrestoDOM.Utils"];
  var Types = PS["Types"];
  var UI_Components_Config_BankListItem = PS["UI.Components.Config.BankListItem"];
  var UI_Components_Controller_BankListItem = PS["UI.Components.Controller.BankListItem"];
  var UI_Components_Controller_PaymentOptions = PS["UI.Components.Controller.PaymentOptions"];
  var UI_Components_Controller_PaymentOptionsV2 = PS["UI.Components.Controller.PaymentOptionsV2"];
  var UI_Components_Controller_PrimaryButton = PS["UI.Components.Controller.PrimaryButton"];
  var UI_Components_Controller_SearchBox = PS["UI.Components.Controller.SearchBox"];
  var UI_Components_Controller_ToolBar = PS["UI.Components.Controller.ToolBar"];
  var UI_Merchants_Dream11_Controller_AddCardScreen = PS["UI.Merchants.Dream11.Controller.AddCardScreen"];                 
  var AirtelAction = (function () {
      function AirtelAction() {

      };
      AirtelAction.value = new AirtelAction();
      return AirtelAction;
  })();
  var ToolBarAction = (function () {
      function ToolBarAction(value0) {
          this.value0 = value0;
      };
      ToolBarAction.create = function (value0) {
          return new ToolBarAction(value0);
      };
      return ToolBarAction;
  })();
  var SearchBoxAction = (function () {
      function SearchBoxAction(value0) {
          this.value0 = value0;
      };
      SearchBoxAction.create = function (value0) {
          return new SearchBoxAction(value0);
      };
      return SearchBoxAction;
  })();
  var BankListItemAction = (function () {
      function BankListItemAction(value0) {
          this.value0 = value0;
      };
      BankListItemAction.create = function (value0) {
          return new BankListItemAction(value0);
      };
      return BankListItemAction;
  })();
  var PrimaryButtonAction = (function () {
      function PrimaryButtonAction(value0) {
          this.value0 = value0;
      };
      PrimaryButtonAction.create = function (value0) {
          return new PrimaryButtonAction(value0);
      };
      return PrimaryButtonAction;
  })();
  var initialState = function (input) {
      return {
          bankListItemState: UI_Components_Controller_BankListItem.initialState
      };
  };
  var $$eval = function (v) {
      return function (state) {
          if (v instanceof AirtelAction) {
              return PrestoDOM_Utils["continue"](state);
          };
          return PrestoDOM_Utils["continue"](state);
      };
  };
  exports["AirtelAction"] = AirtelAction;
  exports["ToolBarAction"] = ToolBarAction;
  exports["SearchBoxAction"] = SearchBoxAction;
  exports["BankListItemAction"] = BankListItemAction;
  exports["PrimaryButtonAction"] = PrimaryButtonAction;
  exports["initialState"] = initialState;
  exports["eval"] = $$eval;
})(PS["UI.Merchants.Airtel.Controller.AirtelNetBankingScreen"] = PS["UI.Merchants.Airtel.Controller.AirtelNetBankingScreen"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Effect = PS["Effect"];
  var Halogen_VDom_Types = PS["Halogen.VDom.Types"];
  var Prelude = PS["Prelude"];
  var PrestoDOM = PS["PrestoDOM"];
  var PrestoDOM_Elements_Elements = PS["PrestoDOM.Elements.Elements"];
  var PrestoDOM_Properties = PS["PrestoDOM.Properties"];
  var PrestoDOM_Types_DomAttributes = PS["PrestoDOM.Types.DomAttributes"];
  var UI_Components_Config_ToolBar = PS["UI.Components.Config.ToolBar"];
  var UI_Components_View_BankListItem = PS["UI.Components.View.BankListItem"];
  var UI_Components_View_PrimaryButton = PS["UI.Components.View.PrimaryButton"];
  var UI_Components_View_SearchBox = PS["UI.Components.View.SearchBox"];
  var UI_Components_View_ToolBar = PS["UI.Components.View.ToolBar"];
  var UI_Merchants_Airtel_Config = PS["UI.Merchants.Airtel.Config"];
  var UI_Merchants_Airtel_Controller_AirtelNetBankingScreen = PS["UI.Merchants.Airtel.Controller.AirtelNetBankingScreen"];                 
  var view = function (push) {
      return function (state) {
          var finalConfig = {
              text: "Select Bank",
              actionIcon: UI_Merchants_Airtel_Config.toolBarConfigAirtel.value0.actionIcon,
              actionIconSize: UI_Merchants_Airtel_Config.toolBarConfigAirtel.value0.actionIconSize,
              background: UI_Merchants_Airtel_Config.toolBarConfigAirtel.value0.background,
              font: UI_Merchants_Airtel_Config.toolBarConfigAirtel.value0.font,
              height: UI_Merchants_Airtel_Config.toolBarConfigAirtel.value0.height,
              hintColor: UI_Merchants_Airtel_Config.toolBarConfigAirtel.value0.hintColor,
              hintText: UI_Merchants_Airtel_Config.toolBarConfigAirtel.value0.hintText,
              iconDirection: UI_Merchants_Airtel_Config.toolBarConfigAirtel.value0.iconDirection,
              iconVisibility: UI_Merchants_Airtel_Config.toolBarConfigAirtel.value0.iconVisibility,
              imageUrl: UI_Merchants_Airtel_Config.toolBarConfigAirtel.value0.imageUrl,
              inputUrl: UI_Merchants_Airtel_Config.toolBarConfigAirtel.value0.inputUrl,
              inputVisibility: UI_Merchants_Airtel_Config.toolBarConfigAirtel.value0.inputVisibility,
              padding: UI_Merchants_Airtel_Config.toolBarConfigAirtel.value0.padding,
              parentPadding: UI_Merchants_Airtel_Config.toolBarConfigAirtel.value0.parentPadding,
              secondaryText: UI_Merchants_Airtel_Config.toolBarConfigAirtel.value0.secondaryText,
              secondaryTextVisible: UI_Merchants_Airtel_Config.toolBarConfigAirtel.value0.secondaryTextVisible,
              textColor: UI_Merchants_Airtel_Config.toolBarConfigAirtel.value0.textColor,
              textSize: UI_Merchants_Airtel_Config.toolBarConfigAirtel.value0.textSize,
              textStyle: UI_Merchants_Airtel_Config.toolBarConfigAirtel.value0.textStyle,
              textVisibility: UI_Merchants_Airtel_Config.toolBarConfigAirtel.value0.textVisibility,
              translationY: UI_Merchants_Airtel_Config.toolBarConfigAirtel.value0.translationY,
              translationZ: UI_Merchants_Airtel_Config.toolBarConfigAirtel.value0.translationZ,
              typeface: UI_Merchants_Airtel_Config.toolBarConfigAirtel.value0.typeface
          };
          return PrestoDOM_Elements_Elements.linearLayout_("AirtelNB")([ PrestoDOM_Properties.height(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.width(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.background("#ffffff"), PrestoDOM_Properties.orientation(PrestoDOM_Types_DomAttributes.VERTICAL.value) ])([ UI_Components_View_ToolBar.view(function ($11) {
              return push(UI_Merchants_Airtel_Controller_AirtelNetBankingScreen.ToolBarAction.create($11));
          })(new UI_Components_Config_ToolBar.Config(finalConfig)), UI_Components_View_SearchBox.view(function ($12) {
              return push(UI_Merchants_Airtel_Controller_AirtelNetBankingScreen.SearchBoxAction.create($12));
          })(UI_Merchants_Airtel_Config.searchBoxConfigAirtel), PrestoDOM_Elements_Elements.scrollView([ PrestoDOM_Properties.height(new PrestoDOM_Types_DomAttributes.V(0)), PrestoDOM_Properties.weight(1.0), PrestoDOM_Properties.width(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value) ])([ PrestoDOM_Elements_Elements.linearLayout([ PrestoDOM_Properties.height(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.width(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.orientation(PrestoDOM_Types_DomAttributes.VERTICAL.value) ])([ UI_Components_View_BankListItem.view(function ($13) {
              return push(UI_Merchants_Airtel_Controller_AirtelNetBankingScreen.BankListItemAction.create($13));
          })(UI_Merchants_Airtel_Config.airtelNetBankConfig)({
              active: state.bankListItemState.active,
              name: "AXIS Bank",
              logo: state.bankListItemState.logo,
              index: state.bankListItemState.index
          }), UI_Components_View_BankListItem.view(function ($14) {
              return push(UI_Merchants_Airtel_Controller_AirtelNetBankingScreen.BankListItemAction.create($14));
          })(UI_Merchants_Airtel_Config.airtelNetBankConfig)({
              active: state.bankListItemState.active,
              name: "Allahabad Bank",
              logo: state.bankListItemState.logo,
              index: state.bankListItemState.index
          }), UI_Components_View_BankListItem.view(function ($15) {
              return push(UI_Merchants_Airtel_Controller_AirtelNetBankingScreen.BankListItemAction.create($15));
          })(UI_Merchants_Airtel_Config.airtelNetBankConfig)({
              active: state.bankListItemState.active,
              name: "Andhra Bank",
              logo: state.bankListItemState.logo,
              index: state.bankListItemState.index
          }), UI_Components_View_BankListItem.view(function ($16) {
              return push(UI_Merchants_Airtel_Controller_AirtelNetBankingScreen.BankListItemAction.create($16));
          })(UI_Merchants_Airtel_Config.airtelNetBankConfig)({
              active: state.bankListItemState.active,
              name: "Axis Cooperate",
              logo: state.bankListItemState.logo,
              index: state.bankListItemState.index
          }), UI_Components_View_BankListItem.view(function ($17) {
              return push(UI_Merchants_Airtel_Controller_AirtelNetBankingScreen.BankListItemAction.create($17));
          })(UI_Merchants_Airtel_Config.airtelNetBankConfig)({
              active: state.bankListItemState.active,
              name: "Bank Of India",
              logo: state.bankListItemState.logo,
              index: state.bankListItemState.index
          }), UI_Components_View_BankListItem.view(function ($18) {
              return push(UI_Merchants_Airtel_Controller_AirtelNetBankingScreen.BankListItemAction.create($18));
          })(UI_Merchants_Airtel_Config.airtelNetBankConfig)({
              active: state.bankListItemState.active,
              name: "Bank of Baroda",
              logo: state.bankListItemState.logo,
              index: state.bankListItemState.index
          }), UI_Components_View_BankListItem.view(function ($19) {
              return push(UI_Merchants_Airtel_Controller_AirtelNetBankingScreen.BankListItemAction.create($19));
          })(UI_Merchants_Airtel_Config.airtelNetBankConfig)({
              active: state.bankListItemState.active,
              name: "Bank of Baroda - Cooperate NetBanking",
              logo: state.bankListItemState.logo,
              index: state.bankListItemState.index
          }), UI_Components_View_BankListItem.view(function ($20) {
              return push(UI_Merchants_Airtel_Controller_AirtelNetBankingScreen.BankListItemAction.create($20));
          })(UI_Merchants_Airtel_Config.airtelNetBankConfig)({
              active: state.bankListItemState.active,
              name: "Bank of Baroda - Retail NetBanking",
              logo: state.bankListItemState.logo,
              index: state.bankListItemState.index
          }) ]) ]), UI_Components_View_PrimaryButton.view(function ($21) {
              return push(UI_Merchants_Airtel_Controller_AirtelNetBankingScreen.PrimaryButtonAction.create($21));
          })(UI_Merchants_Airtel_Config.primarybuttonConfigAirtel) ]);
      };
  };
  var screen = function (input) {
      return {
          initialState: UI_Merchants_Airtel_Controller_AirtelNetBankingScreen.initialState(input),
          view: view,
          "eval": UI_Merchants_Airtel_Controller_AirtelNetBankingScreen["eval"]
      };
  };
  exports["screen"] = screen;
  exports["view"] = view;
})(PS["UI.Merchants.Airtel.View.AirtelNetBankingScreen"] = PS["UI.Merchants.Airtel.View.AirtelNetBankingScreen"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Effect = PS["Effect"];
  var Prelude = PS["Prelude"];
  var PrestoDOM = PS["PrestoDOM"];
  var PrestoDOM_Elements_Elements = PS["PrestoDOM.Elements.Elements"];
  var PrestoDOM_Properties = PS["PrestoDOM.Properties"];
  var PrestoDOM_Types_DomAttributes = PS["PrestoDOM.Types.DomAttributes"];
  var Types = PS["Types"];
  var UI_Components_Config_AmountView = PS["UI.Components.Config.AmountView"];
  var UI_Components_Controller_AmountView = PS["UI.Components.Controller.AmountView"];
  var Utils = PS["Utils"];                 
  var view = function (push) {
      return function (v) {
          return function (state) {
              return PrestoDOM_Elements_Elements.linearLayout([ PrestoDOM_Properties.height(v.value0.heightParent), PrestoDOM_Properties.width(v.value0.widthParent), PrestoDOM_Properties.orientation(PrestoDOM_Types_DomAttributes.HORIZONTAL.value), PrestoDOM_Properties.gravity(v.value0.parentGravity), PrestoDOM_Properties.background(v.value0.background), PrestoDOM_Properties.padding(v.value0.padding), PrestoDOM_Properties.margin(v.value0.margin), PrestoDOM_Properties.cornerRadius(v.value0.cornerRadius) ])([ PrestoDOM_Elements_Elements.linearLayout([ PrestoDOM_Properties.height(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.width(new PrestoDOM_Types_DomAttributes.V(0)), PrestoDOM_Properties.weight(1.0), PrestoDOM_Properties.orientation(v.value0.orientation), PrestoDOM_Properties.gravity(PrestoDOM_Types_DomAttributes.CENTER.value) ])([ PrestoDOM_Elements_Elements.textView([ PrestoDOM_Properties.height(v.value0.headingHeight), PrestoDOM_Properties.weight(v.value0.headingWeight), PrestoDOM_Properties.width(v.value0.headingWidth), PrestoDOM_Properties.color(v.value0.headingColor), PrestoDOM_Properties.text(v.value0.headingText), PrestoDOM_Properties.textSize(v.value0.headingTextSize), PrestoDOM_Properties.typeface(v.value0.headingTypeface), PrestoDOM_Properties.fontStyle(v.value0.font) ]), PrestoDOM_Elements_Elements.textView([ PrestoDOM_Properties.height(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.width(new PrestoDOM_Types_DomAttributes.V(1)), PrestoDOM_Properties.visibility(v.value0.pipeVisibility), PrestoDOM_Properties.background("#ffffff") ]), PrestoDOM_Elements_Elements.textView([ PrestoDOM_Properties.width(v.value0.width), PrestoDOM_Properties.height(v.value0.height), PrestoDOM_Properties.weight(v.value0.weight), PrestoDOM_Properties.color(v.value0.color), PrestoDOM_Properties.text(v.value0.text), PrestoDOM_Properties.gravity(v.value0.gravity), PrestoDOM_Properties.textSize(v.value0.textSize), PrestoDOM_Properties.typeface(v.value0.typeface), PrestoDOM_Properties.fontStyle(v.value0.font) ]) ]), PrestoDOM_Elements_Elements.linearLayout([ PrestoDOM_Properties.height(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.width((function () {
                  var $4 = Utils.os === "ANDROID";
                  if ($4) {
                      return PrestoDOM_Types_DomAttributes.WRAP_CONTENT.value;
                  };
                  return PrestoDOM_Types_DomAttributes.V.create(Utils.getLabelWidth(v.value0.amountText)(v.value0.font)(v.value0.amountTextSize)(0)(0));
              })()), PrestoDOM_Properties.orientation(PrestoDOM_Types_DomAttributes.VERTICAL.value), PrestoDOM_Properties.gravity(PrestoDOM_Types_DomAttributes.CENTER.value) ])([ PrestoDOM_Elements_Elements.textView([ PrestoDOM_Properties.height(new PrestoDOM_Types_DomAttributes.V(0)), PrestoDOM_Properties.width(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.weight(1.0), PrestoDOM_Properties.text(v.value0.amountHeadingText), PrestoDOM_Properties.textSize(16), PrestoDOM_Properties.gravity(PrestoDOM_Types_DomAttributes.CENTER.value), PrestoDOM_Properties.color("#80ffffff"), PrestoDOM_Properties.visibility(v.value0.amountHeadingVisibility), PrestoDOM_Properties.fontStyle(v.value0.font), PrestoDOM_Properties.background("#000000") ]), PrestoDOM_Elements_Elements.linearLayout([ PrestoDOM_Properties.height(new PrestoDOM_Types_DomAttributes.V(0)), PrestoDOM_Properties.width(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.weight(1.0), PrestoDOM_Properties.gravity(PrestoDOM_Types_DomAttributes.CENTER.value) ])([ PrestoDOM_Elements_Elements.textView([ PrestoDOM_Properties.height(v.value0.amountHeight), PrestoDOM_Properties.width(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.color(v.value0.amountColor), PrestoDOM_Properties.text(v.value0.amountText), PrestoDOM_Properties.textSize(v.value0.amountTextSize), PrestoDOM_Properties.visibility(v.value0.amountVisibility), PrestoDOM_Properties.gravity(v.value0.amountGravity), PrestoDOM_Properties.typeface(v.value0.amountTypeface), PrestoDOM_Properties.fontStyle(v.value0.font) ]) ]) ]), PrestoDOM_Elements_Elements.imageView([ PrestoDOM_Properties.height(v.value0.imageHeight), PrestoDOM_Properties.width(v.value0.imageWidth), PrestoDOM_Properties.visibility(v.value0.imageVisibility), PrestoDOM_Properties.imageUrl(v.value0.imageUrl), PrestoDOM_Properties.margin(v.value0.imageMargin) ]) ]);
          };
      };
  };
  exports["view"] = view;
})(PS["UI.Components.View.AmountView"] = PS["UI.Components.View.AmountView"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Effect = PS["Effect"];
  var Prelude = PS["Prelude"];
  var PrestoDOM = PS["PrestoDOM"];
  var PrestoDOM_Elements_Elements = PS["PrestoDOM.Elements.Elements"];
  var PrestoDOM_Events = PS["PrestoDOM.Events"];
  var PrestoDOM_Properties = PS["PrestoDOM.Properties"];
  var PrestoDOM_Types_DomAttributes = PS["PrestoDOM.Types.DomAttributes"];
  var Types = PS["Types"];
  var UI_Components_Config_PaymentOptionsV2 = PS["UI.Components.Config.PaymentOptionsV2"];
  var UI_Components_Controller_PaymentOptionsV2 = PS["UI.Components.Controller.PaymentOptionsV2"];                 
  var view = function (push) {
      return function (v) {
          return PrestoDOM_Elements_Elements.linearLayout([ PrestoDOM_Properties.width(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.height(v.value0.height), PrestoDOM_Properties.background("#ffffff"), PrestoDOM_Properties.orientation(PrestoDOM_Types_DomAttributes.VERTICAL.value), PrestoDOM_Properties.padding(v.value0.parentPadding), PrestoDOM_Events.onClick(push)(Data_Function["const"](new UI_Components_Controller_PaymentOptionsV2.ToggleOption(v.value0.id))) ])([ PrestoDOM_Elements_Elements.linearLayout([ PrestoDOM_Properties.width(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.height(new PrestoDOM_Types_DomAttributes.V(0)), PrestoDOM_Properties.weight(1.0), PrestoDOM_Properties.orientation(PrestoDOM_Types_DomAttributes.HORIZONTAL.value), PrestoDOM_Properties.gravity(PrestoDOM_Types_DomAttributes.CENTER.value) ])([ PrestoDOM_Elements_Elements.imageView([ PrestoDOM_Properties.width(v.value0.imageWidth), PrestoDOM_Properties.height(v.value0.imageHeight), PrestoDOM_Properties.imageUrl(v.value0.imageUrl), PrestoDOM_Properties.padding(new PrestoDOM_Types_DomAttributes.Padding(8, 8, 8, 4)) ]), PrestoDOM_Elements_Elements.linearLayout([ PrestoDOM_Properties.width(new PrestoDOM_Types_DomAttributes.V(0)), PrestoDOM_Properties.height(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.weight(1.0), PrestoDOM_Properties.orientation(PrestoDOM_Types_DomAttributes.VERTICAL.value), PrestoDOM_Properties.gravity(PrestoDOM_Types_DomAttributes.CENTER.value) ])([ PrestoDOM_Elements_Elements.linearLayout([ PrestoDOM_Properties.width(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.height(v.value0.headingHeight), PrestoDOM_Properties.weight(v.value0.headingWeight), PrestoDOM_Properties.orientation(PrestoDOM_Types_DomAttributes.HORIZONTAL.value), PrestoDOM_Properties.padding(new PrestoDOM_Types_DomAttributes.Padding(0, 0, 8, 0)), PrestoDOM_Properties.gravity(PrestoDOM_Types_DomAttributes.CENTER_VERTICAL.value) ])([ PrestoDOM_Elements_Elements.textView([ PrestoDOM_Properties.width(new PrestoDOM_Types_DomAttributes.V(0)), PrestoDOM_Properties.height(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.weight(1.0), PrestoDOM_Properties.text(v.value0.headingText), PrestoDOM_Properties.gravity(PrestoDOM_Types_DomAttributes.CENTER_VERTICAL.value), PrestoDOM_Properties.color("#000000"), PrestoDOM_Properties.textSize(18), PrestoDOM_Properties.fontStyle(v.value0.font) ]), PrestoDOM_Elements_Elements.textView([ PrestoDOM_Properties.width(v.value0.amountWidth), PrestoDOM_Properties.height(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.text(v.value0.amount), PrestoDOM_Properties.background(v.value0.amountBackground), PrestoDOM_Properties.color(v.value0.amountColor), PrestoDOM_Properties.gravity(v.value0.amountGravity), PrestoDOM_Properties.stroke(v.value0.amountStroke), PrestoDOM_Properties.cornerRadius(v.value0.amountCornerRadius) ]) ]), PrestoDOM_Elements_Elements.linearLayout([ PrestoDOM_Properties.width(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.height(new PrestoDOM_Types_DomAttributes.V(0)), PrestoDOM_Properties.weight(1.0), PrestoDOM_Properties.orientation(PrestoDOM_Types_DomAttributes.HORIZONTAL.value), PrestoDOM_Properties.padding(v.value0.boxPadding), PrestoDOM_Properties.visibility((function () {
              var $3 = v.value0.text === "";
              if ($3) {
                  return PrestoDOM_Types_DomAttributes.GONE.value;
              };
              return PrestoDOM_Types_DomAttributes.VISIBLE.value;
          })()) ])([ PrestoDOM_Elements_Elements.imageView([ PrestoDOM_Properties.width(new PrestoDOM_Types_DomAttributes.V(14)), PrestoDOM_Properties.height(new PrestoDOM_Types_DomAttributes.V(14)), PrestoDOM_Properties.margin(new PrestoDOM_Types_DomAttributes.Margin(0, 4, 0, 0)), PrestoDOM_Properties.visibility(v.value0.discountVisibility), PrestoDOM_Properties.imageUrl("ic_discount") ]), PrestoDOM_Elements_Elements.textView([ PrestoDOM_Properties.width(new PrestoDOM_Types_DomAttributes.V(0)), PrestoDOM_Properties.height(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.weight(1.0), PrestoDOM_Properties.text(v.value0.text), PrestoDOM_Properties.color(v.value0.color), PrestoDOM_Properties.gravity(v.value0.gravity), PrestoDOM_Properties.padding(v.value0.padding), PrestoDOM_Properties.fontStyle(v.value0.font) ]) ]) ]) ]), PrestoDOM_Elements_Elements.linearLayout([ PrestoDOM_Properties.width(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.height(new PrestoDOM_Types_DomAttributes.V(1)), PrestoDOM_Properties.visibility(v.value0.lineSeparaterVisibility), PrestoDOM_Properties.margin(v.value0.lineSeparaterMargin), PrestoDOM_Properties.background(v.value0.lineSeparaterColor), PrestoDOM_Properties.orientation(PrestoDOM_Types_DomAttributes.HORIZONTAL.value) ])([  ]) ]);
      };
  };
  exports["view"] = view;
})(PS["UI.Components.View.PaymentOptionsV2"] = PS["UI.Components.View.PaymentOptionsV2"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Animations = PS["Animations"];
  var Data_Function = PS["Data.Function"];
  var Effect = PS["Effect"];
  var Prelude = PS["Prelude"];
  var Presto_Core_Flow = PS["Presto.Core.Flow"];
  var PrestoDOM = PS["PrestoDOM"];
  var PrestoDOM_Elements_Elements = PS["PrestoDOM.Elements.Elements"];
  var PrestoDOM_Properties = PS["PrestoDOM.Properties"];
  var PrestoDOM_Types_DomAttributes = PS["PrestoDOM.Types.DomAttributes"];
  var Record = PS["Record"];
  var Simple_JSON = PS["Simple.JSON"];
  var Type_Prelude = PS["Type.Prelude"];
  var Types = PS["Types"];
  var UI_Components_Config_PopularBanks = PS["UI.Components.Config.PopularBanks"];
  var UI_Components_Controller_PopularBanks = PS["UI.Components.Controller.PopularBanks"];                 
  var view = function (push) {
      return function (v) {
          return PrestoDOM_Elements_Elements.linearLayout([ PrestoDOM_Properties.height(v.value0.parentHeight), PrestoDOM_Properties.width(v.value0.parentWidth), PrestoDOM_Properties.orientation(PrestoDOM_Types_DomAttributes.VERTICAL.value), PrestoDOM_Properties.visibility((function () {
              if (v.value0.isFormVisible) {
                  return PrestoDOM_Types_DomAttributes.VISIBLE.value;
              };
              return PrestoDOM_Types_DomAttributes.GONE.value;
          })()), PrestoDOM_Properties.background("#ffffff"), PrestoDOM_Properties.gravity(PrestoDOM_Types_DomAttributes.CENTER.value), PrestoDOM_Properties.margin(v.value0.parentMargin) ])([ PrestoDOM_Elements_Elements.linearLayout([ PrestoDOM_Properties.height(v.value0.rowHeight), PrestoDOM_Properties.width(v.value0.rowWidth), PrestoDOM_Properties.margin(v.value0.rowMargin), PrestoDOM_Properties.orientation(PrestoDOM_Types_DomAttributes.HORIZONTAL.value), PrestoDOM_Properties.gravity(PrestoDOM_Types_DomAttributes.CENTER.value) ])([ PrestoDOM_Elements_Elements.linearLayout([ PrestoDOM_Properties.height(v.value0.cellHeight), PrestoDOM_Properties.width(v.value0.cellWidth), PrestoDOM_Properties.stroke(v.value0.cellStroke), PrestoDOM_Properties.cornerRadius(v.value0.cellCornerRadius), PrestoDOM_Properties.margin(v.value0.cellMargin), PrestoDOM_Properties.padding(v.value0.cellPadding), PrestoDOM_Properties.orientation(PrestoDOM_Types_DomAttributes.VERTICAL.value), PrestoDOM_Properties.gravity(PrestoDOM_Types_DomAttributes.CENTER.value), PrestoDOM_Properties.weight(1.0) ])([ PrestoDOM_Elements_Elements.imageView([ PrestoDOM_Properties.height(v.value0.imageHeight), PrestoDOM_Properties.width(v.value0.imageWidth), PrestoDOM_Properties.margin(v.value0.imageMargin), PrestoDOM_Properties.stroke(v.value0.imageStroke), PrestoDOM_Properties.cornerRadius(v.value0.imageCornerRadius), PrestoDOM_Properties.padding(v.value0.imagePadding), PrestoDOM_Properties.imageUrl("bank_hdfc"), PrestoDOM_Properties.gravity(PrestoDOM_Types_DomAttributes.CENTER_HORIZONTAL.value) ]), PrestoDOM_Elements_Elements.textView([ PrestoDOM_Properties.height(v.value0.textHeight), PrestoDOM_Properties.width(v.value0.textWidth), PrestoDOM_Properties.text("HDFC"), PrestoDOM_Properties.textSize(v.value0.textSize), PrestoDOM_Properties.padding(new PrestoDOM_Types_DomAttributes.Padding(0, 2, 0, 0)), PrestoDOM_Properties.textAllCaps(v.value0.textAllCaps), PrestoDOM_Properties.color(v.value0.textColor), PrestoDOM_Properties.gravity(PrestoDOM_Types_DomAttributes.CENTER_HORIZONTAL.value), PrestoDOM_Properties.visibility(v.value0.bankNameVisibility), PrestoDOM_Properties.fontStyle(v.value0.font) ]) ]), PrestoDOM_Elements_Elements.linearLayout([ PrestoDOM_Properties.height(v.value0.cellHeight), PrestoDOM_Properties.width(v.value0.cellWidth), PrestoDOM_Properties.stroke(v.value0.cellStroke), PrestoDOM_Properties.cornerRadius(v.value0.cellCornerRadius), PrestoDOM_Properties.margin(v.value0.cellMargin), PrestoDOM_Properties.padding(v.value0.cellPadding), PrestoDOM_Properties.orientation(PrestoDOM_Types_DomAttributes.VERTICAL.value), PrestoDOM_Properties.gravity(PrestoDOM_Types_DomAttributes.CENTER.value), PrestoDOM_Properties.weight(1.0) ])([ PrestoDOM_Elements_Elements.imageView([ PrestoDOM_Properties.height(v.value0.imageHeight), PrestoDOM_Properties.width(v.value0.imageWidth), PrestoDOM_Properties.margin(v.value0.imageMargin), PrestoDOM_Properties.stroke(v.value0.imageStroke), PrestoDOM_Properties.cornerRadius(v.value0.imageCornerRadius), PrestoDOM_Properties.padding(v.value0.imagePadding), PrestoDOM_Properties.imageUrl("bank_axis"), PrestoDOM_Properties.gravity(PrestoDOM_Types_DomAttributes.CENTER_HORIZONTAL.value) ]), PrestoDOM_Elements_Elements.textView([ PrestoDOM_Properties.height(v.value0.textHeight), PrestoDOM_Properties.width(v.value0.textWidth), PrestoDOM_Properties.text("Axis"), PrestoDOM_Properties.textSize(v.value0.textSize), PrestoDOM_Properties.padding(new PrestoDOM_Types_DomAttributes.Padding(0, 2, 0, 0)), PrestoDOM_Properties.textAllCaps(v.value0.textAllCaps), PrestoDOM_Properties.color(v.value0.textColor), PrestoDOM_Properties.gravity(PrestoDOM_Types_DomAttributes.CENTER_HORIZONTAL.value), PrestoDOM_Properties.visibility(v.value0.bankNameVisibility), PrestoDOM_Properties.fontStyle(v.value0.font) ]) ]), PrestoDOM_Elements_Elements.linearLayout([ PrestoDOM_Properties.height(v.value0.cellHeight), PrestoDOM_Properties.width(v.value0.cellWidth), PrestoDOM_Properties.stroke(v.value0.cellStroke), PrestoDOM_Properties.cornerRadius(v.value0.cellCornerRadius), PrestoDOM_Properties.margin(v.value0.cellMargin), PrestoDOM_Properties.padding(v.value0.cellPadding), PrestoDOM_Properties.orientation(PrestoDOM_Types_DomAttributes.VERTICAL.value), PrestoDOM_Properties.gravity(PrestoDOM_Types_DomAttributes.CENTER.value), PrestoDOM_Properties.weight(1.0) ])([ PrestoDOM_Elements_Elements.imageView([ PrestoDOM_Properties.height(v.value0.imageHeight), PrestoDOM_Properties.width(v.value0.imageWidth), PrestoDOM_Properties.margin(v.value0.imageMargin), PrestoDOM_Properties.stroke(v.value0.imageStroke), PrestoDOM_Properties.cornerRadius(v.value0.imageCornerRadius), PrestoDOM_Properties.padding(v.value0.imagePadding), PrestoDOM_Properties.imageUrl("bank_icici"), PrestoDOM_Properties.gravity(PrestoDOM_Types_DomAttributes.CENTER_HORIZONTAL.value) ]), PrestoDOM_Elements_Elements.textView([ PrestoDOM_Properties.height(v.value0.textHeight), PrestoDOM_Properties.width(v.value0.textWidth), PrestoDOM_Properties.text("ICICI"), PrestoDOM_Properties.textSize(v.value0.textSize), PrestoDOM_Properties.padding(new PrestoDOM_Types_DomAttributes.Padding(0, 2, 0, 0)), PrestoDOM_Properties.textAllCaps(v.value0.textAllCaps), PrestoDOM_Properties.color(v.value0.textColor), PrestoDOM_Properties.gravity(PrestoDOM_Types_DomAttributes.CENTER_HORIZONTAL.value), PrestoDOM_Properties.visibility(v.value0.bankNameVisibility), PrestoDOM_Properties.fontStyle(v.value0.font) ]) ]) ]), PrestoDOM_Elements_Elements.linearLayout([ PrestoDOM_Properties.height(v.value0.rowHeight), PrestoDOM_Properties.width(v.value0.rowWidth), PrestoDOM_Properties.margin(v.value0.rowMargin), PrestoDOM_Properties.orientation(PrestoDOM_Types_DomAttributes.HORIZONTAL.value) ])([ PrestoDOM_Elements_Elements.linearLayout([ PrestoDOM_Properties.height(v.value0.cellHeight), PrestoDOM_Properties.width(v.value0.cellWidth), PrestoDOM_Properties.stroke(v.value0.cellStroke), PrestoDOM_Properties.cornerRadius(v.value0.cellCornerRadius), PrestoDOM_Properties.margin(v.value0.cellMargin), PrestoDOM_Properties.padding(v.value0.cellPadding), PrestoDOM_Properties.orientation(PrestoDOM_Types_DomAttributes.VERTICAL.value), PrestoDOM_Properties.gravity(PrestoDOM_Types_DomAttributes.CENTER.value), PrestoDOM_Properties.weight(1.0) ])([ PrestoDOM_Elements_Elements.imageView([ PrestoDOM_Properties.height(v.value0.imageHeight), PrestoDOM_Properties.width(v.value0.imageWidth), PrestoDOM_Properties.margin(v.value0.imageMargin), PrestoDOM_Properties.stroke(v.value0.imageStroke), PrestoDOM_Properties.cornerRadius(v.value0.imageCornerRadius), PrestoDOM_Properties.padding(v.value0.imagePadding), PrestoDOM_Properties.imageUrl("bank_sbi"), PrestoDOM_Properties.gravity(PrestoDOM_Types_DomAttributes.CENTER_HORIZONTAL.value) ]), PrestoDOM_Elements_Elements.textView([ PrestoDOM_Properties.height(v.value0.textHeight), PrestoDOM_Properties.width(v.value0.textWidth), PrestoDOM_Properties.text("SBI"), PrestoDOM_Properties.textSize(v.value0.textSize), PrestoDOM_Properties.textAllCaps(true), PrestoDOM_Properties.padding(new PrestoDOM_Types_DomAttributes.Padding(0, 2, 0, 0)), PrestoDOM_Properties.textAllCaps(v.value0.textAllCaps), PrestoDOM_Properties.color(v.value0.textColor), PrestoDOM_Properties.gravity(PrestoDOM_Types_DomAttributes.CENTER_HORIZONTAL.value), PrestoDOM_Properties.visibility(v.value0.bankNameVisibility), PrestoDOM_Properties.fontStyle(v.value0.font) ]) ]), PrestoDOM_Elements_Elements.linearLayout([ PrestoDOM_Properties.height(v.value0.cellHeight), PrestoDOM_Properties.width(v.value0.cellWidth), PrestoDOM_Properties.stroke(v.value0.cellStroke), PrestoDOM_Properties.cornerRadius(v.value0.cellCornerRadius), PrestoDOM_Properties.margin(v.value0.cellMargin), PrestoDOM_Properties.padding(v.value0.cellPadding), PrestoDOM_Properties.orientation(PrestoDOM_Types_DomAttributes.VERTICAL.value), PrestoDOM_Properties.gravity(PrestoDOM_Types_DomAttributes.CENTER.value), PrestoDOM_Properties.weight(1.0) ])([ PrestoDOM_Elements_Elements.imageView([ PrestoDOM_Properties.height(v.value0.imageHeight), PrestoDOM_Properties.width(v.value0.imageWidth), PrestoDOM_Properties.margin(v.value0.imageMargin), PrestoDOM_Properties.stroke(v.value0.imageStroke), PrestoDOM_Properties.cornerRadius(v.value0.imageCornerRadius), PrestoDOM_Properties.padding(v.value0.imagePadding), PrestoDOM_Properties.imageUrl("bank_canara"), PrestoDOM_Properties.gravity(PrestoDOM_Types_DomAttributes.CENTER_HORIZONTAL.value) ]), PrestoDOM_Elements_Elements.textView([ PrestoDOM_Properties.height(v.value0.textHeight), PrestoDOM_Properties.width(v.value0.textWidth), PrestoDOM_Properties.text("Canara"), PrestoDOM_Properties.textSize(v.value0.textSize), PrestoDOM_Properties.padding(new PrestoDOM_Types_DomAttributes.Padding(0, 2, 0, 0)), PrestoDOM_Properties.textAllCaps(v.value0.textAllCaps), PrestoDOM_Properties.color(v.value0.textColor), PrestoDOM_Properties.gravity(PrestoDOM_Types_DomAttributes.CENTER_HORIZONTAL.value), PrestoDOM_Properties.visibility(v.value0.bankNameVisibility), PrestoDOM_Properties.fontStyle(v.value0.font) ]) ]), PrestoDOM_Elements_Elements.linearLayout([ PrestoDOM_Properties.height(v.value0.cellHeight), PrestoDOM_Properties.width(v.value0.cellWidth), PrestoDOM_Properties.stroke(v.value0.cellStroke), PrestoDOM_Properties.cornerRadius(v.value0.cellCornerRadius), PrestoDOM_Properties.margin(v.value0.cellMargin), PrestoDOM_Properties.padding(v.value0.cellPadding), PrestoDOM_Properties.orientation(PrestoDOM_Types_DomAttributes.VERTICAL.value), PrestoDOM_Properties.gravity(PrestoDOM_Types_DomAttributes.CENTER.value), PrestoDOM_Properties.weight(1.0) ])([ PrestoDOM_Elements_Elements.imageView([ PrestoDOM_Properties.height(v.value0.imageHeight), PrestoDOM_Properties.width(v.value0.imageWidth), PrestoDOM_Properties.margin(v.value0.imageMargin), PrestoDOM_Properties.stroke(v.value0.imageStroke), PrestoDOM_Properties.cornerRadius(v.value0.imageCornerRadius), PrestoDOM_Properties.padding(v.value0.imagePadding), PrestoDOM_Properties.imageUrl("bank_dummy"), PrestoDOM_Properties.gravity(PrestoDOM_Types_DomAttributes.CENTER_HORIZONTAL.value) ]), PrestoDOM_Elements_Elements.textView([ PrestoDOM_Properties.height(v.value0.textHeight), PrestoDOM_Properties.width(v.value0.textWidth), PrestoDOM_Properties.text("Dummy"), PrestoDOM_Properties.textSize(v.value0.textSize), PrestoDOM_Properties.padding(new PrestoDOM_Types_DomAttributes.Padding(0, 2, 0, 0)), PrestoDOM_Properties.textAllCaps(v.value0.textAllCaps), PrestoDOM_Properties.color(v.value0.textColor), PrestoDOM_Properties.gravity(PrestoDOM_Types_DomAttributes.CENTER_HORIZONTAL.value), PrestoDOM_Properties.visibility(v.value0.bankNameVisibility), PrestoDOM_Properties.fontStyle(v.value0.font) ]) ]) ]) ]);
      };
  };
  exports["view"] = view;
})(PS["UI.Components.View.PopularBanks"] = PS["UI.Components.View.PopularBanks"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Ring = PS["Data.Ring"];
  var Effect = PS["Effect"];
  var Halogen_VDom_Types = PS["Halogen.VDom.Types"];
  var Prelude = PS["Prelude"];
  var PrestoDOM = PS["PrestoDOM"];
  var PrestoDOM_Elements_Elements = PS["PrestoDOM.Elements.Elements"];
  var PrestoDOM_Events = PS["PrestoDOM.Events"];
  var PrestoDOM_Properties = PS["PrestoDOM.Properties"];
  var PrestoDOM_Types_DomAttributes = PS["PrestoDOM.Types.DomAttributes"];
  var UI_Components_View_AmountView = PS["UI.Components.View.AmountView"];
  var UI_Components_View_PaymentOptionsV2 = PS["UI.Components.View.PaymentOptionsV2"];
  var UI_Components_View_PopularBanks = PS["UI.Components.View.PopularBanks"];
  var UI_Components_View_ToolBar = PS["UI.Components.View.ToolBar"];
  var UI_Merchants_Airtel_Config = PS["UI.Merchants.Airtel.Config"];
  var UI_Merchants_Airtel_Controller_AirtelScreen = PS["UI.Merchants.Airtel.Controller.AirtelScreen"];                 
  var view = function (push) {
      return function (state) {
          return PrestoDOM_Elements_Elements.linearLayout_("AirtelScreen")([ PrestoDOM_Properties.height(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.width(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.background("#EBEBEB"), PrestoDOM_Properties.orientation(PrestoDOM_Types_DomAttributes.VERTICAL.value) ])([ UI_Components_View_ToolBar.view(function ($0) {
              return push(UI_Merchants_Airtel_Controller_AirtelScreen.ToolBarAction.create($0));
          })(UI_Merchants_Airtel_Config.toolBarConfigAirtel), PrestoDOM_Elements_Elements.scrollView([ PrestoDOM_Properties.height(new PrestoDOM_Types_DomAttributes.V(0)), PrestoDOM_Properties.weight(1.0), PrestoDOM_Properties.width(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value) ])([ PrestoDOM_Elements_Elements.linearLayout([ PrestoDOM_Properties.height(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.width(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.orientation(PrestoDOM_Types_DomAttributes.VERTICAL.value) ])([ PrestoDOM_Elements_Elements.linearLayout([ PrestoDOM_Properties.height(new PrestoDOM_Types_DomAttributes.V(120)), PrestoDOM_Properties.width(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.orientation(PrestoDOM_Types_DomAttributes.VERTICAL.value), PrestoDOM_Properties.background("#ffffff"), PrestoDOM_Properties.padding(new PrestoDOM_Types_DomAttributes.Padding(16, 16, 16, 0)), PrestoDOM_Properties.translationY(-10.0), PrestoDOM_Properties.translationZ(20.0) ])([ PrestoDOM_Elements_Elements.textView([ PrestoDOM_Properties.height(new PrestoDOM_Types_DomAttributes.V(24)), PrestoDOM_Properties.width(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.text("Postpaid Bill Payment for"), PrestoDOM_Properties.color("#777777"), PrestoDOM_Properties.textSize(18), PrestoDOM_Properties.typeface(PrestoDOM_Types_DomAttributes.BOLD.value) ]), PrestoDOM_Elements_Elements.textView([ PrestoDOM_Properties.height(new PrestoDOM_Types_DomAttributes.V(24)), PrestoDOM_Properties.width(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.text("9916190154"), PrestoDOM_Properties.color("#777777"), PrestoDOM_Properties.textSize(18), PrestoDOM_Properties.typeface(PrestoDOM_Types_DomAttributes.BOLD.value) ]), UI_Components_View_AmountView.view(function ($1) {
              return push(UI_Merchants_Airtel_Controller_AirtelScreen.AmountViewAction.create($1));
          })(UI_Merchants_Airtel_Config.amountConfigAirtel)(state.orderSummaryState) ]), PrestoDOM_Elements_Elements.linearLayout([ PrestoDOM_Properties.height(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.width(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.orientation(PrestoDOM_Types_DomAttributes.VERTICAL.value), PrestoDOM_Properties.margin(new PrestoDOM_Types_DomAttributes.Margin(16, 0, 16, 0)) ])([ PrestoDOM_Elements_Elements.textView([ PrestoDOM_Properties.width(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.height(new PrestoDOM_Types_DomAttributes.V(18)), PrestoDOM_Properties.text("MY CARDS"), PrestoDOM_Properties.margin(new PrestoDOM_Types_DomAttributes.Margin(0, 10, 0, 10)), PrestoDOM_Properties.typeface(PrestoDOM_Types_DomAttributes.BOLD.value), PrestoDOM_Properties.textSize(16) ]), UI_Components_View_PaymentOptionsV2.view(function ($2) {
              return push(UI_Merchants_Airtel_Controller_AirtelScreen.PaymentOptionsV2Action.create($2));
          })(UI_Merchants_Airtel_Config.addCardConfig), PrestoDOM_Elements_Elements.textView([ PrestoDOM_Properties.width(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.height(new PrestoDOM_Types_DomAttributes.V(18)), PrestoDOM_Properties.text("OTHER CARDS"), PrestoDOM_Properties.typeface(PrestoDOM_Types_DomAttributes.BOLD.value), PrestoDOM_Properties.textSize(16), PrestoDOM_Properties.margin(new PrestoDOM_Types_DomAttributes.Margin(0, 10, 0, 10)) ]), UI_Components_View_PaymentOptionsV2.view(function ($3) {
              return push(UI_Merchants_Airtel_Controller_AirtelScreen.PaymentOptionsV2Action.create($3));
          })(UI_Merchants_Airtel_Config.airtelMoneyConfig), UI_Components_View_PaymentOptionsV2.view(function ($4) {
              return push(UI_Merchants_Airtel_Controller_AirtelScreen.PaymentOptionsV2Action.create($4));
          })(UI_Merchants_Airtel_Config.phonepeConfig), UI_Components_View_PaymentOptionsV2.view(function ($5) {
              return push(UI_Merchants_Airtel_Controller_AirtelScreen.PaymentOptionsV2Action.create($5));
          })(UI_Merchants_Airtel_Config.paytmConfig) ]), PrestoDOM_Elements_Elements.linearLayout([ PrestoDOM_Properties.height(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.width(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.orientation(PrestoDOM_Types_DomAttributes.VERTICAL.value), PrestoDOM_Properties.margin(new PrestoDOM_Types_DomAttributes.Margin(16, 0, 16, 0)) ])([ PrestoDOM_Elements_Elements.textView([ PrestoDOM_Properties.width(PrestoDOM_Types_DomAttributes.MATCH_PARENT.value), PrestoDOM_Properties.height(new PrestoDOM_Types_DomAttributes.V(18)), PrestoDOM_Properties.text("NETBANKING"), PrestoDOM_Properties.margin(new PrestoDOM_Types_DomAttributes.Margin(0, 10, 0, 10)), PrestoDOM_Properties.typeface(PrestoDOM_Types_DomAttributes.BOLD.value), PrestoDOM_Properties.textSize(16), PrestoDOM_Events.onClick(push)(Data_Function["const"](UI_Merchants_Airtel_Controller_AirtelScreen.AirtelAction.value)) ]), UI_Components_View_PopularBanks.view(function ($6) {
              return push(UI_Merchants_Airtel_Controller_AirtelScreen.PopularBanksAction.create($6));
          })(UI_Merchants_Airtel_Config.popularBanksConfigAirtel) ]) ]) ]) ]);
      };
  };
  var screen = function (input) {
      return {
          initialState: UI_Merchants_Airtel_Controller_AirtelScreen.initialState(input),
          view: view,
          "eval": UI_Merchants_Airtel_Controller_AirtelScreen["eval"]
      };
  };
  exports["screen"] = screen;
  exports["view"] = view;
})(PS["UI.Merchants.Airtel.View.AirtelScreen"] = PS["UI.Merchants.Airtel.View.AirtelScreen"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Monad_Free = PS["Control.Monad.Free"];
  var Control_Transformers_Back_Trans = PS["Control.Transformers.Back.Trans"];
  var Data_Function = PS["Data.Function"];
  var Data_Unit = PS["Data.Unit"];
  var Engineering_Helpers_Commons = PS["Engineering.Helpers.Commons"];
  var Engineering_Types_App = PS["Engineering.Types.App"];
  var Prelude = PS["Prelude"];
  var Presto_Core_Flow = PS["Presto.Core.Flow"];
  var PrestoDOM = PS["PrestoDOM"];
  var Types = PS["Types"];
  var UI_Merchants_Airtel_View_AirtelCardScreen = PS["UI.Merchants.Airtel.View.AirtelCardScreen"];
  var UI_Merchants_Airtel_View_AirtelNetBankingScreen = PS["UI.Merchants.Airtel.View.AirtelNetBankingScreen"];
  var UI_Merchants_Airtel_View_AirtelScreen = PS["UI.Merchants.Airtel.View.AirtelScreen"];
  var Utils = PS["Utils"];                 
  var airtelNetBanking = Control_Bind.bind(Control_Transformers_Back_Trans.bindFailbackT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Free.freeMonad)))(Engineering_Helpers_Commons.liftRunScreen(Control_Transformers_Back_Trans.BackPoint.create)(UI_Merchants_Airtel_View_AirtelNetBankingScreen.screen(Data_Unit.unit)))(function (v) {
      return Control_Applicative.pure(Control_Transformers_Back_Trans.applicativeFailbackT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Free.freeMonad)))(Data_Unit.unit);
  });
  var airtelCard = Control_Bind.bind(Control_Transformers_Back_Trans.bindFailbackT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Free.freeMonad)))(Engineering_Helpers_Commons.liftRunScreen(Control_Transformers_Back_Trans.BackPoint.create)(UI_Merchants_Airtel_View_AirtelCardScreen.screen(Data_Unit.unit)))(function (v) {
      return Control_Applicative.pure(Control_Transformers_Back_Trans.applicativeFailbackT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Free.freeMonad)))(Data_Unit.unit);
  });
  var airtelApp = Control_Bind.bind(Control_Transformers_Back_Trans.bindFailbackT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Free.freeMonad)))(Engineering_Helpers_Commons.liftRunScreen(Control_Transformers_Back_Trans.BackPoint.create)(UI_Merchants_Airtel_View_AirtelScreen.screen(Data_Unit.unit)))(function (v) {
      if (v instanceof Types.GoToAirtelNB) {
          return Control_Bind.bind(Control_Transformers_Back_Trans.bindFailbackT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Free.freeMonad)))(airtelNetBanking)(function (v1) {
              return Control_Applicative.pure(Control_Transformers_Back_Trans.applicativeFailbackT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Free.freeMonad)))(Data_Unit.unit);
          });
      };
      if (v instanceof Types.AirtelCard) {
          return Control_Bind.bind(Control_Transformers_Back_Trans.bindFailbackT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Free.freeMonad)))(airtelCard)(function (v1) {
              return Control_Applicative.pure(Control_Transformers_Back_Trans.applicativeFailbackT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Free.freeMonad)))(Data_Unit.unit);
          });
      };
      return Control_Applicative.pure(Control_Transformers_Back_Trans.applicativeFailbackT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Free.freeMonad)))(Data_Unit.unit);
  });
  exports["airtelApp"] = airtelApp;
  exports["airtelNetBanking"] = airtelNetBanking;
  exports["airtelCard"] = airtelCard;
})(PS["Flow.Airtel"] = PS["Flow.Airtel"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Monad_Free = PS["Control.Monad.Free"];
  var Control_Transformers_Back_Trans = PS["Control.Transformers.Back.Trans"];
  var Data_Function = PS["Data.Function"];
  var Data_Unit = PS["Data.Unit"];
  var Flow_Airtel = PS["Flow.Airtel"];
  var Flow_BigBasket = PS["Flow.BigBasket"];
  var Flow_Dream11 = PS["Flow.Dream11"];
  var Flow_Goibibo = PS["Flow.Goibibo"];
  var Flow_Grofers = PS["Flow.Grofers"];
  var Flow_Idea = PS["Flow.Idea"];
  var Flow_Jio = PS["Flow.Jio"];
  var Flow_Ola = PS["Flow.Ola"];
  var Flow_RedBus = PS["Flow.RedBus"];
  var Flow_SpiceJet = PS["Flow.SpiceJet"];
  var Flow_Stock = PS["Flow.Stock"];
  var Flow_Vodafone = PS["Flow.Vodafone"];
  var Prelude = PS["Prelude"];
  var Presto_Core_Flow = PS["Presto.Core.Flow"];
  var Presto_Core_Types_Language_Flow = PS["Presto.Core.Types.Language.Flow"];
  var PrestoDOM = PS["PrestoDOM"];
  var Types = PS["Types"];
  var UI_View_Screens_MainScreen = PS["UI.View.Screens.MainScreen"];
  var UI_View_Screens_TestingScreen = PS["UI.View.Screens.TestingScreen"];
  var Utils = PS["Utils"];
  var appFlow = function (recreated) {
      return Control_Bind.bind(Control_Monad_Free.freeBind)(Presto_Core_Types_Language_Flow.initUI)(function (v) {
          return Control_Bind.bind(Control_Monad_Free.freeBind)(Control_Monad_Except_Trans.runExceptT(Control_Transformers_Back_Trans.runBackT(Flow_Airtel.airtelApp)))(function (v1) {
              return Utils.exitSDK("")(0);
          });
      });
  };
  exports["appFlow"] = appFlow;
})(PS["Core"] = PS["Core"] || {});
(function(exports) {var callbackMapper = {
	  map : function(fn) {
		  if(typeof window.__FN_INDEX !== 'undefined' && window.__FN_INDEX !== null) {
			  var proxyFnName = 'F' + window.__FN_INDEX;
			  window.__PROXY_FN[proxyFnName] = fn;
		  	window.__FN_INDEX++;
			  return proxyFnName;
		  } else {
			  throw new Error("Please initialise window.__FN_INDEX = 0 in index.js of your project.");
		  }
	  }
  }

  exports["getPermissionStatus'"] = function(permission) {
	  return function() {
		  JBridge.checkPermission(permission);
	  };
  };

  exports["requestPermission'"] = function(err, success, permissions) {
	  return function() {
		  var callback = callbackMapper.map(function(params) {
			  console.warn("Permissions", params)
			  success(JSON.stringify(params))();
		  });
		  console.log(permissions,typeof permissions)
		  JBridge.requestPermission(permissions, "2", callback);
	  };
  };
})(PS["Engineering.OS.Permission"] = PS["Engineering.OS.Permission"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var $foreign = PS["Engineering.OS.Permission"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Control_Monad_Free = PS["Control.Monad.Free"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Show = PS["Data.Show"];
  var Data_String = PS["Data.String"];
  var Data_String_CodeUnits = PS["Data.String.CodeUnits"];
  var Data_String_Pattern = PS["Data.String.Pattern"];
  var Data_Tuple = PS["Data.Tuple"];
  var Effect = PS["Effect"];
  var Effect_Aff = PS["Effect.Aff"];
  var Effect_Class = PS["Effect.Class"];
  var Effect_Exception = PS["Effect.Exception"];
  var Foreign = PS["Foreign"];
  var Foreign_Class = PS["Foreign.Class"];
  var Foreign_Generic = PS["Foreign.Generic"];
  var Prelude = PS["Prelude"];
  var Presto_Core_Types_Language_Flow = PS["Presto.Core.Types.Language.Flow"];
  var Presto_Core_Types_Permission = PS["Presto.Core.Types.Permission"];                 
  var toAndroidPermission = function (v) {
      if (v instanceof Presto_Core_Types_Permission.PermissionSendSms) {
          return "android.permission.SEND_SMS";
      };
      if (v instanceof Presto_Core_Types_Permission.PermissionReadPhoneState) {
          return "android.permission.READ_PHONE_STATE";
      };
      if (v instanceof Presto_Core_Types_Permission.PermissionWriteStorage) {
          return "android.permission.WRITE_EXTERNAL_STORAGE";
      };
      if (v instanceof Presto_Core_Types_Permission.PermissionReadStorage) {
          return "android.permission.READ_EXTERNAL_STORAGE";
      };
      if (v instanceof Presto_Core_Types_Permission.PermissionCamera) {
          return "android.permission.CAMERA";
      };
      if (v instanceof Presto_Core_Types_Permission.PermissionLocation) {
          return "android.permission.ACCESS_FINE_LOCATION";
      };
      if (v instanceof Presto_Core_Types_Permission.PermissionCoarseLocation) {
          return "android.permission.ACCESS_COARSE_LOCATION";
      };
      if (v instanceof Presto_Core_Types_Permission.PermissionContacts) {
          return "android.permission.READ_CONTACTS";
      };
      throw new Error("Failed pattern match at Engineering.OS.Permission (line 27, column 1 - line 27, column 44): " + [ v.constructor.name ]);
  }; 
  var requestPermissions = function (permissions) {
      var toResponse = function (wasGranted) {
          if (wasGranted) {
              return Presto_Core_Types_Permission.PermissionGranted.value;
          };
          return Presto_Core_Types_Permission.PermissionDeclined.value;
      };
      var jPermission = Data_Functor.map(Data_Functor.functorArray)(toAndroidPermission)(permissions);
      return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Aff.makeAff(function (cb) {
          return Control_Apply.applySecond(Effect.applyEffect)($foreign["requestPermission'"](function ($29) {
              return cb(Data_Either.Left.create($29));
          }, function ($30) {
              return cb(Data_Either.Right.create($30));
          }, Data_Show.show(Data_Show.showArray(Data_Show.showString))(jPermission)))(Control_Applicative.pure(Effect.applicativeEffect)(Effect_Aff.nonCanceler));
      }))(function (v) {
          var v1 = Control_Monad_Except.runExcept(Foreign_Generic.decodeJSON(Foreign_Class.arrayDecode(Foreign_Class.booleanDecode))(v));
          if (v1 instanceof Data_Either.Right) {
              return Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Array.zip(permissions)(Data_Functor.map(Data_Functor.functorArray)(toResponse)(v1.value0)));
          };
          if (v1 instanceof Data_Either.Left) {
              return Control_Monad_Error_Class.throwError(Effect_Aff.monadThrowAff)(Effect_Exception.error(Data_Show.show(Data_List_Types.showNonEmptyList(Foreign.showForeignError))(v1.value0)));
          };
          throw new Error("Failed pattern match at Engineering.OS.Permission (line 75, column 3 - line 77, column 46): " + [ v1.constructor.name ]);
      });
  };
  var getPermissionStatus = function (permission) {
      return function __do() {
          var v = $foreign["getPermissionStatus'"](Data_Array.singleton(toAndroidPermission(permission)))();
          return Data_String_CodeUnits.contains("true")(v);
      };
  };   
  var allM = function (dictMonadRec) {
      return function (p) {
          var go = function (v) {
              if (v instanceof Data_List_Types.Nil) {
                  return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Done(true));
              };
              if (v instanceof Data_List_Types.Cons) {
                  return Control_Bind.ifM((dictMonadRec.Monad0()).Bind1())(p(v.value0))(Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Loop(v.value1)))(Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Done(false)));
              };
              throw new Error("Failed pattern match at Engineering.OS.Permission (line 84, column 3 - line 84, column 31): " + [ v.constructor.name ]);
          };
          return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go);
      };
  };
  var checkIfPermissionsGranted = function (permissions) {
      return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(allM(Control_Monad_Rec_Class.monadRecEffect)(getPermissionStatus)(Data_List.fromFoldable(Data_Foldable.foldableArray)(permissions))))(function (v) {
          return Control_Applicative.pure(Effect_Aff.applicativeAff)((function () {
              if (v) {
                  return Presto_Core_Types_Permission.PermissionGranted.value;
              };
              return Presto_Core_Types_Permission.PermissionDeclined.value;
          })());
      });
  };
  exports["toAndroidPermission"] = toAndroidPermission;
  exports["getPermissionStatus"] = getPermissionStatus;
  exports["checkIfPermissionsGranted"] = checkIfPermissionsGranted;
  exports["requestPermissions"] = requestPermissions;
  exports["allM"] = allM;
})(PS["Engineering.OS.Permission"] = PS["Engineering.OS.Permission"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Control_Monad_Free = PS["Control.Monad.Free"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Effect_Aff = PS["Effect.Aff"];
  var Effect_Exception = PS["Effect.Exception"];
  var Foreign = PS["Foreign"];
  var Foreign_Class = PS["Foreign.Class"];
  var Prelude = PS["Prelude"];
  var Presto_Core_Types_API = PS["Presto.Core.Types.API"];
  var Presto_Core_Types_Language_Interaction = PS["Presto.Core.Types.Language.Interaction"];                 
  var interpretAPI = function (apiRunner) {
      return function (v) {
          var v1 = Control_Monad_Except.runExcept(Foreign_Class.decode(Presto_Core_Types_API.decodeRequestG)(v.value0));
          if (v1 instanceof Data_Either.Left) {
              return Control_Monad_Error_Class.throwError(Effect_Aff.monadThrowAff)(Effect_Exception.error("apiInteract is broken: " + Data_Show.show(Data_List_Types.showNonEmptyList(Foreign.showForeignError))(v1.value0)));
          };
          if (v1 instanceof Data_Either.Right) {
              return Control_Bind.bind(Effect_Aff.bindAff)(apiRunner(v1.value0))(function (v2) {
                  return Control_Applicative.pure(Effect_Aff.applicativeAff)(v.value1(Presto_Core_Types_Language_Interaction.ForeignOut(Foreign_Class.encode(Foreign_Class.stringEncode)(v2))));
              });
          };
          throw new Error("Failed pattern match at Presto.Core.Language.Runtime.API (line 22, column 3 - line 27, column 45): " + [ v1.constructor.name ]);
      };
  };
  var runAPIInteraction = function (apiRunner) {
      return Control_Monad_Free.foldFree(Effect_Aff.monadRecAff)(interpretAPI(apiRunner));
  };
  exports["runAPIInteraction"] = runAPIInteraction;
})(PS["Presto.Core.Language.Runtime.API"] = PS["Presto.Core.Language.Runtime.API"] || {});
(function(exports) {exports.getValueFromLocalStoreImpl = function(key) {
    return JBridge.getFromSharedPrefs(key);
  };

  exports.setValueToLocalStoreImpl = function(key, value) {
    JBridge.setInSharedPrefs(key, value);
  };
})(PS["Presto.Core.LocalStorage"] = PS["Presto.Core.LocalStorage"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var $foreign = PS["Presto.Core.LocalStorage"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Effect_Aff = PS["Effect.Aff"];
  var Effect_Class = PS["Effect.Class"];
  var Effect_Uncurried = PS["Effect.Uncurried"];
  var Prelude = PS["Prelude"];                 
  var setValueToLocalStore = function (k) {
      return function (v) {
          return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(function () {
              return $foreign.setValueToLocalStoreImpl(k, v);
          });
      };
  };
  var getValueFromLocalStore = function (k) {
      var v = Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(function () {
          return $foreign.getValueFromLocalStoreImpl(k);
      });
      return Control_Bind.ifM(Effect_Aff.bindAff)(Data_Functor.map(Effect_Aff.functorAff)(Data_Eq.eq(Data_Eq.eqString)("__failed"))(v))(Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Maybe.Nothing.value))(Data_Functor.map(Effect_Aff.functorAff)(Data_Maybe.Just.create)(v));
  };
  exports["getValueFromLocalStore"] = getValueFromLocalStore;
  exports["setValueToLocalStore"] = setValueToLocalStore;
})(PS["Presto.Core.LocalStorage"] = PS["Presto.Core.LocalStorage"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Control_Monad_Free = PS["Control.Monad.Free"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Monad_State_Trans = PS["Control.Monad.State.Trans"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Parallel = PS["Control.Parallel"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Exists = PS["Data.Exists"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Show = PS["Data.Show"];
  var Data_Tuple = PS["Data.Tuple"];
  var Effect = PS["Effect"];
  var Effect_Aff = PS["Effect.Aff"];
  var Effect_Aff_AVar = PS["Effect.Aff.AVar"];
  var Effect_Exception = PS["Effect.Exception"];
  var Foreign = PS["Foreign"];
  var Foreign_JSON = PS["Foreign.JSON"];
  var Foreign_Object = PS["Foreign.Object"];
  var Global_Unsafe = PS["Global.Unsafe"];
  var Prelude = PS["Prelude"];
  var Presto_Core_Language_Runtime_API = PS["Presto.Core.Language.Runtime.API"];
  var Presto_Core_LocalStorage = PS["Presto.Core.LocalStorage"];
  var Presto_Core_Types_Language_Flow = PS["Presto.Core.Types.Language.Flow"];
  var Presto_Core_Types_Language_Interaction = PS["Presto.Core.Types.Language.Interaction"];
  var Presto_Core_Types_Language_Storage = PS["Presto.Core.Types.Language.Storage"];
  var Presto_Core_Types_Permission = PS["Presto.Core.Types.Permission"];                 
  var PermissionRunner = (function () {
      function PermissionRunner(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      PermissionRunner.create = function (value0) {
          return function (value1) {
              return new PermissionRunner(value0, value1);
          };
      };
      return PermissionRunner;
  })();
  var Runtime = (function () {
      function Runtime(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      Runtime.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new Runtime(value0, value1, value2);
              };
          };
      };
      return Runtime;
  })();
  var updateState = function (key) {
      return function (value) {
          return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Effect_Aff.monadAff))(Control_Monad_State_Class.get(Control_Monad_State_Trans.monadStateStateT(Effect_Aff.monadAff)))(function (v) {
              return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Effect_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(Effect_Aff.monadAff)(Effect_Aff_AVar.take(v)))(function (v1) {
                  var st$prime = Foreign_Object.insert(key)(value)(v1);
                  return Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(Effect_Aff.monadAff)(Effect_Aff_AVar.put(st$prime)(v));
              });
          });
      };
  };
  var runErrorHandler = function (v) {
      if (v instanceof Presto_Core_Types_Language_Flow.ThrowError) {
          return Control_Monad_Error_Class.throwError(Control_Monad_State_Trans.monadThrowStateT(Effect_Aff.monadThrowAff))(Effect_Exception.error(v.value0));
      };
      if (v instanceof Presto_Core_Types_Language_Flow.ReturnResult) {
          return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Effect_Aff.monadAff))(v.value0);
      };
      throw new Error("Failed pattern match at Presto.Core.Language.Runtime.Interpreter (line 79, column 1 - line 79, column 63): " + [ v.constructor.name ]);
  };
  var readState = Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Effect_Aff.monadAff))(Control_Monad_State_Class.get(Control_Monad_State_Trans.monadStateStateT(Effect_Aff.monadAff)))(function ($99) {
      return Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(Effect_Aff.monadAff)(Effect_Aff_AVar.read($99));
  });
  var interpretUI = function (uiRunner) {
      return function (v) {
          return Control_Bind.bind(Effect_Aff.bindAff)(uiRunner(Global_Unsafe.unsafeStringify(v.value0)))(function (v1) {
              var v2 = Control_Monad_Except.runExcept(Foreign_JSON.parseJSON(v1));
              if (v2 instanceof Data_Either.Right) {
                  return Control_Applicative.pure(Effect_Aff.applicativeAff)(v.value1(v2.value0));
              };
              if (v2 instanceof Data_Either.Left) {
                  return Control_Monad_Error_Class.throwError(Effect_Aff.monadThrowAff)(Effect_Exception.error(Data_Show.show(Data_List_Types.showNonEmptyList(Foreign.showForeignError))(v2.value0)));
              };
              throw new Error("Failed pattern match at Presto.Core.Language.Runtime.Interpreter (line 63, column 3 - line 65, column 46): " + [ v2.constructor.name ]);
          });
      };
  };
  var runUIInteraction = function (uiRunner) {
      return Control_Monad_Free.foldFree(Effect_Aff.monadRecAff)(interpretUI(uiRunner));
  };
  var run = function (runtime) {
      return Control_Monad_Free.foldFree(Control_Monad_State_Trans.monadRecStateT(Effect_Aff.monadRecAff))(function (v) {
          return Data_Exists.runExists(interpret(runtime))(v);
      });
  };
  var interpret = function (v) {
      return function (v1) {
          if (v1 instanceof Presto_Core_Types_Language_Flow.CallAPI) {
              return Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(Effect_Aff.monadAff)(Control_Bind.bind(Effect_Aff.bindAff)(Presto_Core_Language_Runtime_API.runAPIInteraction(v.value2)(v1.value0))(function ($100) {
                  return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1($100));
              }));
          };
          if (v1 instanceof Presto_Core_Types_Language_Flow.RunUI) {
              return Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(Effect_Aff.monadAff)(Control_Bind.bind(Effect_Aff.bindAff)(runUIInteraction(v.value0)(v1.value0))(function ($101) {
                  return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1($101));
              }));
          };
          if (v1 instanceof Presto_Core_Types_Language_Flow.ForkUI) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(Effect_Aff.monadAff))(Data_Functor["void"](Control_Monad_State_Trans.functorStateT(Effect_Aff.functorAff))(Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(Effect_Aff.monadAff)(Effect_Aff.forkAff(runUIInteraction(v.value0)(v1.value0)))))(function () {
                  return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Effect_Aff.monadAff))(v1.value1);
              });
          };
          if (v1 instanceof Presto_Core_Types_Language_Flow.Get && v1.value0 instanceof Presto_Core_Types_Language_Flow.LocalStore) {
              return Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(Effect_Aff.monadAff)(Control_Bind.bind(Effect_Aff.bindAff)(Presto_Core_LocalStorage.getValueFromLocalStore(v1.value1))(function ($102) {
                  return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value2($102));
              }));
          };
          if (v1 instanceof Presto_Core_Types_Language_Flow.Get && v1.value0 instanceof Presto_Core_Types_Language_Flow.InMemoryStore) {
              return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Effect_Aff.monadAff))(readState)(function ($103) {
                  return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Effect_Aff.monadAff))(v1.value2(Foreign_Object.lookup(v1.value1)($103)));
              });
          };
          if (v1 instanceof Presto_Core_Types_Language_Flow["Set"] && v1.value0 instanceof Presto_Core_Types_Language_Flow.LocalStore) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(Effect_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(Effect_Aff.monadAff)(Presto_Core_LocalStorage.setValueToLocalStore(v1.value1)(v1.value2)))(function () {
                  return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Effect_Aff.monadAff))(v1.value3);
              });
          };
          if (v1 instanceof Presto_Core_Types_Language_Flow["Set"] && v1.value0 instanceof Presto_Core_Types_Language_Flow.InMemoryStore) {
              return Control_Apply.applySecond(Control_Monad_State_Trans.applyStateT(Effect_Aff.monadAff))(updateState(v1.value1)(v1.value2))(Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Effect_Aff.monadAff))(v1.value3));
          };
          if (v1 instanceof Presto_Core_Types_Language_Flow.Fork) {
              return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Effect_Aff.monadAff))(forkFlow(v)(v1.value0))(function ($104) {
                  return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Effect_Aff.monadAff))(v1.value1($104));
              });
          };
          if (v1 instanceof Presto_Core_Types_Language_Flow.DoAff) {
              return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Effect_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(Effect_Aff.monadAff)(v1.value0))(function ($105) {
                  return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Effect_Aff.monadAff))(v1.value1($105));
              });
          };
          if (v1 instanceof Presto_Core_Types_Language_Flow.InitUIWithScreen) {
              return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Effect_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(Effect_Aff.monadAff)(v1.value0))(function ($106) {
                  return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Effect_Aff.monadAff))(v1.value1($106));
              });
          };
          if (v1 instanceof Presto_Core_Types_Language_Flow.InitUI) {
              return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Effect_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(Effect_Aff.monadAff)(v1.value0))(function ($107) {
                  return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Effect_Aff.monadAff))(v1.value1($107));
              });
          };
          if (v1 instanceof Presto_Core_Types_Language_Flow.RunScreen) {
              return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Effect_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(Effect_Aff.monadAff)(v1.value0))(function ($108) {
                  return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Effect_Aff.monadAff))(v1.value1($108));
              });
          };
          if (v1 instanceof Presto_Core_Types_Language_Flow.ShowScreen) {
              return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Effect_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(Effect_Aff.monadAff)(v1.value0))(function ($109) {
                  return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Effect_Aff.monadAff))(v1.value1($109));
              });
          };
          if (v1 instanceof Presto_Core_Types_Language_Flow.Await) {
              return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Effect_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(Effect_Aff.monadAff)(Effect_Aff_AVar.read(v1.value0)))(function ($110) {
                  return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Effect_Aff.monadAff))(v1.value1($110));
              });
          };
          if (v1 instanceof Presto_Core_Types_Language_Flow.Delay) {
              return Control_Apply.applySecond(Control_Monad_State_Trans.applyStateT(Effect_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(Effect_Aff.monadAff)(Effect_Aff.delay(v1.value0)))(Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Effect_Aff.monadAff))(v1.value1));
          };
          if (v1 instanceof Presto_Core_Types_Language_Flow.OneOf) {
              var parFlow = function (st) {
                  return function (flow) {
                      return Control_Monad_State_Trans.runStateT(run(v)(flow))(st);
                  };
              };
              return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Effect_Aff.monadAff))(Control_Monad_State_Class.get(Control_Monad_State_Trans.monadStateStateT(Effect_Aff.monadAff)))(function (v2) {
                  return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Effect_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(Effect_Aff.monadAff)(Control_Parallel.parOneOf(Effect_Aff.parallelAff)(Effect_Aff.alternativeParAff)(Data_Foldable.foldableArray)(Data_Functor.functorArray)(Data_Functor.map(Data_Functor.functorArray)(parFlow(v2))(v1.value0))))(function (v3) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(Effect_Aff.monadAff))(Control_Monad_State_Class.put(Control_Monad_State_Trans.monadStateStateT(Effect_Aff.monadAff))(v3.value1))(function () {
                          return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Effect_Aff.monadAff))(v1.value1(v3.value0));
                      });
                  });
              });
          };
          if (v1 instanceof Presto_Core_Types_Language_Flow.HandleError) {
              return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Effect_Aff.monadAff))(Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Effect_Aff.monadAff))(run(v)(v1.value0))(runErrorHandler))(function ($111) {
                  return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Effect_Aff.monadAff))(v1.value1($111));
              });
          };
          if (v1 instanceof Presto_Core_Types_Language_Flow.CheckPermissions) {
              return Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(Effect_Aff.monadAff)(Control_Bind.bind(Effect_Aff.bindAff)(v.value1.value0(v1.value0))(function ($112) {
                  return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1($112));
              }));
          };
          if (v1 instanceof Presto_Core_Types_Language_Flow.TakePermissions) {
              return Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(Effect_Aff.monadAff)(Control_Bind.bind(Effect_Aff.bindAff)(v.value1.value1(v1.value0))(function ($113) {
                  return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1($113));
              }));
          };
          throw new Error("Failed pattern match at Presto.Core.Language.Runtime.Interpreter (line 83, column 1 - line 83, column 64): " + [ v.constructor.name, v1.constructor.name ]);
      };
  };
  var forkFlow = function (rt) {
      return function (flow) {
          return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Effect_Aff.monadAff))(Control_Monad_State_Class.get(Control_Monad_State_Trans.monadStateStateT(Effect_Aff.monadAff)))(function (v) {
              return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Effect_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(Effect_Aff.monadAff)(Effect_Aff_AVar.empty))(function (v1) {
                  var m = Control_Monad_State_Trans.evalStateT(Effect_Aff.functorAff)(run(rt)(flow))(v);
                  return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Effect_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(Effect_Aff.monadAff)(Effect_Aff.forkAff(Control_Bind.bind(Effect_Aff.bindAff)(m)(Data_Function.flip(Effect_Aff_AVar.put)(v1)))))(function (v2) {
                      return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Effect_Aff.monadAff))(v1);
                  });
              });
          });
      };
  };
  exports["Runtime"] = Runtime;
  exports["PermissionRunner"] = PermissionRunner;
  exports["run"] = run;
})(PS["Presto.Core.Language.Runtime.Interpreter"] = PS["Presto.Core.Language.Runtime.Interpreter"] || {});
(function(exports) {
  // Generated by purs version 0.12.3
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_State = PS["Control.Monad.State"];
  var Control_Monad_State_Trans = PS["Control.Monad.State.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Core = PS["Core"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Unit = PS["Data.Unit"];
  var Effect = PS["Effect"];
  var Effect_Aff = PS["Effect.Aff"];
  var Effect_Aff_AVar = PS["Effect.Aff.AVar"];
  var Engineering_Helpers_Commons = PS["Engineering.Helpers.Commons"];
  var Engineering_OS_Permission = PS["Engineering.OS.Permission"];
  var Foreign_Object = PS["Foreign.Object"];
  var Prelude = PS["Prelude"];
  var Presto_Core_Language_Runtime_API = PS["Presto.Core.Language.Runtime.API"];
  var Presto_Core_Language_Runtime_Interpreter = PS["Presto.Core.Language.Runtime.Interpreter"];                 
  var runFreeAndNativeFlows = function (dictDiscard) {
      return function (dictBind) {
          return function (dictApplicative) {
              return function (freeFlow) {
                  return Control_Bind.discard(dictDiscard)(dictBind)(freeFlow)(function () {
                      return Control_Applicative.pure(dictApplicative)(Data_Unit.unit);
                  });
              };
          };
      };
  };
  var main = (function () {
      var uiRunner = function (a) {
          return Effect_Aff.makeAff(function (cb) {
              return function __do() {
                  var v = Engineering_Helpers_Commons["showUI'"](function ($6) {
                      return cb(Data_Either.Right.create($6));
                  }, "")();
                  return Effect_Aff.nonCanceler;
              };
          });
      };
      var permissionRunner = new Presto_Core_Language_Runtime_Interpreter.PermissionRunner(Engineering_OS_Permission.checkIfPermissionsGranted, Engineering_OS_Permission.requestPermissions);
      var apiRunner = function (request) {
          return Effect_Aff.makeAff(function (cb) {
              return function __do() {
                  var v = Engineering_Helpers_Commons["callAPI'"](function ($7) {
                      return cb(Data_Either.Left.create($7));
                  })(function ($8) {
                      return cb(Data_Either.Right.create($8));
                  })(Engineering_Helpers_Commons.mkNativeRequest(request))();
                  return Effect_Aff.nonCanceler;
              };
          });
      };
      var runtime = new Presto_Core_Language_Runtime_Interpreter.Runtime(uiRunner, permissionRunner, apiRunner);
      var freeFlow = Control_Monad_State_Trans.evalStateT(Effect_Aff.functorAff)(Presto_Core_Language_Runtime_Interpreter.run(runtime)(Core.appFlow(true)));
      return function __do() {
          var v = Effect_Aff.launchAff_(Control_Bind.bind(Effect_Aff.bindAff)(Effect_Aff_AVar["new"](Foreign_Object.empty))(function ($9) {
              return runFreeAndNativeFlows(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Aff.applicativeAff)(freeFlow($9));
          }))();
          return Data_Unit.unit;
      };
  })();
  exports["runFreeAndNativeFlows"] = runFreeAndNativeFlows;
  exports["main"] = main;
})(PS["Main"] = PS["Main"] || {});
module.exports = PS;
